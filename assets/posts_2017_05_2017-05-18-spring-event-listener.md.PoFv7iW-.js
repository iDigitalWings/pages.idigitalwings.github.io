import{_ as i,a,af as n,o as p}from"./chunks/framework.C87LdZyP.js";const A=JSON.parse('{"title":"Spring Event Listener","description":"","frontmatter":{"title":"Spring Event Listener","date":"2017-05-18T00:00:00.000Z","tags":["spring","event-listener","spring-boot","java"]},"headers":[],"relativePath":"posts/2017/05/2017-05-18-spring-event-listener.md","filePath":"posts/2017/05/2017-05-18-spring-event-listener.md","lastUpdated":1718193786000}'),l={name:"posts/2017/05/2017-05-18-spring-event-listener.md"};function t(h,s,k,e,r,d){return p(),a("div",null,s[0]||(s[0]=[n(`<p>Spring提供了<code>ApplicationEvent</code>，可以发送事件并同步异步处理：</p><div class="language-scala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SpringBootApplication</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> org</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">springframework</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">annotation</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Bean</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> org</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">springframework</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ApplicationEventMulticaster</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SimpleApplicationEventMulticaster</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> org</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">springframework</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">core</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">task</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SimpleAsyncTaskExecutor</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> org</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">springframework</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">scheduling</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">support</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">TaskUtils</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Bean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> applicationEventMulticaster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> ApplicationEventMulticaster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    val</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> eventMulticaster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SimpleApplicationEventMulticaster</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    val</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> executor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SimpleAsyncTaskExecutor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    executor.setConcurrencyLimit(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    eventMulticaster.setTaskExecutor(executor)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    eventMulticaster.setErrorHandler(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">TaskUtils</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">LOG_AND_SUPPRESS_ERROR_HANDLER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    eventMulticaster</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Application</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  val</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SpringApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.run(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">classOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Application</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  val</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> publisher</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ctx.getBean(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">classOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Producer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  List</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.range(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">).foreach((i) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> publisher.create(i))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><div class="language-scala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> WaitEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Component</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Producer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">val</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> publisher</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> ApplicationEventPublisher</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> create</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Unit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    publisher.publishEvent(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">WaitEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(id))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">EventListener</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> listen</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">waitEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">WaitEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Unit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    print(waitEvent.count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (waitEvent.count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      println()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>测试的时候使用了异步事件，并发数是<code>10</code>,程序启动之后发送了<code>1000</code>个<code>WaitEvent</code>，每个Event处理的时候线程暂停一秒钟。</p><p>测试结果如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>1 2 3 4 5 6 7 8 9 10</span></span>
<span class="line"><span>11 12 13 14 15 16 17 18 19 20</span></span>
<span class="line"><span>21 22 23 24 25 26 27 28 29 30</span></span>
<span class="line"><span>31 32 33 34 35 36 37 38 39 40</span></span>
<span class="line"><span>41 42 43 44 45 46 47 48 49 50</span></span>
<span class="line"><span>51 52 53 54 55 56 57 58 59 60</span></span>
<span class="line"><span>61 62 63 64 65 66 67 68 69 70</span></span>
<span class="line"><span>71 72 73 74 75 76 77 78 79 80</span></span>
<span class="line"><span>81 82 83 84 85 86 87 88 89 90</span></span></code></pre></div><p>如果对并发数字不加限制，则会打印出：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>1 3 2 4 6 9 10</span></span>
<span class="line"><span>5 7 8 11 12 13 14 15 16 17 18 19 20</span></span>
<span class="line"><span>21 22 23 25 26 24 27 28 29 30</span></span>
<span class="line"><span>31 32 33 34 35 36 37 38 40</span></span>
<span class="line"><span>41 42 43 44 46 45 39 47 96 67 73 66 95 83 85 93 89 62 61 58 75 70</span></span>
<span class="line"><span>77 74 69 72 80</span></span>
<span class="line"><span>78 76 87 68 98 81 91 65 64 60</span></span>
<span class="line"><span>79 82 99 97 94 56 57 55 52 88 71 84 90</span></span>
<span class="line"><span>86 53 54 92 59 63 48 51 49 50</span></span></code></pre></div><p>如果把并发线程改到<code>10,000</code>,消息数也改到<code>10,000</code>,</p><p>然后，本次测试的时候机器会卡，等很久消息才会一下子处理，消息没有丢失。</p><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>`,12)]))}const y=i(l,[["render",t]]);export{A as __pageData,y as default};
