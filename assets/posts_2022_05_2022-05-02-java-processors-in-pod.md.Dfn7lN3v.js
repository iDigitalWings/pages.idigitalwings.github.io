import{_ as e,a,af as t,o}from"./chunks/framework.C87LdZyP.js";const u=JSON.parse('{"title":"Java 应用在容器（Kubernetes）中的 Processor 数量","description":"","frontmatter":{"title":"Java 应用在容器（Kubernetes）中的 Processor 数量","date":"2022-05-02T00:00:00.000Z","tags":["java","k8s"],"category":["java"]},"headers":[],"relativePath":"posts/2022/05/2022-05-02-java-processors-in-pod.md","filePath":"posts/2022/05/2022-05-02-java-processors-in-pod.md","lastUpdated":1718173059000}'),i={name:"posts/2022/05/2022-05-02-java-processors-in-pod.md"};function r(n,s,p,l,c,d){return o(),a("div",null,s[0]||(s[0]=[t('<p>我们都知道 Java 中 <code>Runtime.getRuntime().availableProcessors()</code> 是获取可用的处理器数字。 但是在容器环境下，如果没有进行 limit 设置，获取的 Processors 可能是 1，可通过下面方法设置。</p><p>给容器的 JVM 增加参数：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-XX:ActiveProcessorCount</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=[host_cpu_count]</span></span></code></pre></div><p>也可以更改容器的资源限制，比如在 Kubernetes 中：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">resources.requests.cpu</span></span></code></pre></div><hr><ul><li><a href="https://blog.omerh.me/post/2020/03/running_jvm_kubernetes/" target="_blank" rel="noreferrer">https://blog.omerh.me/post/2020/03/running_jvm_kubernetes/</a></li></ul>',7)]))}const m=e(i,[["render",r]]);export{u as __pageData,m as default};
