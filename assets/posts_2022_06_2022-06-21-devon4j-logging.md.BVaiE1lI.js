import{_ as i,a,af as t,o as n}from"./chunks/framework.C87LdZyP.js";const g=JSON.parse('{"title":"Devon4j: Logging","description":"","frontmatter":{"title":"Devon4j: Logging","date":"2022-06-21T00:00:00.000Z","tags":["devon4j"],"category":["架构"]},"headers":[],"relativePath":"posts/2022/06/2022-06-21-devon4j-logging.md","filePath":"posts/2022/06/2022-06-21-devon4j-logging.md","lastUpdated":1718173059000}'),l={name:"posts/2022/06/2022-06-21-devon4j-logging.md"};function e(h,s,p,k,r,o){return n(),a("div",null,s[0]||(s[0]=[t(`<p>我们建议使用<a href="http://www.slf4j.org/" target="_blank" rel="noreferrer">SLF4J</a>作为日志记录 API， 这已成为 Java 中的事实标准，因为它的设计比<code>java.util.logging</code>JDK 提供的要好得多。 SLF4J 有多种实现。对于 Spring 应用程序，我们推荐的实现是<a href="http://logback.qos.ch/" target="_blank" rel="noreferrer">Logback</a>。 Quarkus 使用 JBoss Logging，它为 SLF4J 提供了 JBoss Log Manager 实现。 有关登录 Quarkus 的更多信息，请参阅<a href="https://quarkus.io/guides/logging" target="_blank" rel="noreferrer">Quarkus 日志记录指南</a>。</p><h2 id="日志依赖" tabindex="-1">日志依赖 <a class="header-anchor" href="#日志依赖" aria-label="Permalink to &quot;日志依赖&quot;">​</a></h2><p>要在 Spring 应用程序中使用 Logback，您需要包含以下依赖项：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">&lt;!-- SLF4J as logging API --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;org.slf4j&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;slf4j-api&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">&lt;!-- Logback as logging implementation  --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;ch.qos.logback&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;logback-classic&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">&lt;!-- JSON logging for cloud-native log monitoring --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;net.logstash.logback&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;logstash-logback-encoder&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span></code></pre></div><p>在 devon4j 中，这些依赖项由<a href="https://github.com/devonfw/devon4j/tree/master/modules/logging" target="_blank" rel="noreferrer">devon4j-logging 模块</a>提供。</p><p>在 Quarkus 中，SLF4J 和 <a href="https://github.com/jboss-logging/slf4j-jboss-logmanager" target="_blank" rel="noreferrer"><code>slf4j-jboss-logmanager</code></a>直接包含在 Quarkus 核心运行时中，可以开箱即用。</p><h2 id="日志访问" tabindex="-1">日志访问 <a class="header-anchor" href="#日志访问" aria-label="Permalink to &quot;日志访问&quot;">​</a></h2><p>从代码访问 Logger 的一般模式是使用以下模式为每个类创建一个静态 Logger 实例：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.slf4j.Logger;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.slf4j.LoggerFactory;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MyClass</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> LOG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> LoggerFactory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(MyClass.class);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>有关如何使用记录器 API 的详细文档，请查看<a href="http://www.slf4j.org/manual.html" target="_blank" rel="noreferrer">SLF4j 手册</a>。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果您使用的是<a href="https://github.com/devonfw/ide" target="_blank" rel="noreferrer">devonfw-ide</a>和 Eclipse，您只需键入<code>LOG</code>并点击<code>[ctrl][space]</code>以将包含导入的代码模式插入到您的类中。</p></div><h3 id="lombok" tabindex="-1">Lombok <a class="header-anchor" href="#lombok" aria-label="Permalink to &quot;Lombok&quot;">​</a></h3><p>如果您使用的是 Lombok ，您可以简单地在您的类中使用<a href="https://projectlombok.org/api/lombok/extern/slf4j/Slf4j.html" target="_blank" rel="noreferrer"><code>@Slf4j</code></a>注释。 这会导致 Lombok 为您生成 Logger 实例。</p><h2 id="日志级别" tabindex="-1">日志级别 <a class="header-anchor" href="#日志级别" aria-label="Permalink to &quot;日志级别&quot;">​</a></h2><p>我们使用对日志级别的共同理解，如下表所示。这有助于更好地维护和操作系统。</p><p>表 35. 日志级别</p><table tabindex="0"><thead><tr><th><strong>日志级别</strong></th><th><strong>描述</strong></th><th><strong>影响</strong></th><th><strong>激活的环境</strong></th></tr></thead><tbody><tr><td>-------------------------------------------------------------------------------------------------------------</td><td></td><td></td><td></td></tr><tr><td>FATAL</td><td>仅用于阻止应用程序运行的致命错误（例如启动失败或需要关闭/重新启动）</td><td>操作员必须立即做出响应</td><td>全部</td></tr><tr><td>ERROR</td><td>表示由于技术问题处理失败的异常错误。</td><td>运营商应检查已知问题，否则通知开发</td><td>全部</td></tr><tr><td>WARNING</td><td>某些事情没有按预期工作的情况。例如，发生业务异常或用户验证失败。</td><td>无需直接响应。用于问题分析。</td><td>全部</td></tr><tr><td>INFO</td><td>重要信息，例如上下文、持续时间、请求或过程的成功/失败</td><td>无需直接响应。用于分析。</td><td>全部</td></tr><tr><td>DEBUG</td><td>为调试问题提供额外上下文的开发信息。</td><td>无需直接响应。用于分析。</td><td>开发和测试</td></tr><tr><td>TRACE</td><td>像 DEBUG 但详尽的信息和非常频繁运行的代码。通常会导致大型日志文件。</td><td>无需直接响应。用于问题分析。</td><td>无（默认关闭）</td></tr></tbody></table><p>异常（及其堆栈跟踪）只应记录<code>FATAL</code>或<code>ERROR</code>级别。对于业务异常，通常<code>WARNING</code>包含异常消息就足够了。</p><h3 id="logback-的配置" tabindex="-1">Logback 的配置 <a class="header-anchor" href="#logback-的配置" aria-label="Permalink to &quot;Logback 的配置&quot;">​</a></h3><p>logback 的配置是通过放入应用程序<code>src/main/resources</code>目录的<code>logback.xml</code>文件进行的。 有关详细信息，请参阅<a href="http://logback.qos.ch/manual/configuration.html" target="_blank" rel="noreferrer">logback 配置手册</a>。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Logback 还允许使用您放入<code>src/test/resources</code>或放入测试依赖项中的<code>logback-test.xml</code>文件来进行配置。</p></div><h3 id="quarkus-中的配置" tabindex="-1">Quarkus 中的配置 <a class="header-anchor" href="#quarkus-中的配置" aria-label="Permalink to &quot;Quarkus 中的配置&quot;">​</a></h3><p>您可以在<code>application.properties</code>文件中设置几个选项来配置 Quarkus 中记录器的行为。有关详细概述，请参阅<a href="https://quarkus.io/guides/logging%23runtime-configuration" target="_blank" rel="noreferrer">Quarkus 指南</a>的相应部分。</p><h2 id="json-日志记录" tabindex="-1">JSON 日志记录 <a class="header-anchor" href="#json-日志记录" aria-label="Permalink to &quot;JSON 日志记录&quot;">​</a></h2><p>为了与log-monitoring 轻松集成，我们建议您的应用按照<a href="https://jsonlines.org/" target="_blank" rel="noreferrer">JSON Lines</a>以 JSON 格式输出到 <code>standard out</code>。</p><p>在 Spring 应用程序中，这可以通过<a href="https://github.com/logstash/logstash-logback-encoder" target="_blank" rel="noreferrer">logstash-logback-encoder</a> 来实现。 在 Quarkus 中，可以使用<a href="https://github.com/quarkusio/quarkus/tree/main/extensions/logging-json" target="_blank" rel="noreferrer">quarkus-logging-json</a>扩展轻松实现 （请参阅<a href="https://quarkus.io/guides/logging%23json-logging" target="_blank" rel="noreferrer">此处</a>了解更多详细信息）。</p><p>这将生成具有以下格式的日志行（为便于阅读而格式化的示例）：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;2000-12-31T23:59:59.999+00:00&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;@version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Processing 4 order(s) for shipment&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;logger_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;com.myapp.order.logic.UcManageOrder&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;thread_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;http-nio-8081-exec-6&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;level&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;INFO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;level_value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;appname&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;myapp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="使用-logstash-将自定义值添加到-json-日志" tabindex="-1">使用 Logstash 将自定义值添加到 JSON 日志 <a class="header-anchor" href="#使用-logstash-将自定义值添加到-json-日志" aria-label="Permalink to &quot;使用 Logstash 将自定义值添加到 JSON 日志&quot;">​</a></h3><p>JSON 编码器甚至支持为您的<a href="https://devonfw.com/website/pages/docs/devonfw-guide_devon4j.wiki_guide-log-monitoring.asciidoc.html" target="_blank" rel="noreferrer">log-monitoring</a>记录自定义属性。 <em>诀窍</em>是使用<code>net.logstash.logback.argument.StructuredArguments</code>类将参数添加到您的日志消息中，例如</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> net.logstash.logback.argument.StructuredArguments.v;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    LOG.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Request with {} and {} took {} ms.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, url), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, statusCode), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;duration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, millis));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">...</span></span></code></pre></div><p>这将生成具有以下属性的 JSON 日志行：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">...</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Request with url=https://api/service/v1/ordermanagement/order and status=200 took duration=251 ms&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;https://api/service/v1/ordermanagement/order&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;200&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;duration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;251&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">...</span></span></code></pre></div><p>正如您可以快速看到的，除了人类可读之外，<code>message</code>还具有结构化属性<code>url</code>、<code>status</code>和<code>duration</code>， 这对于在日志监控中配置仪表板来可视化成功/失败率以及请求的性能非常有价值。</p><h2 id="经典日志文件" tabindex="-1">经典日志文件 <a class="header-anchor" href="#经典日志文件" aria-label="Permalink to &quot;经典日志文件&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>在 devon4j 中，我们强烈建议使用 JSON 日志而不是经典日志文件。以下部分仅涉及使用 Logback 的 devon4j Spring 应用程序。</strong></p></div><p>尽管我们不再建议将经典日志文件写入本地磁盘，但您仍然可以在这里找到我们的方法。</p><h3 id="maven-集成" tabindex="-1">Maven-集成 <a class="header-anchor" href="#maven-集成" aria-label="Permalink to &quot;Maven-集成&quot;">​</a></h3><p>在<code>pom.xml</code>您的应用程序中添加此依赖项：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;com.devonfw.java&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;devon4j-logging&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span></code></pre></div><p>上面的依赖已经为 SLF4J 和 logback 添加了传递依赖。它还带有可以从您的<code>logback.xml</code>文件中包含的配置片段（请参阅<a href="https://github.com/devonfw/devon4j/tree/master/modules/logging/src/main/resources/com/devonfw/logging/logback" target="_blank" rel="noreferrer">配置</a>）。</p><p><code>logback.xml</code>编写常规日志文件可以如下所示：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;?</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">xml</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;1.0&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> encoding</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;UTF-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">?&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">configuration</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> scan</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;true&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> scanPeriod</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;60 seconds&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">property</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> resource</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;com/devonfw/logging/logback/application-logging.properties&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">property</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;appname&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;MyApp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">property</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;logPath&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;../logs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">include</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> resource</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;com/devonfw/logging/logback/appenders-file-all.xml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">include</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> resource</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;com/devonfw/logging/logback/appender-console.xml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">root</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> level</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;DEBUG&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">appender-ref</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;ERROR_APPENDER&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">appender-ref</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;INFO_APPENDER&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">appender-ref</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;DEBUG_APPENDER&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">appender-ref</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;CONSOLE_APPENDER&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">root</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">logger</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;org.springframework&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> level</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;INFO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span></code></pre></div><p><code>logback.xml</code>被配置为使用<code>config/application.properties</code>文件上定义的变量。 在我们的示例中，日志文件路径指向<code>../logs/</code>以便在 bin 文件夹上启动 tomcat 时记录到 tomcat 日志目录。 根据您的自定义需求进行更改。</p><p>清单 13. config/application.properties</p><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">log.dir</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=../logs/</span></span></code></pre></div><h3 id="日志文件" tabindex="-1">日志文件 <a class="header-anchor" href="#日志文件" aria-label="Permalink to &quot;日志文件&quot;">​</a></h3><p>经典方法使用以下日志文件：</p><ul><li><strong>Error Log</strong> ：包括用于检测错误的日志条目。</li><li><strong>Info Log</strong> ：用于分析系统状态和检测瓶颈。</li><li><strong>Debug Log</strong> ：错误检测的详细信息。</li></ul><p>日志文件名模式如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>«LOGTYPE»_log_«HOST»_«APPLICATION»_«TIMESTAMP».log</span></span></code></pre></div><p>表 36. 日志文件名</p><table tabindex="0"><thead><tr><th><strong>元素</strong></th><th><strong>价值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>«LOGTYPE»</td><td>信息、错误、调试</td><td>日志文件类型</td></tr><tr><td>«HOST»</td><td>例如 mywebserver01</td><td>生成日志的服务器名称</td></tr><tr><td>«APPLICATION»</td><td>例如我的应用程序</td><td>导致日志的应用程序名称</td></tr><tr><td>«TIMESTAMP»</td><td>YYYY-MM-DD_HH00</td><td>日志文件的日期</td></tr></tbody></table><p>示例：<code>error_log_mywebserver01_myapp_2013-09-16_0900.log</code></p><p>2013 年 9 月 16 日晚上 9 点在应用程序 myapp 中来自 mywebserver01 的错误日志。</p><h3 id="输出格式" tabindex="-1">输出格式 <a class="header-anchor" href="#输出格式" aria-label="Permalink to &quot;输出格式&quot;">​</a></h3><p>我们对所有日志条目使用以下输出格式，以确保对所有日志文件的日志条目搜索和过滤工作一致：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>[D: «timestamp»] [P: «priority»] [C: «NDC»][T: «thread»][L: «logger»]-[M: «message»]</span></span></code></pre></div><ul><li><strong>D</strong> ：日期（ISO8601 格式的时间戳，例如 2013-09-05 16:40:36,464）</li><li><strong>P</strong> ：优先级（日志级别）</li><li><strong>C</strong> ：Correlation ID（相关ID，用于跨多个系统识别用户的 ID，在应用程序分发时需要）</li><li><strong>T</strong> ：线程（线程名称）</li><li><strong>L</strong> ：记录器名称（使用类名）</li><li><strong>M</strong> ：消息（日志消息）</li></ul><p>例子：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>[D: 2013-09-05 16:40:36,464] [P: DEBUG] [C: 12345] [T: main] [L: my.package.MyClass]-[M: My message...]</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>使用 devon4j-logging 时，默认使用此格式。要在 Quarkus 中实现这种格式，请<code>quarkus.log.console.format=[D: %d] [P: %p] [C: %X] [T: %t] [L: %c] [M: %m]%n</code>在您的属性中进行设置。</p></div><h3 id="correlation-id" tabindex="-1">Correlation ID <a class="header-anchor" href="#correlation-id" aria-label="Permalink to &quot;Correlation ID&quot;">​</a></h3><p>为了将单独的 HTTP 请求与属于同一用户/会话的服务相关联，我们提供了一个名为<code>DiagnosticContextFilter</code>。 此过滤器从 HTTP 标头中获取提供的相关 ID <code>X-Correlation-Id</code>。 如果没有找到，它将生成一个新的相关 id 为<code>UUID</code>。 此相关 ID 作为 MDC 添加到记录器。 因此，它将被包含到当前请求（线程）的任何日志消息中。 诸如<strong>服务调用</strong>之类的其他概念将把这个关联 ID 传递给应用程序环境中的后续调用。 因此，即使在高度分布式的系统中，您也可以通过相关 ID 找到与初始请求相关的所有日志消息。</p><h3 id="安全" tabindex="-1">安全 <a class="header-anchor" href="#安全" aria-label="Permalink to &quot;安全&quot;">​</a></h3><p>为了防止<a href="https://owasp.org/www-community/attacks/Log_Injection" target="_blank" rel="noreferrer">日志伪造</a>攻击， 您可以简单地使用建议的 <strong>JSON 日志</strong> 格式。 否则，您可以使用此处<code>com.devonfw.module.logging.common.impl.SingleLinePatternLayout</code>演示的方法来防止此类攻击。</p>`,66)]))}const c=i(l,[["render",e]]);export{g as __pageData,c as default};
