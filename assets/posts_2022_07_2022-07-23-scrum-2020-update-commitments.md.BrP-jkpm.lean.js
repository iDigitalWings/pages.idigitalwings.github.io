import{_ as a,a as t,af as e,o as m}from"./chunks/framework.C87LdZyP.js";const S=JSON.parse('{"title":"Scrum 指南 2020 更新 - 承诺","description":"","frontmatter":{"title":"Scrum 指南 2020 更新 - 承诺","date":"2022-07-23T00:00:00.000Z","tags":["scrum"],"category":["Scrum"]},"headers":[],"relativePath":"posts/2022/07/2022-07-23-scrum-2020-update-commitments.md","filePath":"posts/2022/07/2022-07-23-scrum-2020-update-commitments.md","lastUpdated":1718173059000}'),c={name:"posts/2022/07/2022-07-23-scrum-2020-update-commitments.md"};function u(p,r,s,o,i,n){return m(),t("div",null,r[0]||(r[0]=[e('<p>随着 2020 年版本的 Scrum 指南，为每个工件添加了承诺。这些承诺提供了一种很好的结构化方式来描述每个工件的一些关键特征。此更改的目的是提供清晰性并使 Scrum 指南更易于阅读和使用。承诺是产品待办列表的产品目标、冲刺待办事项的冲刺目标和增量的完成定义。</p><p>Scrum 指南将承诺描述为：</p><p>“每个工件都包含一个承诺，以确保它提供的信息可以提高透明度和衡量进展的重点。”</p><p>它继续描述承诺在加强经验主义和 Scrum 价值观方面的价值。</p><p>此更改可能会引起本指南读者的以下问题。</p><h3 id="承诺是强制性的吗" tabindex="-1">承诺是强制性的吗？ <a class="header-anchor" href="#承诺是强制性的吗" aria-label="Permalink to &quot;承诺是强制性的吗？&quot;">​</a></h3><p>是的，如果您使用 Scrum，您必须为每个工件提供承诺。但是，如何使该承诺透明化将因具体情况而异。完成和 Sprint 目标的定义始终是强制性的，工件承诺的引入使它们在指南中具有一致的位置。</p><h3 id="缺少承诺时会发生什么" tabindex="-1">缺少承诺时会发生什么？ <a class="header-anchor" href="#缺少承诺时会发生什么" aria-label="Permalink to &quot;缺少承诺时会发生什么？&quot;">​</a></h3><p>如果你忽视承诺，比如忽视 Scrum 的其他元素，那么你就没有在做 Scrum。这并不意味着你错了，但你选择了不遵循 Scrum。这些承诺增加了清晰度和支持透明度，除了产品目标之外，它始终是专业 Scrum 的一部分。如果您当前正在使用产品目标，则将其作为正式的 Scrum 工件可提供更大的透明度，并使 Scrum 变得更好。</p><h3 id="谁制定承诺" tabindex="-1">谁制定承诺？ <a class="header-anchor" href="#谁制定承诺" aria-label="Permalink to &quot;谁制定承诺？&quot;">​</a></h3><p>它们是现有工件的一部分，因此负责该工件的任何人都对该承诺负责。产品目标是与 Scrum 团队合作的产品负责人。Sprint 目标由 Scrum 团队创建。而且，完成的定义是由 Scrum 团队创建的。</p><h3 id="这与-scrum-价值观中的承诺相同吗" tabindex="-1">这与 Scrum 价值观中的承诺相同吗？ <a class="header-anchor" href="#这与-scrum-价值观中的承诺相同吗" aria-label="Permalink to &quot;这与 Scrum 价值观中的承诺相同吗？&quot;">​</a></h3><p>承诺是五个 Scrum 价值观之一。Scrum 指南中对此进行了描述：</p><p>“Scrum 团队致力于实现其目标并相互支持。”</p><p>这个词描述了 Scrum 团队在追求目标时相互承诺的必要性，以及如何为 Scrum 的蓬勃发展创造积极的环境。</p><p>在描述每个工件时使用承诺一词是相似的，因为团队承诺为该工件提供产品目标、Sprint 目标或完成的定义。然而，阅读任何其他意义可能是一个延伸。</p>',16)]))}const l=a(c,[["render",u]]);export{S as __pageData,l as default};
