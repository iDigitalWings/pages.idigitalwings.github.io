import{_ as a}from"./chunks/1397863291123583.BVaNHdVv.js";import{_ as n,a as t,af as l,o as h}from"./chunks/framework.C87LdZyP.js";const i="/assets/1416387472113458.B2cS3dlX.png",p="/assets/1419710995134916.CT6jg9X7.png",e="/assets/1420233982067458.fBAIuKe7.png",u=JSON.parse('{"title":"使用 LangChain 结合 Qdrant 进行无样本问答","description":"","frontmatter":{"title":"使用 LangChain 结合 Qdrant 进行无样本问答","date":"2023-05-28T00:00:00.000Z","tags":["ai","ml"],"category":["AI"]},"headers":[],"relativePath":"posts/2023/05/2023-05-28-langchain-qdrant.md","filePath":"posts/2023/05/2023-05-28-langchain-qdrant.md","lastUpdated":1718175555000}'),k={name:"posts/2023/05/2023-05-28-langchain-qdrant.md"};function d(r,s,F,g,o,y){return h(),t("div",null,s[0]||(s[0]=[l('<blockquote><p>本文带大家使用 LangChain 结合向量数据库来时间无样本问答。重点在 Qdrant 向量数据库的使用，所以为了简化流程， 直接使用 OpenAI 接口，数据集可以像我一样用公共数据集，也可以自己录入自己的数据。</p></blockquote><p><img src="'+i+'" alt=""></p><p>LangChain 的出现以及其生态的完善，以及其为简化开发做的努力，使用大型语言模型构建应用程序变得越来越简单。</p><p>LangChain 为不同的库提供统一的接口，因此您可以避免编写样板代码，利用已经预先训练的模型，并通过几行代码支持复杂的管道，专注于您想要带来的价值。</p><p><img src="'+p+'" alt=""></p><h2 id="为什么需要矢量数据库" tabindex="-1">为什么需要矢量数据库 <a class="header-anchor" href="#为什么需要矢量数据库" aria-label="Permalink to &quot;为什么需要矢量数据库&quot;">​</a></h2><blockquote><p>既然我们都有了 ChatGPT 等大语言模型，还要向量数据库干什么？</p></blockquote><p>而事实是：如果没有提供上下文，类似 ChatGPT 的模型很难生成<strong>正确的事实陈述</strong>。 他们具有一些常识，但不能保证<strong>始终如一地给出有效的答案</strong>。</p><p><img src="'+e+'" alt=""></p><p>因此，一个解决方案是提供一些我们知道是真实的事实（知识）作为答案，这样它就可以选择有效的部分， 并从所有提供的上下文数据中提取它们，以给出全面的答案。</p><p>矢量数据库（例如 Qdrant）在这里有了用武之地，矢量数据库在<strong>庞大的知识库上执行语义搜索</strong>的能力对于预选一些可能有效的文档至关重要， 因此可以将它们提供给 LLM。这也是LangChain实现的链之一，叫做<code>VectorDBQA</code>。Qdrant 已与该库集成，因此可以使用它轻松构建它。</p><h2 id="方案" tabindex="-1">方案 <a class="header-anchor" href="#方案" aria-label="Permalink to &quot;方案&quot;">​</a></h2><p>直接看架构图：</p><p><img src="'+i+`" alt=""></p><p>架构中显示了两个两个模型： 首先，我们需要一个<strong>嵌入模型</strong>，将事实集转换为向量，并将其存储到 Qdrant 中，然后第二个模型来帮助我们生成最终文本以及摘要。</p><p>这与任何其他语义搜索应用程序的过程相同。我们将使用其中一种 SentenceTransformers模型，因此它可以在本地托管。 该模型创建的嵌入将被放入 Qdrant 中，并用于在给定查询的情况下检索最相似的文档。</p><h3 id="查询过程" tabindex="-1">查询过程 <a class="header-anchor" href="#查询过程" aria-label="Permalink to &quot;查询过程&quot;">​</a></h3><p>查询时，涉及两个步骤。</p><ul><li>首先，我们要求 Qdrant 提供最相关的文档，并将它们简单地组合成一个文本。</li><li>然后，我们为 LLM（在我们的例子中为 OpenAI）构建一个提示， 包括这些文档作为上下文，当然还有所提出的问题。</li></ul><h2 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-label="Permalink to &quot;实现&quot;">​</a></h2><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><p>首先安装基础依赖，</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> langchain[llms]</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qdrant-client</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;protobuf&lt;3.20.0&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sentence_transformers</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> openai</span></span></code></pre></div><h3 id="安装-qdrant" tabindex="-1">安装 Qdrant <a class="header-anchor" href="#安装-qdrant" aria-label="Permalink to &quot;安装 Qdrant&quot;">​</a></h3><p>使用 Docker Compose 安装 Qdrant（当然也可以不安装直接在内存中运行）。</p><p>下载镜像：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qdrant/qdrant</span></span></code></pre></div><p>运行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 6333:6333</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -v</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/qdrant_storage:/qdrant/storage</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    qdrant/qdrant</span></span></code></pre></div><p>Qdrant 可以通过 <code>localhost:6333</code> 访问，浏览器访问可看到输出：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;title&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;qdrant - vector search engine&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;version&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;1.3.0&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">}</span></span></code></pre></div><h2 id="建立知识库" tabindex="-1">建立知识库 <a class="header-anchor" href="#建立知识库" aria-label="Permalink to &quot;建立知识库&quot;">​</a></h2><p>前面提到，我们要准备一些事实来嵌入存到数据库中，我们使用 Google 的 NaturalQuestions，当然你也可以像知识库一样录入自己的知识。</p><p>下载数据集：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># All the examples come from https://ai.google.com/research/NaturalQuestions</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">rm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /tmp/v1.0_sample_nq-train-sample.jsonl.gz</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://storage.googleapis.com/dataset-natural-questions/v1.0_sample_nq-train-sample.jsonl.gz</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /tmp/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">gunzip</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /tmp/v1.0_sample_nq-train-sample.jsonl.gz</span></span></code></pre></div><p>Natural Questions 是一个公共数据集，它由从网站抓取的整个 HTML 内容组成。 所以我们要一些预处理来提取纯文本内容。 最终生成两个字符串列表：</p><ul><li>一个用于问题</li><li>另一个用于答案。</li></ul><p>引入必要的包：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> langchain.vectorstores </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Qdrant</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> langchain.embeddings </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> HuggingFaceEmbeddings</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> langchain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> VectorDBQA, OpenAI</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> random</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> json</span></span></code></pre></div><p>读取刚刚下载好的文件存入数据库：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># All the questions and answers are extracted from the dataset. Originally,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># it provides lists of tokens and full HTML content of the websites, so the</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># answers need to be extracted using begin and end tokens.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">questions,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> answers</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [], []</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">with</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;/tmp/v1.0_sample_nq-train-sample.jsonl&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;r&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">as</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> fp:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i, line in enumerate(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">fp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">):</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        qa_entry</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> json.loads</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">line</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        questions.append(qa_entry[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;question_text&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> annotation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qa_entry[&quot;annotations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            long_answer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> annotation[&quot;long_answer&quot;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            start_token,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> end_token</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> long_answer[&quot;start_token&quot;],</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> long_answer[&quot;end_token&quot;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            answer_tokens</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                token[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;token&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> token </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> qa_entry[&quot;document_tokens&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">][start_token:end_token]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> token[&quot;html_token&quot;]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            ]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            long_answer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot; &quot;.join</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">answer_tokens</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            answers.append(long_answer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p>查看 <code>answers</code>:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;No . overall No. in season Title Directed by Written by Original air date U.S. viewers </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">...</span></span></code></pre></div><p>答案必须使用我们的第一个模型进行矢量化，我们使用 <code>sentence-transformers/all-mpnet-base-v2</code>，LangChain 单个函数调用即可处理。</p><p>这里展示了如何使用 内存数据库（location=&quot;:memory:&quot;）：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">embeddings</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> HuggingFaceEmbeddings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    model_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sentence-transformers/all-mpnet-base-v2&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">doc_store</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Qdrant.from_texts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    answers,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> embeddings,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> location=&quot;:memory:&quot;,</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h2 id="langchain-vectordbqa" tabindex="-1">LangChain VectorDBQA <a class="header-anchor" href="#langchain-vectordbqa" aria-label="Permalink to &quot;LangChain VectorDBQA&quot;">​</a></h2><p><code>VectorDBQA</code> 是执行上述过程的链。</p><ul><li>它首先从 Qdrant 加载这些知识，</li><li>然后将它们输入 OpenAI LLM，后者应该分析它们以找到给定问题的答案。</li></ul><p>我们把所有东西放在一起，通过单个函数调用：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">llm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> OpenAI</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(openai_api_key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">OPENAI_API_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">qa</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> VectorDBQA.from_chain_type</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">llm,</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    chain_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;stuff&quot;,</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    vectorstore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">doc_store,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    return_source_documents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">False,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h2 id="测试-langchain" tabindex="-1">测试 LangChain <a class="header-anchor" href="#测试-langchain" aria-label="Permalink to &quot;测试 LangChain&quot;">​</a></h2><p>首先随机选择一些问题：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">random.seed(76</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">selected_questions</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> random.choices</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">questions,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;what kind of music is scott joplin most famous for&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;who died from the band faith no more&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;when does maggie come on grey&#39;s anatomy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;can&#39;t take my eyes off you lyrics meaning&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;who lasted the longest on alone season 2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span></code></pre></div><p>进行知识问答：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> question </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> selected_questions:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;&gt;&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> question</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">qa.run</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">question</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">), end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;\\n\\n&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p>由于是英文的数据集，结果也是英文，大家要使用自己的数据集的话只需要往<strong>向量库里面插入自己的数据</strong>。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> what kind of music is scott joplin most famous </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">for</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Scott</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Joplin</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> most</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> famous</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> composing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ragtime</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> music.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> who died from the band faith no more</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Chuck</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Mosley</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> when does maggie come on grey</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;s anatomy</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Maggie first appears in season 10, episode 1, which aired on September 26, 2013.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&gt; can&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">t take my eyes off you lyrics meaning</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> I</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> don&#39;t know.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&gt; who lasted the longest on alone season 2</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> David McIntyre lasted the longest on Alone season 2, with a total of 66 days.</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;openllm[chatglm]&quot;</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   ██████╗</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ██████╗</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ███████╗███╗</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   ██╗██╗</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     ██╗</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     ███╗</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   ███╗</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  ██╔═══██╗██╔══██╗██╔════╝████╗</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  ██║██║</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     ██║</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     ████╗</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ████║</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  ██║</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   ██║██████╔╝█████╗</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  ██╔██╗</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ██║██║</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     ██║</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     ██╔████╔██║</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  ██║</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   ██║██╔═══╝</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ██╔══╝</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  ██║╚██╗██║██║</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     ██║</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     ██║╚██╔╝██║</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  ╚██████╔╝██║</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     ███████╗██║</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ╚████║███████╗███████╗██║</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ╚═╝</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ██║</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   ╚═════╝</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ╚═╝</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     ╚══════╝╚═╝</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  ╚═══╝╚══════╝╚══════╝╚═╝</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     ╚═╝.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  An</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> open</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> platform</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> operating</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> large</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> language</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> models</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> production.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  Fine-tune,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> serve,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> deploy,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> monitor</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> any</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> LLMs</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ease.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">...</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openllm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  start</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  chatglm</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --model-id=THUDM/chatglm2-6b</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --port=3600</span></span></code></pre></div><p>访问 <code>http://ip:3600</code> 可以看到：</p><p><img src="`+a+`" alt=""></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> langchain[llms]</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> langchain.llms</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> OpenLLM</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">server_url</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;http://39.100.28.74:3600&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # Replace with remote host if you are running on a remote server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">llm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> OpenLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(server_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">server_url</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h2 id="资料" tabindex="-1">资料 <a class="header-anchor" href="#资料" aria-label="Permalink to &quot;资料&quot;">​</a></h2><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>`,69)]))}const C=n(k,[["render",d]]);export{u as __pageData,C as default};
