import{_ as o,a as r,af as a,o as t}from"./chunks/framework.C87LdZyP.js";const m=JSON.parse('{"title":"Container 2017","description":"Docker 2017","frontmatter":{"title":"Container 2017","date":"2017-04-07T00:00:00.000Z","img":"docker-jekyll.jpg","description":"Docker 2017","category":["DevOps"],"tags":["container","docker","swarm","kubernetes","mesos"]},"headers":[],"relativePath":"posts/2017/04/2017-04-07-container-2017.md","filePath":"posts/2017/04/2017-04-07-container-2017.md","lastUpdated":1718173059000}'),c={name:"posts/2017/04/2017-04-07-container-2017.md"};function s(n,e,d,p,i,l){return t(),r("div",null,e[0]||(e[0]=[a('<p>2016年，容器技术彻底走进了我们的生活。我在16年春节过后也把容器技术（Docker）带到了公司。</p><p>稍微看一下<code>Kubernetes</code>，<code>Mesos</code>，<code>Docker</code>这三架马车：</p><h3 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">​</a></h3><p>之前的Docker公司的几个技术：<code>Docker Engine</code>，<code>Docker Compose</code>，<code>Docker Machine</code>， <code>Docker Swarm</code>。</p><p>如今DockerSwarm已然退出历史舞台，Docker1.12之后集成了Swarm(Swarm Kit),同时引进了 Service，Task等，这是真正针对容器集群的一些概念。而不像之前的Swarm只有编排功能。</p><h3 id="docker-compose-v3" tabindex="-1">Docker Compose V3 <a class="header-anchor" href="#docker-compose-v3" aria-label="Permalink to &quot;Docker Compose V3&quot;">​</a></h3><p>面对Swarm集群</p><p><a href="https://docs.docker.com/compose/compose-file/" target="_blank" rel="noreferrer">Compose Version3 Reference</a></p><h2 id="kubernetes" tabindex="-1">Kubernetes <a class="header-anchor" href="#kubernetes" aria-label="Permalink to &quot;Kubernetes&quot;">​</a></h2><p>Service, Pod, Replication, Controller, Label 等概念的提出，之前有评论说Kubernetes是 超前十年的技术，然而仅仅一年这些概念都变得普及。</p><h2 id="mesos" tabindex="-1">Mesos <a class="header-anchor" href="#mesos" aria-label="Permalink to &quot;Mesos&quot;">​</a></h2><p>Mesos作为一个老牌项目，完善的Paas功能，支持Hadoop，Spark等。</p><p>偶而有人诟病其负责，</p>',13)]))}const h=o(c,[["render",s]]);export{m as __pageData,h as default};
