import{_ as d,a,af as e,o as r}from"./chunks/framework.C87LdZyP.js";const o="/assets/cola-4.0-package.BBlb0cZm.png",l="/assets/cola-4.0-package-function-model.CGjW4VxY.png",i="/assets/cola-4.0-package-example.BzUMKVWc.png",p="/assets/cola-4.0-ac-impl.Ci64acfH.png",n="/assets/cola-4.0-ac-impl-example.Q-wEosVa.png",s="/assets/cola-4.0-summary.Cet9QUkq.png",x=JSON.parse('{"title":"Cola 4.0 笔记","description":"","frontmatter":{"title":"Cola 4.0 笔记","date":"2021-07-28T00:00:00.000Z","tags":["ddd","cola"],"category":["设计"]},"headers":[],"relativePath":"posts/2021/07/2021-07-28-cola-4.0.md","filePath":"posts/2021/07/2021-07-28-cola-4.0.md","lastUpdated":1718173059000}'),c={name:"posts/2021/07/2021-07-28-cola-4.0.md"};function m(h,t,g,u,b,_){return r(),a("div",null,t[0]||(t[0]=[e('<h2 id="架构本质" tabindex="-1">架构本质 <a class="header-anchor" href="#架构本质" aria-label="Permalink to &quot;架构本质&quot;">​</a></h2><p><strong>组织</strong>。模块、组件、包、类的组织。</p><h2 id="分层结构" tabindex="-1">分层结构 <a class="header-anchor" href="#分层结构" aria-label="Permalink to &quot;分层结构&quot;">​</a></h2><ul><li>适配层 - 前端展示的路由和适配</li><li>应用层 - 获取输入、组装上下文，参数校验、领域层调用，基础设置的直接访问</li><li>领域层 - 业务核心逻辑封装。提供领域对象和领域服务供 App 层调用。不依赖其它层</li><li>基础设施层 - 技术细节处理，比如数据库操作、搜索引擎、文件存储等，以及防腐层的实现</li></ul><h2 id="包结构" tabindex="-1">包结构 <a class="header-anchor" href="#包结构" aria-label="Permalink to &quot;包结构&quot;">​</a></h2><p><img src="'+o+'" alt="img.png"></p><table tabindex="0"><thead><tr><th>层次</th><th>包名</th><th>功能</th><th>必选</th></tr></thead><tbody><tr><td>Adapter层</td><td>web</td><td>处理页面请求的Controller</td><td>否</td></tr><tr><td>Adapter层</td><td>wireless</td><td>处理无线端的适配</td><td>否</td></tr><tr><td>Adapter层</td><td>wap</td><td>处理wap端的适配</td><td>否</td></tr><tr><td>App层</td><td>executor</td><td>处理request，包括command和query</td><td>是</td></tr><tr><td>App层</td><td>consumer</td><td>处理外部message</td><td>否</td></tr><tr><td>App层</td><td>scheduler</td><td>处理定时任务</td><td>否</td></tr><tr><td>Domain层</td><td>model</td><td>领域模型</td><td>否</td></tr><tr><td>Domain层</td><td>ability</td><td>领域能力，包括DomainService</td><td>否</td></tr><tr><td>Domain层</td><td>gateway</td><td>领域网关，解耦利器</td><td>是</td></tr><tr><td>Infra层</td><td>gatewayimpl</td><td>网关实现</td><td>是</td></tr><tr><td>Infra层</td><td>mapper</td><td>ibatis数据库映射</td><td>否</td></tr><tr><td>Infra层</td><td>config</td><td>配置信息</td><td>否</td></tr><tr><td>Client SDK</td><td>api</td><td>服务对外透出的API</td><td>是</td></tr><tr><td>Client SDK</td><td>dto</td><td>服务对外的DTO</td><td>是</td></tr></tbody></table><p>判断新增模型需要：</p><ul><li>有必要</li><li>帮助系统结构</li><li>提升业务语言表达能力</li><li>提升系统的可维护和可测试性</li></ul><p>包结构定义要考虑功能和领域两个纬度。顶层包按照领域划分，领域之下再按照功能划分：</p><p><img src="'+l+'" alt="img.png"></p><p>以云店铺项目为例：</p><p><img src="'+i+'" alt="img.png"></p><h2 id="解耦" tabindex="-1">解耦 <a class="header-anchor" href="#解耦" aria-label="Permalink to &quot;解耦&quot;">​</a></h2><p>耦合：练习的紧密程度。只要有联系就有耦合，不管是进程内还是跨进成的 RPC。</p><p>DDD 使用防腐层 Anti-Corruption 来解耦。即不要依赖外域的信息，把外域的信息 转换成自己的上下文 Context 的实体再去使用，从而实现笨鱼喝外部依赖的解耦。</p><p>Cola 中把搜索引擎、数据库都列为外部依赖。利用依赖倒置，使用 Gateway 来实现业务领域和外部依赖解耦。</p><p>即：Domain 层定义 Gateway 接口，然后在 Infrastructure 提供 Gateway 实现。</p><p><img src="'+p+'" alt="img.png"></p><p>比如，一个电商系统的<code>下单</code>需要联动订单、商品、库存、营销等多个系统。</p><ul><li>商品域返回的是大而全的 Dto</li><li>在订单域只需要几个字段，使用 gateway 对商品域进行解耦</li></ul><p><img src="'+n+'" alt="img.png"></p><h2 id="cola-组件" tabindex="-1">Cola 组件 <a class="header-anchor" href="#cola-组件" aria-label="Permalink to &quot;Cola 组件&quot;">​</a></h2><p>Cola 4.0 把组件都放到了 cola-components 下：</p><table tabindex="0"><thead><tr><th>组件名称</th><th>功能</th><th>版本</th><th>依赖</th></tr></thead><tbody><tr><td>cola-component-dto</td><td>定义了DTO格式，包括分页</td><td>1.0.0</td><td>无</td></tr><tr><td>cola-component-exception</td><td>定义了异常格式，</td><td></td><td></td></tr><tr><td>主要有BizException和SysException</td><td>1.0.0</td><td>无</td><td></td></tr><tr><td>cola-component-statemachine</td><td>状态机组件</td><td>1.0.0</td><td>无</td></tr><tr><td>cola-component-domain-starter</td><td>Spring托管的领域实体组件</td><td>1.0.0</td><td>无</td></tr><tr><td>cola-component-catchlog-starter</td><td>异常处理和日志组件</td><td>1.0.0</td><td>exception</td></tr><tr><td>,dto组件</td><td></td><td></td><td></td></tr><tr><td>cola-component-extension-starter</td><td>扩展点组件</td><td>1.0.0</td><td>无</td></tr><tr><td>cola-component-test-container</td><td>测试容器组件</td><td>1.0.0</td><td>无</td></tr></tbody></table><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>Cola 的两部分：</p><ul><li>Cola 架构 - 关注应用架构定义和构建</li><li>Cola 组件 - 提供开发所需可复用组件，提升研发效率</li></ul><p><img src="'+s+'" alt="img.png"></p>',29)]))}const C=d(c,[["render",m]]);export{x as __pageData,C as default};
