import{_ as i,a as e,af as a,o as t}from"./chunks/framework.C87LdZyP.js";const c=JSON.parse('{"title":"Prometheus: Query Language","description":"","frontmatter":{"title":"Prometheus: Query Language","date":"2017-07-07T00:00:00.000Z","tags":["prometheus"]},"headers":[],"relativePath":"posts/2017/07/2017-07-07-prometheus-query-language.md","filePath":"posts/2017/07/2017-07-07-prometheus-query-language.md","lastUpdated":1718193786000}'),l={name:"posts/2017/07/2017-07-07-prometheus-query-language.md"};function n(o,s,h,p,r,d){return t(),e("div",null,s[0]||(s[0]=[a(`<h2 id="data-type" tabindex="-1">data type <a class="header-anchor" href="#data-type" aria-label="Permalink to &quot;data type&quot;">​</a></h2><p>比如数据:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">wms_shipment_count_daily_g</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">{company=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;company3&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,customer</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;media&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,exported_job</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;my_job&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,instance</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;pushgateway:9091&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,job</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;pushgateway&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,warehouse</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;beijing&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">}</span></span></code></pre></div><ul><li>即时向量(Instant vector) 包含每个时间序列的单个样本的一组时间序列，共享相同的时间戳。</li><li>wms_shipment_count_daily_g</li><li>rate(wms_shipment_count_daily_g[10m])</li><li>范围向量(Range vector) 包含每个时间序列随时间变化的数据点的一组时间序列。</li><li>wms_shipment_count_daily_g[10m]</li><li>标量(Scalar) 一个简单的数字浮点值</li><li>字符串(String) 一个简单的字符串值(目前未被使用)</li></ul><h2 id="time-series-selectors" tabindex="-1">Time series Selectors <a class="header-anchor" href="#time-series-selectors" aria-label="Permalink to &quot;Time series Selectors&quot;">​</a></h2><p><code>selects all time series</code> that have the http_requests_total metric name</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_requests_total</span></span></code></pre></div><p><code>filter these time series</code> further by appending a set of labels to match in curly braces ({}).</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_requests_total{job=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;prometheus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,group=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;canary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><code>label matching operators</code></p><ul><li><code>=</code> : Select labels that are exactly equal to the provided string.</li><li><code>!=</code> : Select labels that are not equal to the provided string.</li><li><code>=~</code> : Select labels that regex-match the provided string (or substring).</li><li><code>!~</code> : Select labels that do not regex-match the provided string (or substring).</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_requests_total{environment=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;staging|testing|development&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,method</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;GET&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>Vector selectors must either specify a name or at least one label matcher that does not match the empty string.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{job=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;.*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Bad!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{job=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;.+&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}              </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Good!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{job=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;.*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,method=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;get&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Good!</span></span></code></pre></div><p><code>http_requests_total</code> is equivalent to <code>{__name__=&quot;http_requests_total&quot;}</code>, Matchers other than <code>= (!=, =~, !~)</code> may also be used</p><h2 id="range-vector-selectors" tabindex="-1">Range Vector Selectors <a class="header-anchor" href="#range-vector-selectors" aria-label="Permalink to &quot;Range Vector Selectors&quot;">​</a></h2><p>range duration is appended in square brackets (<code>[]</code>) at the <code>end of a vector selector</code></p><ul><li><code>s</code> - seconds</li><li><code>m</code> - minutes</li><li><code>h</code> - hours</li><li><code>d</code> - days</li><li><code>w</code> - weeks</li><li><code>y</code> - years</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_requests_total{job=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;prometheus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}[</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">5m</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span></code></pre></div><h2 id="offset-modifier" tabindex="-1">Offset modifier <a class="header-anchor" href="#offset-modifier" aria-label="Permalink to &quot;Offset modifier&quot;">​</a></h2><p>The offset modifier allows changing the time offset for individual instant and range vectors in a query</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 五分钟前的数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_requests_total offset </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">5m</span></span></code></pre></div><p>offest 始终需要跟随选择器</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(http_requests_total{method</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;GET&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} offset 5m) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// GOOD.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(http_requests_total{method</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;GET&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}) offset 5m </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// INVALID.</span></span></code></pre></div><p>##　操作符</p><h3 id="comparison-binary-operators" tabindex="-1">Comparison binary operators <a class="header-anchor" href="#comparison-binary-operators" aria-label="Permalink to &quot;Comparison binary operators&quot;">​</a></h3><ul><li><code>==</code> (equal)</li><li><code>!=</code> (not-equal)</li><li><code>&gt;</code> (greater-than)</li><li><code>&lt;</code> (less-than)</li><li><code>&gt;=</code> (greater-or-equal)</li><li><code>&lt;=</code> (less-or-equal)</li></ul><h3 id="logical-set-binary-operators" tabindex="-1">Logical/set binary operators <a class="header-anchor" href="#logical-set-binary-operators" aria-label="Permalink to &quot;Logical/set binary operators&quot;">​</a></h3><p>These logical/set binary operators are only defined between instant vectors:</p><ul><li><code>and</code> (intersection)</li><li><code>or</code> (union)</li><li><code>unless</code> (complement)</li></ul><h3 id="aggregation-operators" tabindex="-1">Aggregation operators <a class="header-anchor" href="#aggregation-operators" aria-label="Permalink to &quot;Aggregation operators&quot;">​</a></h3><ul><li><code>sum</code> (calculate sum over dimensions)</li><li><code>min</code> (select minimum over dimensions)</li><li><code>max</code> (select maximum over dimensions)</li><li><code>avg</code> (calculate the average over dimensions)</li><li><code>stddev</code> (calculate population standard deviation over dimensions)s)</li><li><code>stdvar</code> (calculate population standard variance over dimensions))</li><li><code>count</code> (count number of elements in the vector)</li><li><code>count_values</code> (count number of elements with the same value)</li><li><code>bottomk</code> (smallest k elements by sample value)</li><li><code>topk</code> (largest k elements by sample value)</li><li><code>quantile</code> (calculate φ-quantile (0 ≤ φ ≤ 1) over dimensions)</li></ul><p>可以使用function: <code>&lt;aggregation&gt;_over_time</code></p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">count(wms_shipment_count_daily_g</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) by(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">warehouse</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sum(wms_shipment_count_daily_g</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) by(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">warehouse</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sum(wms_shipment_count_daily_g</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) without(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">warehouse,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> campany</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># sum_over_time</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sum(sum_over_time(wms_shipment_count_daily_g[10s]</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)) by (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">warehouse</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><hr><p>Links:</p><ul><li><a href="https://prometheus.io/docs/querying/basics/" target="_blank" rel="noreferrer">basics</a></li><li><a href="https://prometheus.io/docs/querying/operators/" target="_blank" rel="noreferrer">operators</a></li><li><a href="https://prometheus.io/docs/querying/functions/" target="_blank" rel="noreferrer">functions</a></li><li><a href="http://www.jianshu.com/p/d187ac561eb8" target="_blank" rel="noreferrer">jianshu</a></li></ul><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>`,40)]))}const g=i(l,[["render",n]]);export{c as __pageData,g as default};
