import{_ as l,a as t,af as o,o as i}from"./chunks/framework.C87LdZyP.js";const u=JSON.parse('{"title":"MySql: single-column index, multi-culomn index","description":"","frontmatter":{"title":"MySql: single-column index, multi-culomn index","date":"2017-08-11T00:00:00.000Z","tags":["mysql","index"]},"headers":[],"relativePath":"posts/2017/08/2017-08-11-mysql-index.md","filePath":"posts/2017/08/2017-08-11-mysql-index.md","lastUpdated":1718193786000}'),n={name:"posts/2017/08/2017-08-11-mysql-index.md"};function s(r,e,c,a,d,m){return i(),t("div",null,e[0]||(e[0]=[o('<p>考虑使用索引的只要有两种类型:</p><ul><li>join 子句出现的列</li><li>where 子句出现的列</li></ul><p>MySQL只有对以下操作符才使用索引<code>&lt;</code>，<code>&lt;=</code>，<code>=</code>，<code>&gt;</code>，<code>&gt;=</code>，<code>BETWEEN</code>，<code>IN</code>，以及某些时候的<code>LIKE</code>。</p><ul><li>可以在LIKE操作中使用索引的情形是指另一个操作数不是以通配符（<code>%</code>或者<code>_</code>）开头的情形</li></ul><p>多个单列索引:</p><ul><li>首先使用索引限制到第一个索引的范围</li><li>然后对中间结果集上进行扫表,过滤其他条件(不使用索引)</li></ul><p>多列索引:</p><ul><li>在不扫描一条数据的情况下,找到目标记录</li></ul><p>在执行查询的时候,mysql只能使用一个索引(MySql会使用限制最严格的索引,查询优化器穷据,获得性能最好的索引)</p><hr><p>Links:</p><ul><li><a href="http://imfei.blog.51cto.com/1849649/511689" target="_blank" rel="noreferrer">http://imfei.blog.51cto.com/1849649/511689</a></li><li><a href="http://greatwqs.iteye.com/blog/1897118" target="_blank" rel="noreferrer">http://greatwqs.iteye.com/blog/1897118</a></li><li><a href="https://stackoverflow.com/questions/2349817/two-single-column-indexes-vs-one-two-column-index-in-mysql" target="_blank" rel="noreferrer">https://stackoverflow.com/questions/2349817/two-single-column-indexes-vs-one-two-column-index-in-mysql</a></li><li><a href="https://stackoverflow.com/questions/20273998/mysql-beginner-multiple-column-index" target="_blank" rel="noreferrer">https://stackoverflow.com/questions/20273998/mysql-beginner-multiple-column-index</a></li><li><a href="https://stackoverflow.com/questions/12728832/understanding-multiple-column-indexes-in-mysql-query" target="_blank" rel="noreferrer">https://stackoverflow.com/questions/12728832/understanding-multiple-column-indexes-in-mysql-query</a></li><li><a href="https://www.percona.com/blog/2014/01/03/multiple-column-index-vs-multiple-indexes-with-mysql-56/" target="_blank" rel="noreferrer">https://www.percona.com/blog/2014/01/03/multiple-column-index-vs-multiple-indexes-with-mysql-56/</a></li></ul><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>',14)]))}const f=l(n,[["render",s]]);export{u as __pageData,f as default};
