import{_ as i,a,af as n,o as t}from"./chunks/framework.C87LdZyP.js";const o=JSON.parse('{"title":"Pac4j - SpringMVC - SecurityLogic","description":"","frontmatter":{"title":"Pac4j - SpringMVC - SecurityLogic","date":"2018-05-09T00:00:00.000Z","tags":["spring","springmvc","pac4j"],"category":["Java"]},"headers":[],"relativePath":"posts/2018/05/2018-05-09-pac4j-security-logic.md","filePath":"posts/2018/05/2018-05-09-pac4j-security-logic.md","lastUpdated":1718173059000}'),l={name:"posts/2018/05/2018-05-09-pac4j-security-logic.md"};function h(e,s,k,p,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<p>Pac4j-SpringMVC 使用 intercepter 来实现实现权限控制：</p><div class="language-scala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scala</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ComponentScan</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(basePackages </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;org.pac4j.springframework.web&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SecurityConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> WebMvcConfigurer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Autowired</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> val</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> addInterceptors</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">registry</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">InterceptorRegistry</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Unit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    registry.addInterceptor(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> SecurityInterceptor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(config, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;FacebookClient&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .addPathPatterns(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/facebook/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        .excludePathPatterns(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/facebook/notprotected.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><code>SecurityInterceptor</code>的<code>preHandle</code>中调用<code>SecurityLogic</code>的<code>perform</code>方法：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> preHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(HttpServletRequest request, HttpServletResponse response, Object handler)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    throws Exception {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    assertNotNull</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;securityLogic&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, securityLogic);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    assertNotNull</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;config&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, config);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> J2EContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> J2EContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(request, response, config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getSessionStore</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> securityLogic.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">perform</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context, config, (context1, profiles, parameters) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        , (code, webCtx) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, clients, authorizers, matchers, multiProfile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="jwt-paramerter-perfom的逻辑" tabindex="-1">jwt Paramerter perfom的逻辑 <a class="header-anchor" href="#jwt-paramerter-perfom的逻辑" aria-label="Permalink to &quot;jwt Paramerter perfom的逻辑&quot;">​</a></h2><p>判断是否配置 <code>multiProfile</code></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">final</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> multiProfile;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (inputMultiProfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    multiProfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    multiProfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> inputMultiProfile;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>matchingChecker 检查是否 match</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (matchingChecker.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">matches</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context, matchers, config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getMatchers</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()))</span></span></code></pre></div><p>从 session 中获取 profiles</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">final</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> loadProfilesFromSession</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> profileStorageDecision.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">mustLoadProfilesFromSession</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context, currentClients);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;loadProfilesFromSession: {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, loadProfilesFromSession);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ProfileManager</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> manager</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> getProfileManager</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context, config);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CommonProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">profiles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> manager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getAll</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(loadProfilesFromSession);</span></span></code></pre></div><p>如果session中未获取到，便利 clients 获取 credentials 进行验证 如果 client 是 DirectClient ,获取 credentials</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> credentials</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> currentClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getCredentials</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context)</span></span></code></pre></div><p>获取 profile</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> CommonProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> profile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> currentClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getUserProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(credentials, context);</span></span></code></pre></div><p>获取成功则判断是否保存session，</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (profile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    final</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> saveProfileInSession</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> profileStorageDecision.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">mustSaveProfileInSession</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        currentClients, (DirectClient) currentClient, profile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;saveProfileInSession: {} / multiProfile: {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, saveProfileInSession, multiProfile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    manager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">save</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(saveProfileInSession, profile, multiProfile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    updated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">multiProfile) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        break</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><blockquote><p>对于 jwt 通过 ParameterClient 进行验证是，默认不保存到Session里。</p></blockquote><h2 id="facebook-client" tabindex="-1">Facebook Client <a class="header-anchor" href="#facebook-client" aria-label="Permalink to &quot;Facebook Client&quot;">​</a></h2><p>对于不是直接验证的客户端，在从Session中找不到profile之后，就跳转进行登录了：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">startAuthentication</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context, currentClients)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Starting authentication&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    saveRequestedUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context, currentClients);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    action </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> redirectToIdentityProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context, currentClients);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;unauthorized&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    action </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> unauthorized</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context, currentClients);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>第三方登录成功后，调用系统的 callback 接口，</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">RequestMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/callback&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> HttpServletRequest request, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> HttpServletResponse response) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    assertNotNull</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;callbackLogic&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, callbackLogic);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    assertNotNull</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;config&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, config);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> J2EContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> J2EContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(request, response, config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getSessionStore</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    callbackLogic.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">perform</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context, config, J2ENopHttpActionAdapter.INSTANCE, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.defaultUrl,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.saveInSession, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.multiProfile, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.renewSession,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.defaultClient);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>主要逻辑在<code>CallbackLogic</code>里面，</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 查找clients，比如FacebookClient</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Client</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">foundClients</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> clientFinder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(clients, context, client);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">assertTrue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(foundClients </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> foundClients.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;unable to find one indirect client for the callback: check the callback URL for a client name parameter or suffix path&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        +</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot; or ensure that your configuration defaults to one indirect client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Client</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> foundClient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> foundClients.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;foundClient: {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, foundClient);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">assertNotNull</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;foundClient&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, foundClient);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> credentials</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> foundClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getCredentials</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;credentials: {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, credentials);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 查找profile</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> CommonProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> profile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> foundClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getUserProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(credentials, context);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;profile: {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, profile);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">saveUserProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context, config, profile, saveInSession, multiProfile, renewSession);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 跳转</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">action </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> redirectToOriginallyRequestedUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context, defaultUrl);</span></span></code></pre></div><hr><ul><li><a href="https://github.com/pac4j/pac4j" target="_blank" rel="noreferrer">https://github.com/pac4j/pac4j</a></li><li><a href="http://www.pac4j.org/docs/index.html" target="_blank" rel="noreferrer">http://www.pac4j.org/docs/index.html</a></li></ul>`,27)]))}const A=i(l,[["render",h]]);export{o as __pageData,A as default};
