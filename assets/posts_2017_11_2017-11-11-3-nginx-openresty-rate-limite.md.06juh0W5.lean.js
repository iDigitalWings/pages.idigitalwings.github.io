import{_ as i,a,af as n,o as t}from"./chunks/framework.C87LdZyP.js";const c=JSON.parse('{"title":"Nginx/OpenResty: Rate Limit","description":"","frontmatter":{"title":"Nginx/OpenResty: Rate Limit","date":"2017-11-11T00:00:00.000Z","tags":["ratelimite","nginx","openresty","lua"],"category":["DevOps"]},"headers":[],"relativePath":"posts/2017/11/2017-11-11-3-nginx-openresty-rate-limite.md","filePath":"posts/2017/11/2017-11-11-3-nginx-openresty-rate-limite.md","lastUpdated":1718173059000}'),e={name:"posts/2017/11/2017-11-11-3-nginx-openresty-rate-limite.md"};function l(p,s,h,k,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h2 id="手动方案" tabindex="-1">手动方案 <a class="header-anchor" href="#手动方案" aria-label="Permalink to &quot;手动方案&quot;">​</a></h2><p>限制并发、下载传输速率, Nginx gonf:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">location</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /download_internal/</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    internal</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    send_timeout</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> s</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    limit_conn</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> perserver</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    limit_rate</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> k</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    chunked_transfer_encoding</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> off</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    default_type</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> application/octet-stream</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    alias</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ../download/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>通过修改<code>limit_rate</code>的值，然后 <code>nginx -s reload</code>手动加载。</p><h2 id="通过lua控制" tabindex="-1">通过lua控制 <a class="header-anchor" href="#通过lua控制" aria-label="Permalink to &quot;通过lua控制&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">download_internal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    internal;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    send_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> s;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    limit_conn perserver </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    limit_rate </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> k;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    chunked_transfer_encoding off;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    default_type application</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">octet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">stream;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    alias </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">../</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">download</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>PS: ngx.var.limit_rate 限速是基于请求的，如果相同终端发起两个连接，那么终端的最大速度将是 limit_rate 的两倍，原文如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>Syntax: limit_rate rate;</span></span>
<span class="line"><span>Default:</span></span>
<span class="line"><span>limit_rate 0;</span></span>
<span class="line"><span>Context: http, server, location, if in location</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Limits the rate of response transmission to a client. The rate is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if a client simultaneously opens two connections, the overall rate will be twice as much as the specified limit.</span></span></code></pre></div><hr><ul><li><a href="http://wiki.jikexueyuan.com/project/openresty-best-practice/lua-limit.html" target="_blank" rel="noreferrer">OpenResty 最佳实践 动态限速</a></li></ul><hr>`,11)]))}const g=i(e,[["render",l]]);export{c as __pageData,g as default};
