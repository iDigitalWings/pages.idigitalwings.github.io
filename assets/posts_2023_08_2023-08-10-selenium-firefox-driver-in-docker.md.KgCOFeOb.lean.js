import{_ as i,a,af as n,o as e}from"./chunks/framework.C87LdZyP.js";const g=JSON.parse('{"title":"使用 Docker 部署 Selenium Firefox 应用","description":"","frontmatter":{"title":"使用 Docker 部署 Selenium Firefox 应用","date":"2023-08-10T00:00:00.000Z","tags":["ai","llm"],"category":["ai"]},"headers":[],"relativePath":"posts/2023/08/2023-08-10-selenium-firefox-driver-in-docker.md","filePath":"posts/2023/08/2023-08-10-selenium-firefox-driver-in-docker.md","lastUpdated":1718173059000}'),p={name:"posts/2023/08/2023-08-10-selenium-firefox-driver-in-docker.md"};function l(t,s,r,h,k,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="driver-安装" tabindex="-1">Driver 安装 <a class="header-anchor" href="#driver-安装" aria-label="Permalink to &quot;Driver 安装&quot;">​</a></h2><p>可以使用 <a href="https://pypi.org/project/webdrivermanager/" target="_blank" rel="noreferrer">WebDriverManageropen in new window</a> 来安装，他一共支持如下驱动：</p><ul><li><strong>ChromeDriverManager</strong> for downloading and installing <a href="https://sites.google.com/a/chromium.org/chromedriver/downloads" target="_blank" rel="noreferrer">chromedriveropen in new window</a> (for Google Chrome).</li><li><strong>GeckoDriverManager</strong> for downloading and installing <a href="https://github.com/mozilla/geckodriver" target="_blank" rel="noreferrer">geckodriveropen in new window</a> (for Mozilla Firefox).</li><li><strong>OperaChromiumDriverManager</strong> for downloading and installing <a href="https://github.com/operasoftware/operachromiumdriver" target="_blank" rel="noreferrer">operadriveropen in new window</a> (for Chromium based Opera browsers).</li><li><strong>EdgeDriverManager</strong> for downloading and installing <a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/" target="_blank" rel="noreferrer">edgedriveropen in new window</a> (for Microsoft Edge).</li><li><strong>EdgeChromiumDriverManager</strong> for downloading and installing Edge Chromium based webdrivers</li><li><strong>IeDriverManager</strong> for downloading and installing Internet Explorer based webdrivers</li></ul><p>使用 Pip 安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> webdrivermanager</span></span></code></pre></div><p>安装驱动并创建 Link（同时安装 Firefox 和 Chrome）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">webdrivermanager</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> firefox</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> chrome</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --linkpath</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/local/bin</span></span></code></pre></div><p>也可以指定版本安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">webdrivermanager</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> chrome:2.38</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> firefox</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> opera:v.2.35</span></span></code></pre></div><p>我这里安装 Firefox Driver 的时候，驱动版本比较旧，我们不纠结直接去项目网站<a href="https://github.com/mozilla/geckodriver/releases/tag/v0.33.0" target="_blank" rel="noreferrer">下载 0.33.0open in new window</a> 版本。</p><p>这样的话，解压完都本地目录，在 Build 镜像的时候，先安装 Firefox：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">RUN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> firefox-esr</span></span></code></pre></div><p>然后直接 Copy Driver 文件即可：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">COPY</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ./drivers/geckodriver</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/local/bin</span></span></code></pre></div><p>当然，如果你不想在仓库里面维护驱动程序的话，可以在 Dockerfile 里面直接下载：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">RUN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> wget</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/mozilla/geckodriver/releases/download/vX.XX.0/geckodriver-vX.XX.0-linuxXX.tar.gz</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /tmp/geckodriver.tar.gz</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /opt</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -xzf</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /tmp/geckodriver.tar.gz</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 755</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /opt/geckodriver</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -fs</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /opt/geckodriver</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/bin/geckodriver</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -fs</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /opt/geckodriver</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/local/bin/geckodriver</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">rm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /tmp/geckodriver.tar.gz</span></span></code></pre></div><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 使用官方Python基础镜像</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> python:3.10-bookworm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 设置容器内的工作目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 将需求文件复制到工作目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> requirements.txt .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 安装 Python 依赖项</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pip install -r requirements.txt \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &amp;&amp; apt-get update \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &amp;&amp; apt-get install -y firefox-esr \\</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#    &amp;&amp; pip install webdrivermanager \\</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#    &amp;&amp; webdrivermanager firefox chrome --linkpath /usr/local/bin \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    &amp;&amp; ls</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 将驱动和应用程序代码复制到工作目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ./drivers/geckodriver /usr/local/bin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ./app ./app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 公开应用程序将运行的端口</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">EXPOSE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 8080</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 使用 uvicorn 服务器 CMD 运行 FastAPI 应用程序</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CMD</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;uvicorn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;app:app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;--host&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;0.0.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;--port&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;8080&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ]</span></span></code></pre></div>`,17)]))}const c=i(p,[["render",l]]);export{g as __pageData,c as default};
