import{_ as i,a,af as n,o as t}from"./chunks/framework.C87LdZyP.js";const g=JSON.parse('{"title":"D3.js tour 6","description":"D3.js tour 6","frontmatter":{"title":"D3.js tour 6","date":"2017-04-21T00:00:00.000Z","img":"docker-jekyll.jpg","description":"D3.js tour 6","tags":["js","d3"]},"headers":[],"relativePath":"posts/2017/04/2017-04-21-d3js-tour-6.md","filePath":"posts/2017/04/2017-04-21-d3js-tour-6.md","lastUpdated":1718193786000}'),h={name:"posts/2017/04/2017-04-21-d3js-tour-6.md"};function l(e,s,k,p,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<p>本节教程讲解比例尺的分类。</p><p>比例尺可以按照规则把原始数据映射到另外的值域，并保持一定的关系。</p><p>比如对原始数据进行缩放，把现实中的米映射成像素，把数据映射成不同的颜色，对数据进行归类等。</p><h2 id="continuous-连续型-linear-power-log-identity-time" tabindex="-1">Continuous(连续型) (Linear, Power, Log, Identity, Time) <a class="header-anchor" href="#continuous-连续型-linear-power-log-identity-time" aria-label="Permalink to &quot;Continuous(连续型) (Linear, Power, Log, Identity, Time)&quot;">​</a></h2><p>连续型比例尺可以将连续的，可量化的输入 domain 映射到另一个一个连续区间 range.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> d3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">scaleLinear</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">130</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">range</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">960</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 80</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 320</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> d3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">scaleLinear</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">range</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;brown&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;steelblue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// &quot;#9a3439&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// &quot;#7b5167&quot;</span></span></code></pre></div><p>如果range也是数值类型，则可以进行invert计算：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> d3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">scaleLinear</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">130</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">range</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">960</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">x.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">invert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 20</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">x.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">invert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">320</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 50</span></span></code></pre></div><p>如果range是非数值类型的，则返回NaN。</p><p>如果给定的value超过了预设值的range，并且没有启用clamping 则会正确返回domain值， 但是也是超出预设值的domain范围。</p><h2 id="sequential-有序" tabindex="-1">Sequential(有序) <a class="header-anchor" href="#sequential-有序" aria-label="Permalink to &quot;Sequential(有序)&quot;">​</a></h2><p>Sequential和Continuous类似，都是将连续区间的值映射到另一个连续区间。 但是与continuous scales不同的是，顺序比例尺的range是固定且不可配置的。 Sequential Scales不提供invert, range, rangeRound 和 interpolate 方法.</p><h2 id="quantize-量化" tabindex="-1">Quantize(量化) <a class="header-anchor" href="#quantize-量化" aria-label="Permalink to &quot;Quantize(量化)&quot;">​</a></h2><p>Quantize(量化) 比例尺与linear scales相似，不一样的是输出range不是连续的，而是离散的。 量化比例尺根据输出范围将输入分割成不同的片段，每个片段内的值都会对应同一个range值。 这样就完成了连续到离散的转换。输入x与输出y之间的换算公式:y = m round(x) + b</p><h2 id="quantile-分位数" tabindex="-1">Quantile(分位数) <a class="header-anchor" href="#quantile-分位数" aria-label="Permalink to &quot;Quantile(分位数)&quot;">​</a></h2><p>Quantile(分位数)比例尺可以将一组样本输入映射到一组离散的值。 分位数比例尺会对domain进行排序，然后将其映射到range上。 可以根据输入的domain值计算出在range上的分位数。</p><h2 id="threshold-阈值" tabindex="-1">Threshold(阈值) <a class="header-anchor" href="#threshold-阈值" aria-label="Permalink to &quot;Threshold(阈值)&quot;">​</a></h2><p>Threshold(阈值)比例尺与quantize scales类似， 只不过阈值比例尺允许将任意子集映射到离散区间。输入区间依然是连续的，但是会根据range被分割成一些切片。</p><h2 id="ordinal-序数型-band-point-category" tabindex="-1">Ordinal(序数型) (Band, Point, Category) <a class="header-anchor" href="#ordinal-序数型-band-point-category" aria-label="Permalink to &quot;Ordinal(序数型) (Band, Point, Category)&quot;">​</a></h2><p>与 continuous scales不同, 序数比例尺的domain和range都是离散的. 例如序数比例尺可以将一组名称映射到一组颜色值。</p><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>`,23)]))}const C=i(h,[["render",l]]);export{g as __pageData,C as default};
