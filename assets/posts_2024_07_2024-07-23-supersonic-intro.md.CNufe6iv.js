import{_ as a,a as t,af as e,o as p}from"./chunks/framework.C87LdZyP.js";const i="/assets/477780684870875.BFlXfw5n.png",o="/assets/471683326759958.DEwg1jQ-.png",l="/assets/472353847646666.BVWN7jbz.png",n="/assets/467645980101583.ClsT2Ua9.png",r="/assets/473939822597833.ZiE9ceXA.png",c="/assets/474002333728583.BpLt3lV6.png",h="/assets/467659127522083.BBUMc0WO.png",d="/assets/467837447020666.BssA1MWF.png",m="/assets/474848349352500.CBM2ols3.png",g="/assets/468208566198166.B9uARTwh.png",u="/assets/475140244033958.Bieve9i_.png",b="/assets/475198512847291.CayCtRyL.png",k="/assets/475274715741000.Q1T0aBTH.png",_="/assets/475422899950333.B-fLYkfc.png",v="/assets/475515209942208.Cv5caeYY.png",B="/assets/475515209942208.Cv5caeYY.png",I="/assets/475634932603041.o1BSc3M0.png",f="/assets/475900465582750.DsXmj9JT.png",S="/assets/475850372179541.BHSMWYKI.png",F="/assets/475869770194416.D06rmBFF.png",J=JSON.parse('{"title":"腾讯音乐开源的 Chat BI 平台","description":"","frontmatter":{"title":"腾讯音乐开源的 Chat BI 平台","date":"2024-07-23 10:00:00","tags":["chatbi","llm","text2sql"],"category":["AI"]},"headers":[],"relativePath":"posts/2024/07/2024-07-23-supersonic-intro.md","filePath":"posts/2024/07/2024-07-23-supersonic-intro.md","lastUpdated":1726312885000}'),C={name:"posts/2024/07/2024-07-23-supersonic-intro.md"};function q(y,s,x,P,D,L){return p(),t("div",null,s[0]||(s[0]=[e('<div class="admonition abstract"><p class="admonition-title">abstract</p><p>今天介绍一下腾讯音乐开源的下一代BI平台 SuperSonic，支持ChatBI、Headless BI。 虽然我没用起来，但是项目本身还是有一些亮点分享给大家。</p></div><h2 id="渊源" tabindex="-1">渊源 <a class="header-anchor" href="#渊源" aria-label="Permalink to &quot;渊源&quot;">​</a></h2><p>得知 SuperSonic 这款软件是我一个读者给我推荐的。 他当时说「不如一起研究 SuperSonic」，直到我下载、运行、调试之后，似乎明白了研究二字的含义。</p><p>我月余前，下载源码运行了一下，不做在对我自己的数据库做分析时，经过一番折腾，最终铩羽而归。 今天看到项目还一直在维护更新，又下载源码跑了一次。</p><p><img src="'+i+'" alt=""></p><h2 id="项目介绍" tabindex="-1">项目介绍 <a class="header-anchor" href="#项目介绍" aria-label="Permalink to &quot;项目介绍&quot;">​</a></h2><p>项目托管在了 Github 上，<a href="https://github.com/tencentmusic/supersonic" target="_blank" rel="noreferrer">Github 仓库</a> 大家认准是在 腾讯音乐 这个组织下面的， 如果你直接网上搜索，可能搜到另一个同名的项目。</p><p>这个项目的特点应该就是把 ChatBI 和 Headless BI 结合起来的，如官网所示。</p><p><img src="'+o+'" alt="不要小看这个简单的架构图哦"></p><h4 id="chatbi-和-headless-bi" tabindex="-1">ChatBI 和 Headless BI <a class="header-anchor" href="#chatbi-和-headless-bi" aria-label="Permalink to &quot;ChatBI 和 Headless BI&quot;">​</a></h4><p>ChatBI 就是通过自然语言聊天的方式来可视化你的数据。</p><p><a href="https://embeddable.com/blog/headless-bi-vs-semantic-layer" target="_blank" rel="noreferrer">Headless BI</a> 和很多 Headless XXX 的架构一样，不负责 UI 展现层，只有后端 BI 的抽象。 它在数据仓库或数据库上面引入了一个新的层，来充当解释数据的唯一来源，提供给数据使用方法（比如 BI 界面）。</p><p>再通俗点儿说，就是忽略数据的实际结构，对数据重新进行建模，提供给信息使用方。</p><p>遮掩的好处是系统对重新建模的数据（比如某个指标）有唯一的解释权，而且屏蔽了底层的复杂性和差异性。 不好的地方当然是，你要重新建模，并且你建的模型并不一定够用和好用，可能会把已经简单的事儿变得复杂。</p><p>而 SuperSonic 里面的无头建模就很丰富（当然概念上来说也复杂）。</p><p><img src="'+l+`" alt=""></p><ul><li><strong>主题域</strong>相当于一个最外层的分组，类似一个数据库</li><li><strong>数据模型</strong>是一个数据表或者一个查询SQL，属于一个主题域 <ul><li>数据模型的具体字段可以设置成维度、度量（指标）</li></ul></li><li><strong>数据集</strong>是指标和维度的集合，也属于一个主题域</li></ul><div class="admonition note"><p class="admonition-title">关于设计和架构</p><p>上面提到的架构讲完之后，貌似也不复杂，但是用起来就是不好用，甚至我有时候都觉得有点儿复杂。也许这就是架构和设计的作用吧。 参考同类软件的使用过程，比如 Looker、Tableau、PowerBI 等，就舒服很多。</p></div><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h2><p>项目前端是 React，后端是 Java。给人的感觉就是一个很传统的后端项目，我 14 年做一个圈新平台的时候，为了简单起见， 给项目和产品的结构就是把前后端正在一个项目，可以前后端分离，也方便前端直接丢在后端里面运行（我当时也是用了一个 webapp/web）的子项目， 这样省去了配置 Nginx 或者前端的 Dev Server 的事情（核心是公司有些人不会用，或者是觉得麻烦）。</p><h2 id="运行项目" tabindex="-1">运行项目 <a class="header-anchor" href="#运行项目" aria-label="Permalink to &quot;运行项目&quot;">​</a></h2><p>如果项目看起来不是巨无霸，我一般都使用源码运行。下载源码：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/tencentmusic/supersonic.git</span></span></code></pre></div><p>前端打包，这里作者写了个 Shell 脚本，</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> supersonic</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> assembly/bin/supersonic-build.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> webapp</span></span></code></pre></div><p>然后在 Ide 里面运行 Java 启动类 <code>com.tencent.supersonic.StandaloneLauncher</code> 即可。</p><div class="admonition note"><p class="admonition-title">Java 版本</p><p>小伙伴们注意，Java 21 不行， Java 17 不行，Java 11 可以。</p></div><p>过一会就可以在浏览器里面访问</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">http://localhost:9080/</span></span></code></pre></div><p>看到登录界面了，默认的账户是 <code>admin 123456</code>。</p><p><img src="`+n+'" alt=""></p><h2 id="大模型配置" tabindex="-1">大模型配置 <a class="header-anchor" href="#大模型配置" aria-label="Permalink to &quot;大模型配置&quot;">​</a></h2><p>SuperSonic 支持 OpenAI 和 Ollama，一个用于线上一个用于本地开发。</p><div class="admonition note"><p class="admonition-title">关于模型支持</p><p>对于当今的 AI 应用，对多模型的支持应该已经是一个标配，而随着 OpenAI 拒绝中国市场之后， 国产模型厂商的对接似乎更应该是标配中的标配。SuperSonic 对于模型的支持还是有不少可以改进的地方。</p></div><p>我前几个月第一次用的时候还专门改代码适配了 ZhipuAI，代码一步步调试的时候，我的感觉就是：作者咋写了这么多代码 ~</p><p>之前是可以在 <code>application.yaml</code> 里面配置的，新版本文档说可以<strong>新增</strong> <code>langchain4j.yaml</code> 进行配置。 源码中没有这个文件，不过貌似不配置也行，我配置完之后启动程序发现也没啥变化，而且可以等登录后在 UI 的设置里配置。</p><p><img src="'+r+'" alt=""></p><p>新建助理的时候也能为每个助理配置大模型，比如本地的 Ollama。</p><p><img src="'+c+'" alt=""></p><div class="admonition note"><p class="admonition-title">Ollama</p><p>Ollama 使用很简单，<a href="https://ollama.com/" target="_blank" rel="noreferrer">官网</a>下载安装之后，运行<code>ollama run glm4</code> 就可以下载模型，然后本地进行测试对话。</p><p>Ollama 默认地址是： <code>http://localhost:11434/</code>。</p></div><h2 id="智能助理" tabindex="-1">智能助理 <a class="header-anchor" href="#智能助理" aria-label="Permalink to &quot;智能助理&quot;">​</a></h2><p>登录之后，首页变成闲聊这个助理了（左侧几个助理都是启动时候SQL初始化进去的）。</p><p><img src="'+h+'" alt=""></p><p>查看一下「算指标」这个智能助理，里面也有一些初始化好的聊天历史数据，展示了当前的功能。</p><p><img src="'+d+'" alt=""></p><p>初始化样例数据这个功能对于开源软件（不只是开源软件）来说是一个很好的功能，能快速展示出 应用的优点，避免由于复杂而放弃。</p><h2 id="关于我的使用" tabindex="-1">关于我的使用 <a class="header-anchor" href="#关于我的使用" aria-label="Permalink to &quot;关于我的使用&quot;">​</a></h2><p>我大概介绍一下我认为使用过程吧，为什么说是我认为？因为几个月前我第一次运行，以及我刚刚有运行了一次最新版本， 都没得到恨到的结果（没成功的完成简单的数据分析），果然之前跟我留言的哥们说「研究SuperSonic」没有骗我。</p><p>上次我花的时间比较多，因为集成了线上的 Zhipu API，所以后端代码看和调试了不少， 不过忘记了是在哪步骤除了问题，没有给出我正确的结果了。</p><blockquote><p>PS：我感觉项目应该没问题，只是门槛有点儿高，我没用对。</p></blockquote><p>还有样例数据中心的都是基于规则引擎的 BI 问答，所以我也没有更多信息来获取 Chat BI 的一些内容。</p><p><img src="'+m+'" alt=""></p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p>其实看了上面的架构，使用起来并不复杂，也基本上可以不看<a href="https://supersonicbi.github.io/" target="_blank" rel="noreferrer">文档</a>来使用。</p><p>首先当然是新建数据库，我们连接本地的 Postgres 数据库，里面有一些我写的文章以及公众号发表的数据。</p><p><img src="'+g+'" alt=""></p><p>然后增加一个主题域：</p><p><img src="'+u+'" alt=""></p><p>主题域增加一个模型，这里使用「文章」表，选择一个标题字段和时间字段。</p><p><img src="'+b+'" alt=""></p><p>创建数据集，数据集这里支持指标模式和明细模式，想的也比较周到：</p><p><img src="'+k+'" alt=""></p><blockquote><p>我们看到文档中对数据集的指标和维度有哪些要求，所以只拿一个日期做测试。</p></blockquote><p>下面就可以创建助手了，同时设置你的大模型、以及工具。</p><p><img src="'+_+'" alt=""></p><p>工具必须要设置哦，可以选择规则、大模型和三方插件，可以添加多个工具。</p><p><img src="'+v+'" alt=""></p><p>然后我们就可以在「问答对话」里面看到刚刚新建的助手了。随便问个问题：</p><p><img src="'+B+'" alt=""></p><p>BUT，事与愿违，解析出错：</p><p><img src="'+I+'" alt=""></p><p>问个再简单点儿的，看起来 LLM 解析 SQL 的逻辑没错，不过为啥里面出现了数据集的名称。</p><p><img src="'+f+'" alt=""></p><p>控制台日志也是，算了，不 Debug 了。</p><p><img src="'+S+'" alt=""><img src="'+F+'" alt=""></p><p>我之前才猜是不是用了数据集的名字来当成 SQL 执行力，把数据集名称改成表名，没啥用。Debug 看了几下，中间过程SQL很复杂， 而且数据也都是奇奇怪怪的。</p><p>算了不猜了。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>SuperSonic 里面维度、标签、以及指标的 UI 等都是很不错的概念，但是后端逻辑太复杂，也不是一个偏向也 LLM 和 AI 的项目， 原厂的人可能用起来很棒，推广的话从易用性和设计上来说有点儿困难。</p><p>而且工具使用 Java 编写，可能是面向企业应用去的，不过对于当前 AI 和大模型的的生态来说，略显臃肿。</p>',80)]))}const O=a(C,[["render",q]]);export{J as __pageData,O as default};
