import{_ as l,a as e,af as t,e as i,x as a,M as p,o as h}from"./chunks/framework.C87LdZyP.js";const k="/assets/222194100324875.BNQL_yWr.png",d="/assets/222314764119625.D1DkGcgA.png",o="/assets/222367163838250.BwN4aKt1.png",r="/assets/222472969786125.DcCrGCdI.png",g="/assets/222653791905083.Bogi-BtV.png",c="/assets/223607754058625.D8ibjGCm.png",y="/assets/223985316163875.1dRzOBI2.png",A="/assets/224134212782166.t_pgbGEo.png",v=JSON.parse('{"title":"GitHub Action & Pages 入门和多项目构建","description":"","frontmatter":{"title":"GitHub Action & Pages 入门和多项目构建","date":"2024-06-14 10:00:00","tags":["github","cicd"],"category":["AI"]},"headers":[],"relativePath":"posts/2024/06/2024-06-14-gitlhub-action.md","filePath":"posts/2024/06/2024-06-14-gitlhub-action.md","lastUpdated":1718388623000}'),D={name:"posts/2024/06/2024-06-14-gitlhub-action.md"};function u(n,s,C,m,B,F){return h(),e("div",null,[s[4]||(s[4]=t('<div class="admonition abstract"><p class="admonition-title">abstract</p><p>最近第一次用 GitHub Action 来构建项目，跟大家分享一下使用心得。</p></div><h2 id="如何使用工作流" tabindex="-1">如何使用工作流 <a class="header-anchor" href="#如何使用工作流" aria-label="Permalink to &quot;如何使用工作流&quot;">​</a></h2><p>首先带大家熟悉一下UI，GitHub 项目打开如下， <code>Actions</code> 菜单就是我们的主角：</p><p><img src="'+k+'" alt=""></p><p>点进去之后，可以看到很多建议的<strong>流程模板</strong>，往下翻还有开发、安全、持续集成等流程可选。</p><p><img src="'+d+'" alt=""></p><p>当然你也可以在输入框根据关键词搜索你想要的， 比如搜索 <code>python</code>：</p><p><img src="'+o+'" alt=""></p><p>点击任意模板可以看到编辑界面：</p><p><img src="'+r+'" alt=""></p><div class="admonition note"><p class="admonition-title">流程文件</p><p>流程文件其实就是 <code>.github/workflows</code> 目录下的任意 <code>yaml</code> 文件。</p><p>你也可以通过 UI 向导编辑器创建，也可以本地创建提交。</p></div><p>左侧就是文件内容编辑区，右侧可以搜索查看 Action 商店。</p><p>点击 Action 可以查看 Action用法，拷贝粘贴进行修改就可以了。</p><p><img src="'+g+`" alt=""></p><h2 id="工作流结构" tabindex="-1">工作流结构 <a class="header-anchor" href="#工作流结构" aria-label="Permalink to &quot;工作流结构&quot;">​</a></h2><p>Workflow 的结构很简单，单价直接看单词就能明白。</p><p>工作流的名字：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Deploy Python project to Azure Function App</span></span></code></pre></div><p>工作流触发的条件：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  push</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    branches</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span></code></pre></div><p>工作流的环境变量：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  AZURE_FUNCTIONAPP_NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;your-app-name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  AZURE_FUNCTIONAPP_PACKAGE_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  PYTHON_VERSION</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3.9&#39;</span></span></code></pre></div><p>工作流的任务，可以有多个任务，每个任务可以有多个步骤：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  build-and-deploy</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">dev</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Checkout GitHub Action&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      uses</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">actions/checkout@v4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Setup Python \${{ env.PYTHON_VERSION }} Environment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      uses</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">actions/setup-python@v4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  job2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    ...</span></span></code></pre></div><p>上面的 <code>uses: actions/checkout@v4</code> 就是具体的 Action 动作啦。<code>with</code> 下面的对象就是这个Action的参数。</p><h2 id="github-action-原则" tabindex="-1">Github Action 原则 <a class="header-anchor" href="#github-action-原则" aria-label="Permalink to &quot;Github Action 原则&quot;">​</a></h2><p>Action 的使用原则是：</p><ul><li><strong>首先使用官方提供的Action</strong></li><li><strong>其实搜索市场里面的</strong></li><li>最后自己写脚本</li></ul><p>大部分情况，前面两个选项就能实现我们的需求。</p><h2 id="常用的-action" tabindex="-1">常用的 Action <a class="header-anchor" href="#常用的-action" aria-label="Permalink to &quot;常用的 Action&quot;">​</a></h2><p>列几个前端项目常用的 Action。</p><h3 id="checkout-代码" tabindex="-1">Checkout 代码 <a class="header-anchor" href="#checkout-代码" aria-label="Permalink to &quot;Checkout 代码&quot;">​</a></h3><p>默认只拉取分支最近一次的 commit，可能会导致一些文章的 GitInfo 变量无法获取，<code>fetch-depth</code> 设为 0 代表拉取所有分支所有提交。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # 1、检出源码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Checkout</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    uses</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">actions/checkout@v3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      fetch-depth</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span></span></code></pre></div><h3 id="安装-pnpm" tabindex="-1">安装 PNPM <a class="header-anchor" href="#安装-pnpm" aria-label="Permalink to &quot;安装 PNPM&quot;">​</a></h3><p>安装 PNPM：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Setup PNPM</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    uses</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">pnpm/action-setup@v2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">latest</span></span></code></pre></div><h3 id="安装-nodejs" tabindex="-1">安装 Nodejs <a class="header-anchor" href="#安装-nodejs" aria-label="Permalink to &quot;安装 Nodejs&quot;">​</a></h3><p>安装Node，设置 registry-url。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Setup Node</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    uses</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">actions/setup-node@v3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      node-version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">18</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      registry-url</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">https://registry.npmjs.org</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      cache</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">pnpm</span></span></code></pre></div><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><p>使用 lockfile 安装依赖，这个就直接 run 命令就好。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    run</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">pnpm i --frozen-lockfile</span></span></code></pre></div><h2 id="跨分支提交" tabindex="-1">跨分支提交 <a class="header-anchor" href="#跨分支提交" aria-label="Permalink to &quot;跨分支提交&quot;">​</a></h2><p>使用 <code>JamesIves/github-pages-deploy-action@v4</code> 可以跨分支提交代码：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Deploy GitHub Pages</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    uses</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">JamesIves/github-pages-deploy-action@v4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      BRANCH</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">gh-pages</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      FOLDER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">your_folder_to_push</span></span></code></pre></div><p>注意要勾选 <code>Settings &gt; Actions &gt; general</code> 下 工作流的权限为读写：</p><p><img src="`+c+`" alt=""></p><h2 id="跨仓库提交" tabindex="-1">跨仓库提交 <a class="header-anchor" href="#跨仓库提交" aria-label="Permalink to &quot;跨仓库提交&quot;">​</a></h2><p>还是这个 Action，也支持跨仓库提交，只需要填写正确 <code>repository-name</code> 和 <code>token</code> 即可：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Deploy GitHub Pages</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    uses</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">JamesIves/github-pages-deploy-action@v4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      BRANCH</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">gh-pages</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      FOLDER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">your_folder_to_push</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      repository-name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">org_name/repo_name</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">xxx</span></span></code></pre></div>`,51)),i("p",null,[s[0]||(s[0]=a("Token 的话我们可以直接用 ")),i("code",null,"$"+p(n.secrets.GITHUB_TOKEN),1),s[1]||(s[1]=a(" 这个变量获取当前 Token， 但是提交到其他项目之后，不会触发目标项目的 Action。"))]),i("p",null,[s[2]||(s[2]=a("也可以自己配置一个密钥，用 ")),i("code",null,"$"+p(n.secrets.YOUR_SECRET_NAME),1),s[3]||(s[3]=a(" 来获取即可："))]),s[5]||(s[5]=t('<p><img src="'+y+'" alt=""></p><h2 id="githubpage" tabindex="-1">GithubPage <a class="header-anchor" href="#githubpage" aria-label="Permalink to &quot;GithubPage&quot;">​</a></h2><p>Pages 的配置也很简单，同样是 <code>Settings</code> 里面 打开 <code>Pages</code> 配置。</p><p>我们一般选择 <strong>从分支部署</strong>，这样你把你的静态站点代码提交到对应的分支就好了</p><p><img src="'+A+'" alt=""></p>',5))])}const E=l(D,[["render",u]]);export{v as __pageData,E as default};
