import{_ as n}from"./chunks/ArticleMetadata.DFebsEEb.js";import{_ as o,m as p,a as h,u as d,B as u,e as i,x as c,aj as k,o as s,p as f,q as g}from"./chunks/framework.Ba_Ek9Jm.js";import"./chunks/theme.DmmjVCNk.js";const E=JSON.parse('{"title":"VSCode Pretter","description":"","frontmatter":{"title":"VSCode Pretter","date":"2017-09-13T00:00:00.000Z","tags":["vscode","eslint","prettier"]},"headers":[],"relativePath":"posts/2017/09/2017-09-13-vscode-eslint-prettier.md","filePath":"posts/2017/09/2017-09-13-vscode-eslint-prettier.md","lastUpdated":1718193786000}'),m={name:"posts/2017/09/2017-09-13-vscode-eslint-prettier.md"},b=i("h1",{id:"prettier-formatter-for-visual-studio-code",tabindex:"-1"},[c("Prettier formatter for Visual Studio Code "),i("a",{class:"header-anchor",href:"#prettier-formatter-for-visual-studio-code","aria-label":'Permalink to "Prettier formatter for Visual Studio Code"'},"​")],-1),q=k(`<p>VS Code package to format your Javascript / Typescript / CSS using <a href="https://github.com/prettier/prettier" target="_blank" rel="noreferrer">Prettier</a>.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>Install through VS Code extensions. Search for <code>Prettier - JavaScript formatter</code></p><p><a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode" target="_blank" rel="noreferrer">Visual Studio Code Market Place: Prettier - JavaScript formatter</a></p><p>Can also be installed using</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ext</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> prettier-vscode</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="using-command-palette-cmd-ctrl-shift-p" tabindex="-1">Using Command Palette (CMD/CTRL + Shift + P) <a class="header-anchor" href="#using-command-palette-cmd-ctrl-shift-p" aria-label="Permalink to &quot;Using Command Palette (CMD/CTRL + Shift + P)&quot;">​</a></h3><ul><li><p><code>CMD + Shift + P</code> -&gt; Format Document</p></li><li><p>Select the text you want to Prettify</p><ul><li><code>CMD + Shift + P</code> -&gt; Format Selection</li></ul></li></ul><h3 id="format-on-save" tabindex="-1">Format On Save <a class="header-anchor" href="#format-on-save" aria-label="Permalink to &quot;Format On Save&quot;">​</a></h3><p>Respects <code>editor.formatOnSave</code> setting.</p><p>VSCode Config:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;files.autoSave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;afterDelay&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;git.autofetch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;window.zoomLevel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;editor.mouseWheelZoom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;editor.fontSize&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;markdown.preview.fontSize&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;terminal.integrated.fontSize&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;javascript.format.enable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;eslint.autoFixOnSave&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,    </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;prettier.eslintIntegration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;workbench.colorTheme&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Hopscotch (TextMate Theme)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p><code>.prettierrc</code></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;tabWidth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;semi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;singleQuote&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="关于配置的讨论" tabindex="-1">关于配置的讨论 <a class="header-anchor" href="#关于配置的讨论" aria-label="Permalink to &quot;关于配置的讨论&quot;">​</a></h2><ul><li><a href="https://github.com/prettier/prettier-vscode/issues/187" target="_blank" rel="noreferrer">https://github.com/prettier/prettier-vscode/issues/187</a></li></ul><blockquote><p>This is from eslint. Your prettier/prettier rule from eslint-plugin-prettier. You have too much prettier in your workflow. eslint-plugin-prettier already runs prettier with it&#39;s settings. You specified singleQuote:true. If you use this extension, you are running prettier with singleQuote:false, the default. If you use this extension&#39;s settings prettier.eslintIntegration:true it will read your eslintrc file and infer the singleQuote option. BUT from quotes rule not from prettier/prettier:[{singleQuote}]. We use prettier-eslint under the hood.</p></blockquote><blockquote><p><code>eslint-plugin-prettier</code> is usefull to have eslint in control with prettier under the hood. <code>eslint-config-prettier</code> disables eslint&#39;s styling rules. And you can use prettier for that.</p></blockquote><h2 id="相关回答" tabindex="-1">相关回答 <a class="header-anchor" href="#相关回答" aria-label="Permalink to &quot;相关回答&quot;">​</a></h2><ul><li><a href="https://stackoverflow.com/questions/45914485/make-prettier-ignore-javascript-formatting" target="_blank" rel="noreferrer">https://stackoverflow.com/questions/45914485/make-prettier-ignore-javascript-formatting</a></li></ul><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><h3 id="prettier-s-settings" tabindex="-1">Prettier&#39;s Settings <a class="header-anchor" href="#prettier-s-settings" aria-label="Permalink to &quot;Prettier&#39;s Settings&quot;">​</a></h3><p>Settings will be read from:</p><ol><li>File system, first matching file in <ol><li><code>package.json</code> - <code>prettier</code> key</li><li><code>.prettierrc</code></li><li><code>.prettier.config.js</code></li></ol></li><li>VSCode prettier&#39;s settings, described below</li><li>VSCode prettier&#39;s default settings</li></ol><h4 id="prettier-printwidth-default-80" tabindex="-1"><code>prettier.printWidth</code> (default: 80) <a class="header-anchor" href="#prettier-printwidth-default-80" aria-label="Permalink to &quot;\`prettier.printWidth\` (default: 80)&quot;">​</a></h4><p>Fit code within this line limit</p><h4 id="prettier-tabwidth-default-2" tabindex="-1"><code>prettier.tabWidth</code> (default: 2) <a class="header-anchor" href="#prettier-tabwidth-default-2" aria-label="Permalink to &quot;\`prettier.tabWidth\` (default: 2)&quot;">​</a></h4><p>Number of spaces it should use per tab</p><h4 id="prettier-singlequote-default-false" tabindex="-1"><code>prettier.singleQuote</code> (default: false) <a class="header-anchor" href="#prettier-singlequote-default-false" aria-label="Permalink to &quot;\`prettier.singleQuote\` (default: false)&quot;">​</a></h4><p>If true, will use single instead of double quotes</p><h4 id="prettier-trailingcomma-default-none" tabindex="-1"><code>prettier.trailingComma</code> (default: &#39;none&#39;) <a class="header-anchor" href="#prettier-trailingcomma-default-none" aria-label="Permalink to &quot;\`prettier.trailingComma\` (default: &#39;none&#39;)&quot;">​</a></h4><p>Controls the printing of trailing commas wherever possible. Valid options:</p><ul><li>&quot;none&quot; - No trailing commas</li><li>&quot;es5&quot; - Trailing commas where valid in ES5 (objects, arrays, etc)</li><li>&quot;all&quot; - Trailing commas wherever possible (function arguments)</li></ul><h4 id="prettier-bracketspacing-default-true" tabindex="-1">prettier.bracketSpacing (default: true) <a class="header-anchor" href="#prettier-bracketspacing-default-true" aria-label="Permalink to &quot;prettier.bracketSpacing (default: true)&quot;">​</a></h4><p>Controls the printing of spaces inside object literals</p><h4 id="prettier-jsxbracketsameline-default-false" tabindex="-1">prettier.jsxBracketSameLine (default: false) <a class="header-anchor" href="#prettier-jsxbracketsameline-default-false" aria-label="Permalink to &quot;prettier.jsxBracketSameLine (default: false)&quot;">​</a></h4><p>If true, puts the <code>&gt;</code> of a multi-line jsx element at the end of the last line instead of being alone on the next line</p><h4 id="prettier-parser-default-babylon-javascript-only" tabindex="-1">prettier.parser (default: &#39;babylon&#39;) - Javascript only <a class="header-anchor" href="#prettier-parser-default-babylon-javascript-only" aria-label="Permalink to &quot;prettier.parser (default: &#39;babylon&#39;) - Javascript only&quot;">​</a></h4><p>Which parser to use. Valid options are &#39;flow&#39; and &#39;babylon&#39;.</p><h4 id="prettier-semi-default-true" tabindex="-1">prettier.semi (default: true) <a class="header-anchor" href="#prettier-semi-default-true" aria-label="Permalink to &quot;prettier.semi (default: true)&quot;">​</a></h4><p>Whether to add a semicolon at the end of every line (semi: true), or only at the beginning of lines that may introduce ASI failures (semi: false)</p><h4 id="prettier-usetabs-default-false" tabindex="-1">prettier.useTabs (default: false) <a class="header-anchor" href="#prettier-usetabs-default-false" aria-label="Permalink to &quot;prettier.useTabs (default: false)&quot;">​</a></h4><p>If true, indent lines with tabs</p><h3 id="vscode-specific-settings" tabindex="-1">VSCode specific settings <a class="header-anchor" href="#vscode-specific-settings" aria-label="Permalink to &quot;VSCode specific settings&quot;">​</a></h3><h4 id="prettier-eslintintegration-default-false-javascript-and-typescript-only" tabindex="-1">prettier.eslintIntegration (default: false) - Javascript and TypeScript only <a class="header-anchor" href="#prettier-eslintintegration-default-false-javascript-and-typescript-only" aria-label="Permalink to &quot;prettier.eslintIntegration (default: false) - Javascript and TypeScript only&quot;">​</a></h4><p>Use <em><a href="https://github.com/prettier/prettier-eslint" target="_blank" rel="noreferrer">prettier-eslint</a></em> instead of <em>prettier</em>. Other settings will only be fallbacks in case they could not be inferred from eslint rules.</p><h4 id="prettier-javascriptenable-default-javascript-javascriptreact" tabindex="-1">prettier.javascriptEnable (default: [&quot;javascript&quot;, &quot;javascriptreact&quot;]) <a class="header-anchor" href="#prettier-javascriptenable-default-javascript-javascriptreact" aria-label="Permalink to &quot;prettier.javascriptEnable (default: [&quot;javascript&quot;, &quot;javascriptreact&quot;])&quot;">​</a></h4><p>Advanced feature. Use this to opt in / out prettier on various language ids. Restart required. Use parser <code>babylon</code> or <code>flow</code> depending on <code>prettier.parser</code> for given language ids. Use with care.</p><h4 id="prettier-typescriptenable-default-typescript-typescriptreact" tabindex="-1">prettier.typescriptEnable (default: [&quot;typescript&quot;, &quot;typescriptreact&quot;]) <a class="header-anchor" href="#prettier-typescriptenable-default-typescript-typescriptreact" aria-label="Permalink to &quot;prettier.typescriptEnable (default: [&quot;typescript&quot;, &quot;typescriptreact&quot;])&quot;">​</a></h4><p>Advanced feature. Use this to opt in / out prettier on various language ids. Restart required. Use parser <code>typescript</code> for given language ids. Use with care.</p><h4 id="prettier-cssenable-default-css-less-scss" tabindex="-1">prettier.cssEnable (default: [&quot;css&quot;, &quot;less&quot;, &quot;scss&quot;]) <a class="header-anchor" href="#prettier-cssenable-default-css-less-scss" aria-label="Permalink to &quot;prettier.cssEnable (default: [&quot;css&quot;, &quot;less&quot;, &quot;scss&quot;])&quot;">​</a></h4><p>Advanced feature. Use this to opt in / out prettier on various language ids. Restart required. Use parser <code>postcss</code> for given language ids. Use with care.</p><h4 id="prettier-jsonenable-default-json" tabindex="-1">prettier.jsonEnable (default: [&quot;json&quot;]) <a class="header-anchor" href="#prettier-jsonenable-default-json" aria-label="Permalink to &quot;prettier.jsonEnable (default: [&quot;json&quot;])&quot;">​</a></h4><p>Advanced feature. Use this to opt in / out prettier on various language ids. Restart required. Use parser <code>json</code> for given language ids. Use with care.</p><h4 id="prettier-graphqlenable-default-graphql" tabindex="-1">prettier.graphqlEnable (default: [&quot;graphql&quot;]) <a class="header-anchor" href="#prettier-graphqlenable-default-graphql" aria-label="Permalink to &quot;prettier.graphqlEnable (default: [&quot;graphql&quot;])&quot;">​</a></h4><p>Advanced feature. Use this to opt in / out prettier on various language ids. Restart required. Use parser <code>graphql</code> for given language ids. Use with care.</p><h2 id="prettier-resolution" tabindex="-1">Prettier resolution <a class="header-anchor" href="#prettier-resolution" aria-label="Permalink to &quot;Prettier resolution&quot;">​</a></h2><p>This extension will use prettier from your project&#39;s local dependencies. Should prettier not be installed locally with your project&#39;s dependencies, a copy will be bundled with the extension.</p><ul><li><a href="https://github.com/prettier/prettier-vscode" target="_blank" rel="noreferrer">https://github.com/prettier/prettier-vscode</a></li></ul><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>`,62);function C(e,y,v,A,D,B){const r=n,l=p("ClientOnly");return s(),h("div",null,[b,d(l,null,{default:u(()=>{var t,a;return[(((t=e.$frontmatter)==null?void 0:t.aside)??!0)&&(((a=e.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(s(),f(r,{key:0,article:e.$frontmatter},null,8,["article"])):g("",!0)]}),_:1}),q])}const F=o(m,[["render",C]]);export{E as __pageData,F as default};
