import{_ as i,a,af as n,o as t}from"./chunks/framework.C87LdZyP.js";const h="/assets/1382395638243250.DA7bDgDx.png",l="/assets/1360180574134666.BsPX9U4w.png",p="/assets/1360497389537208.DF1t-xq9.png",k="/assets/1360601938145958.Bvqx0u44.png",e="/assets/1360695570981125.rJ2VhDaA.png",F="/assets/1369438949600416.DkcJB34e.png",r="/assets/1369400721360791.B_oDB52r.png",d="/assets/1369802560707208.2FH9DUbI.png",g="/assets/1372985208395833.CUvO0Kbq.png",y="/assets/1372948575413250.BgZ05Vq_.png",o="/assets/1373409672618833.C7ajvgkK.png",D="/assets/1378667327234458.DjuqJk-T.png",c="/assets/1378733465601250.CbwcNuKV.png",C="/assets/1370450174714041.3CKFYJLl.png",u="/assets/1382197834882916.DO6OLh5m.png",m="/assets/1382105186468375.dVG-qDrN.png",A="/assets/1371153810775250.XHKd_jsF.png",w=JSON.parse('{"title":"使用 Danswer 部署一个生成式 AI 驱动的企业级私有知识库系统","description":"","frontmatter":{"title":"使用 Danswer 部署一个生成式 AI 驱动的企业级私有知识库系统","date":"2023-05-27T00:00:00.000Z","tags":["ai","ml"],"category":["AI"]},"headers":[],"relativePath":"posts/2023/05/2023-05-27-danswer.md","filePath":"posts/2023/05/2023-05-27-danswer.md","lastUpdated":1718173059000}'),b={name:"posts/2023/05/2023-05-27-danswer.md"};function _(v,s,B,f,E,q){return t(),a("div",null,s[0]||(s[0]=[n('<blockquote><p>Danswer是一个开源企业问答工具，使用 MIT 许可证。可轻松部署在任意地方，支持 ChatGPT、本地开源模型(正在支持）、文件上传、网站知识、OpenID 等。</p></blockquote><p><img src="'+h+`" alt=""></p><p>整体来说，项目很强大，由于用了 OpenAI，个人和企业使用的时候还是有一定门槛的。我自己部署的时候也不是像官网说的那么一帆风顺，中途遇到的几个问题都有记录。</p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>Danswer允许您针对内部文档提出自然语言问题，并获得由源材料中的引用和参考文献支持的可靠答案，以便您始终可以信任您得到的结果。您可以连接到许多常用工具，例如 Slack、GitHub、Confluence 等。</p><p>特点：</p><ul><li>由生成式人工智能模型提供支持的直接质量检查，答案由引用和源链接支持。</li><li>使用最新的法学硕士进行智能文档检索（语义搜索/重新排名）。</li><li>由自定义深度学习模型支持的人工智能助手，用于解释用户意图。</li><li>用户身份验证和文档级访问管理。</li><li>Slack、GitHub、GoogleDrive、Confluence、本地文件和网络抓取的连接器，未来还会有更多连接器。</li><li>选择使用 Orca、Falcon 等开源 LLM 代替 OpenAI GPT。(UI 正在支持)</li><li>管理仪表板用于管理连接器并设置实时更新获取等功能。</li><li>一行 Docker Compose（或 Kubernetes）可在任何地方托管部署 Danswer。</li></ul><h2 id="安装启动" tabindex="-1">安装启动 <a class="header-anchor" href="#安装启动" aria-label="Permalink to &quot;安装启动&quot;">​</a></h2><p>我们先 Clone 项目：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/danswer-ai/danswer.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> danswer/deployment/docker_compose</span></span></code></pre></div><p>使用 Docker Compose 启动，</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> compose</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker-compose.dev.yml</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> danswer-stack</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --pull</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> always</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --force-recreate</span></span></code></pre></div><p>镜像总共下载7个多 G，下载过程有点儿长，</p><p><img src="`+l+'" alt=""></p><p><img src="'+p+'" alt=""></p><p>运行成功之后查看一下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ps</span></span></code></pre></div><p><img src="'+k+'" alt=""></p><p>后端服务启动比较耗时，如果还没启动好会开到这个界面：</p><p><img src="'+e+'" alt=""></p><p>等待过程中检查服务，发现 api 服务一直重启：</p><p><img src="'+F+'" alt=""></p><p>查看日志发现错误，网络问题：</p><p><img src="'+r+`" alt=""></p><p>添加 Dockerd 代理：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/systemd/system/docker.service.d</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> touch</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/systemd/system/docker.service.d/proxy.conf</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Environment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;HTTP_PROXY=http://proxy.example.com:8080/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Environment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;HTTPS_PROXY=http://proxy.example.com:8080/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Environment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;</span></span></code></pre></div><p>添加 Container 运行代理 <code>~/.docker/config.json</code>，</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> &quot;proxies&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">   &quot;default&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">     &quot;httpProxy&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;http://12.1.110.240:7890&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">     &quot;httpsProxy&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;http://12.1.110.240:7890&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">     &quot;all_proxy&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;socks5://12.1.110.240:7891&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">     &quot;noProxy&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;localhost,127.0.0.1,.example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">   }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>也可以在容器启动前配置：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> https_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://12.1.110.240:7890 http_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://12.1.110.240:7890 all_proxy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">socks5://12.1.110.240:7891</span></span></code></pre></div><p>启动容器后测试：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://huggingface.co/sentence-transformers/all-distilroberta-v1/resolve/main/tokenizer_config.json</span></span></code></pre></div><p>网络成功：</p><p><img src="`+d+'" alt=""></p><p>然后重新启动会自动下载模型：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">danswer/intent-model</span></span></code></pre></div><p>模型下载成功之后：</p><p><img src="'+g+`" alt=""></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">INFO:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Started</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [10]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">INFO:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Waiting</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> application</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> startup.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 08:10:12</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 155</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Using</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Internal</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Model:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> openai-chat-completion</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 08:10:12</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 156</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Actual</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> LLM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> model</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> version:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> gpt-3.5-turbo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 08:10:12</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 159</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> User</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Authentication</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> turned</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> off</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 08:10:12</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 176</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Warming</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> local</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NLP</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> models.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">All</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> model</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> checkpoint</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> layers</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> were</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> used</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> when</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> initializing</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> TFDistilBertForSequenceClassification.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">All</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> layers</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> TFDistilBertForSequenceClassification</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> were</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> initialized</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> model</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> checkpoint</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> danswer/intent-model.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">If</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> your</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> similar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> model</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> checkpoint</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> was</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> trained</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> on,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> can</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> already</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> TFDistilBertForSequenceClassification</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> predictions</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> without</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> further</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> training.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 08:10:24</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 181</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Verifying</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> query</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> preprocessing</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (NLTK) data is downloaded</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data] Downloading package stopwords to /root/nltk_data...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data]   Package stopwords is already up-to-date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Downloading</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> wordnet</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /root/nltk_data...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data]   Package wordnet is already up-to-date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Downloading</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> punkt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /root/nltk_data...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data]   Package punkt is already up-to-date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 08:10:25</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 186</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Verifying</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> public</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> credential</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exists.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 08:10:25</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 189</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Verifying</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Document</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Indexes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> are</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> available.</span></span></code></pre></div><p>向量数据库链接出错：</p><p><img src="`+y+'" alt=""></p><p>确认 qdrant 运行正常：</p><p><img src="'+o+`" alt=""></p><p>然后查看代码，配置 <code>api_server</code> 容器的环境变量， 先直接使用 IP：</p><ul><li><code>backend/danswer/utils/clients.py</code></li><li><code>backend/danswer/configs/app_configs.py</code></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> QDRANT_HOST=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">172.18.0.4</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">   #vector_db</span></span></code></pre></div><p>在容器内测试：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> qdrant_client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> QdrantClient</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">QDRANT_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> os.environ.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;QDRANT_HOST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;localhost&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">QDRANT_HOST</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">QDRANT_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;172.18.0.4&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">QDRANT_PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 6333</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> QdrantClient(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">QDRANT_HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">QDRANT_PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">client.get_collections()</span></span></code></pre></div><p>重启容器发现 typesense 链接也报错，重新配置环境变量：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 09:48:06</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 186</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Verifying</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> public</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> credential</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exists.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 09:48:06</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 189</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Verifying</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Document</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Indexes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> are</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> available.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ERROR:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    Traceback</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (most </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">recent</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> call</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">):</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  File</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/usr/local/lib/python3.11/site-packages/starlette/routing.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 677,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> lifespan</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    async</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> self.lifespan_context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">as</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> maybe_state:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  File</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/usr/local/lib/python3.11/site-packages/starlette/routing.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 566,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> __aenter__</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    await</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> self._router.startup</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  File</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/usr/local/lib/python3.11/site-packages/starlette/routing.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 656,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> startup</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    handler</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  File</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/app/danswer/main.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 197,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> startup_event</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> check_typesense_collection_exist</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">TYPESENSE_DEFAULT_COLLECTION</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  File</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/app/danswer/datastores/typesense/store.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 53,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> check_typesense_collection_exist</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    client.collections[collection_name].retrieve</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  File</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/usr/local/lib/python3.11/site-packages/typesense/collection.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 19,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> retrieve</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> self.api_call.get</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">self._endpoint_path</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  File</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/usr/local/lib/python3.11/site-packages/typesense/api_call.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 138,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> get</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> self.make_request</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">requests.get,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> endpoint,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> as_json,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  File</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/usr/local/lib/python3.11/site-packages/typesense/api_call.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 116,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> make_request</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    raise</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ApiCall.get_exception</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">r.status_code</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">r.status_code,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> error_message</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">typesense.exceptions.TypesenseClientError:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [Errno </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">502]</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> API</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> error.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ERROR:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    Application</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> startup</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> failed.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Exiting.</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> QDRANT_HOST=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">172.18.0.4</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">   #vector_db</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> TYPESENSE_HOST=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">172.18.0.2</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #search_engine</span></span></code></pre></div><p>看到运行成功：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">If</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> your</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> similar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> task</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> model</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> checkpoint</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> was</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> trained</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> on,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> can</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> already</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> TFDistilBertForSequenceClassification</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> predictions</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> without</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> further</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> training.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 09:57:25</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 181</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Verifying</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> query</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> preprocessing</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (NLTK) data is downloaded</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data] Downloading package stopwords to /root/nltk_data...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data]   Package stopwords is already up-to-date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Downloading</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> wordnet</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /root/nltk_data...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data]   Package wordnet is already up-to-date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Downloading</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> punkt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /root/nltk_data...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[nltk_data]   Package punkt is already up-to-date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 09:57:27</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 186</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Verifying</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> public</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> credential</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exists.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 09:57:27</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 189</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Verifying</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Document</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Indexes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> are</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> available.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">08/11/2023</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 09:57:27</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> AM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">              main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 198</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Creating</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Typesense</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> collection</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> name:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> danswer_index</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">INFO:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Application</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> startup</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> complete.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">INFO:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Uvicorn</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> running</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> http://0.0.0.0:8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (Press </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">CTRL+C</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> quit</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p>刷新界面看到，没有报错，提示我们输入 OpenAI 的 Key：</p><p><img src="`+D+'" alt=""></p><p>验证 Key：</p><p><img src="'+c+'" alt=""></p><h2 id="配置入口" tabindex="-1">配置入口 <a class="header-anchor" href="#配置入口" aria-label="Permalink to &quot;配置入口&quot;">​</a></h2><p>等模型加载好，页面正常之后，点击配置：</p><p><img src="'+C+'" alt=""></p><h2 id="索引本地文件" tabindex="-1">索引本地文件 <a class="header-anchor" href="#索引本地文件" aria-label="Permalink to &quot;索引本地文件&quot;">​</a></h2><p>文件连接器可以让 Danswer 从本地文件访问知识。</p><p>文件连接器会索引用户上传的文件。</p><ul><li>目前支持<code>.txt</code>文件或包含<code>.txt</code>文件<code>.zip</code>的文件。</li></ul><p>选择文件然后上传即可：</p><p><img src="'+u+'" alt=""></p><h2 id="索引网页" tabindex="-1">索引网页 <a class="header-anchor" href="#索引网页" aria-label="Permalink to &quot;索引网页&quot;">​</a></h2><p>网页连接器可以让 Danswer 从网页获取知识。</p><p>Web 连接器根据基本 URL 抓取站点。</p><ul><li>它仅索引来自同一域并包含相同基本路径的文件。</li><li>它将索引可通过基本 URL 的超链接访问的页面。</li><li>通过一些启发式方法清理文本内容，并提取一些元数据（例如页面标题）。</li></ul><p><img src="'+m+'" alt=""></p><h2 id="其他连接器" tabindex="-1">其他连接器 <a class="header-anchor" href="#其他连接器" aria-label="Permalink to &quot;其他连接器&quot;">​</a></h2><p>Danswer 还支持其他连接器，比如：</p><ul><li>Slack、</li><li>Github、</li><li>Confluence、</li><li>Jira、</li><li>Google Driver、</li><li>Notion</li></ul><h2 id="关于开源模型" tabindex="-1">关于开源模型 <a class="header-anchor" href="#关于开源模型" aria-label="Permalink to &quot;关于开源模型&quot;">​</a></h2><p>使用 OpenAI 的 Key 可以和方便实现，作者文档上也说了支持开源模型，但是系统内没有找到开启关闭的地方， 我从代码里面找到了后端关于模型的配置，是支持 GPT4ALL 生态的：</p><p><img src="'+A+`" alt=""></p><hr><p>文件多行打印的语法：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">a.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # 开始</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">test测试</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">多行文本</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">重定向</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">到文件</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span></span></code></pre></div><p>比如：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/etc/hosts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">127.0.0.1       localhost</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">::1     localhost ip6-localhost ip6-loopback</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">fe00::0 ip6-localnet</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">ff00::0 ip6-mcastprefix</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">ff02::1 ip6-allnodes</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">ff02::2 ip6-allrouters</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">172.18.0.6      4e40ba524b6c</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">3.112.180.216  api.openai.com</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#ADBAC7;">EOF</span></span></code></pre></div><h2 id="资料" tabindex="-1">资料 <a class="header-anchor" href="#资料" aria-label="Permalink to &quot;资料&quot;">​</a></h2><ul><li><a href="https://www.marvel.com/comics/creators/7190/skottie_young?byZone=marvel_site_zone&amp;offset=0&amp;byType=creator&amp;dateStart=&amp;dateEnd=&amp;orderBy=release_date+desc&amp;formatType=issue,digitalcomic,collection&amp;byId=7190&amp;limit=96&amp;count=10&amp;totalcount=114" target="_blank" rel="noreferrer">https://www.marvel.com/comics/creators/7190/skottie_young?byZone=marvel_site_zone&amp;offset=0&amp;byType=creator&amp;dateStart=&amp;dateEnd=&amp;orderBy=release_date+desc&amp;formatType=issue,digitalcomic,collection&amp;byId=7190&amp;limit=96&amp;count=10&amp;totalcount=114</a></li><li><a href="https://imagecomics.com/creators/skottie-young" target="_blank" rel="noreferrer">https://imagecomics.com/creators/skottie-young</a></li><li><a href="https://en.wikipedia.org/wiki/Skottie_Young" target="_blank" rel="noreferrer">https://en.wikipedia.org/wiki/Skottie_Young</a></li></ul><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>`,87)]))}const T=i(b,[["render",_]]);export{w as __pageData,T as default};
