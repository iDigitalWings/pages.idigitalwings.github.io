import{_ as o,a as r,af as s,e,M as t,x as n,o as i}from"./chunks/framework.C87LdZyP.js";const p="/assets/47129308730125.CSmjXYVH.png",d="/assets/47283507420625.LUxrJntP.png",u="/assets/48502362720208.uO0Fh3RG.png",A=JSON.parse('{"title":"《构建个人知识图谱》017：AI 生成词条释义","description":"","frontmatter":{"title":"《构建个人知识图谱》017：AI 生成词条释义","shortTitle":"016：AI词条释义","date":"2024-09-04T00:00:00.000Z","tags":["ai","llm"],"category":["ai"]},"headers":[],"relativePath":"topics/knowledge-graph/articles/2024-09-04-knowledeggraph-017-ai-desc.md","filePath":"topics/knowledge-graph/articles/2024-09-04-knowledeggraph-017-ai-desc.md","lastUpdated":1726312027000}'),m={name:"topics/knowledge-graph/articles/2024-09-04-knowledeggraph-017-ai-desc.md"};function g(l,a,h,b,k,f){return i(),r("div",null,[a[1]||(a[1]=s('<div class="admonition abstract"><p class="admonition-title">abstract</p><p>之前图谱应用做了几个小升级，增加一个 AI 释义的功能，给大家聊聊。</p></div><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>图谱工具在使用过程中如何变得更酷一点，更智能一点。第一个能想到的点就是让 AI 来帮助你理解图谱。</p><h3 id="场景" tabindex="-1">场景 <a class="header-anchor" href="#场景" aria-label="Permalink to &quot;场景&quot;">​</a></h3><p>我们探讨的场景基于已经构建好的图谱，而不是构建知识图谱，数据可能是自己精心录入的，也可能是机器自动化生成的。 我们会在日常使用中希望能看到词条的一些解释，这些解释一部分是你提前准备的，对于数据不完备的节点，我们期望 AI 能 辅助我们理解。</p><h2 id="设计" tabindex="-1">设计 <a class="header-anchor" href="#设计" aria-label="Permalink to &quot;设计&quot;">​</a></h2><p>UI 实现比较简单，在点击某个节点的时候，右侧的详情面板自动调用大模型来输出当前节点的释义,如下图所示：</p><p><img src="'+p+'" alt=""></p><p>由于内容比较多，我们一般会只展示几行，余下的内容让用户打开自行阅读。这样一来，有需要的时候用户就可以看到整个释义，不需要的时候也不会影响界面的布局和使用。 这也和当前很多 AI 能力的案例一致，比如谷歌、必应等搜索引擎的AI回答。</p><p><img src="'+d+'" alt=""></p><p>当然，我们还可以让 AI 帮我们生成一些推荐问题，进行连续提问，不过我对这个没有太多需求，就不是实现了。</p><h2 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-label="Permalink to &quot;实现&quot;">​</a></h2><p><img src="'+u+'" alt=""></p><p>程序实现比较简单，在选中节点你的时候调用大模型，流式返回结果即可。</p><p>稍微值得一提的是<strong>提示词</strong>的设计，我们可以根据图谱的内容、性质、完善程度等来决定提示词的内容，可能的有以下一些版本。</p><h3 id="最简单" tabindex="-1">最简单 <a class="header-anchor" href="#最简单" aria-label="Permalink to &quot;最简单&quot;">​</a></h3>',16)),e("blockquote",null,[e("p",null,"帮我介绍一下图谱中实体 『"+t(l.node.name)+"』 的释义。尽量简洁，回答在 150 字以内。",1)]),a[2]||(a[2]=e("p",null,"这个在很多时候就够用了，就和你去搜索引擎搜索，或者直接在 ChatAPP 中提问一样。",-1)),a[3]||(a[3]=e("h3",{id:"属性等标签",tabindex:"-1"},[n("属性等标签 "),e("a",{class:"header-anchor",href:"#属性等标签","aria-label":'Permalink to "属性等标签"'},"​")],-1)),a[4]||(a[4]=e("p",null,"如果你的图谱中节点名称比较通用，可能有很多同义词，我们可以增加一些背景信息，来让大模型更好的解释节点，比如：",-1)),e("blockquote",null,[e("p",null,"介绍一下知识图谱 『"+t(l.node.graphName)+"』 中实体 『"+t(l.node.name)+"』 的释义。尽量简洁，回答在 150 字以内。",1)]),a[5]||(a[5]=e("p",null,"这样的话，一般就能避免歧义了。",-1)),a[6]||(a[6]=e("p",null,"如果你期望更精确的话，我们还可以继续增加背景信息:",-1)),e("blockquote",null,[e("p",null,"介绍一下知识图谱 『"+t(l.node.graphName)+"』 中实体 『"+t(l.node.name)+"』 的释义。 该节点有如下属性："+t(l.node.properties)+"， 节点的标签有："+t(l.node.tags)+"， 该节点的描述是："+t(l.node.description)+"， 和该节点相关的节点有："+t(l.node.relateNodes)+"。",1),a[0]||(a[0]=e("p",null,"回答尽量简洁，回答在 150 字以内。",-1))]),a[7]||(a[7]=e("h2",{id:"其他功能",tabindex:"-1"},[n("其他功能 "),e("a",{class:"header-anchor",href:"#其他功能","aria-label":'Permalink to "其他功能"'},"​")],-1)),a[8]||(a[8]=e("p",null,"如果是复杂的图谱，可能需要增加一些额外的功能，比如：",-1)),a[9]||(a[9]=e("ul",null,[e("li",null,"根据节点的关系进行分析"),e("li",null,"图谱内的智能问答"),e("li",null,"图谱AI自动修复对比，等等")],-1)),a[10]||(a[10]=e("p",null,"由于我的场景专注于个人，所以这些功能都不是必要。",-1)),a[11]||(a[11]=e("p",null,"最后咱们再回头看一下最终效果，这篇文章就到这里了。",-1))])}const P=o(m,[["render",g]]);export{A as __pageData,P as default};
