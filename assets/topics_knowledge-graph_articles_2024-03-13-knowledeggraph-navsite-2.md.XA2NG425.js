import{_ as o,a,af as r,o as n}from"./chunks/framework.C87LdZyP.js";const s="/assets/243095185169291.2h7OYp3B.png",e="/assets/245259525849125.MiFKahqZ.png",p="/assets/227126961205583.DLnECzEl.png",i="/assets/243572114672708.C8Ye3bag.png",l="/assets/227886516386375.Cywp1kYd.png",g="/assets/228759332320791.zn5PKXX_.png",c="/assets/244244489371708.DHx831i3.png",d="/assets/242383629030791.DG-lyyuE.png",h="/assets/242911224856500.Beu_cj5Z.png",m="/assets/243128555153458.D-80OeJA.png",_="/assets/270702744217791.Dkk6r3kS.png",w=JSON.parse('{"title":"《构建个人知识图谱》016：使用知识图谱生成导航网站 - 2","description":"","frontmatter":{"title":"《构建个人知识图谱》016：使用知识图谱生成导航网站 - 2","shortTitle":"016：生成导航网站 - 2","date":"2024-03-13T00:00:00.000Z","tags":["ai","llm"],"category":["ai"]},"headers":[],"relativePath":"topics/knowledge-graph/articles/2024-03-13-knowledeggraph-navsite-2.md","filePath":"topics/knowledge-graph/articles/2024-03-13-knowledeggraph-navsite-2.md","lastUpdated":1724039922000}'),u={name:"topics/knowledge-graph/articles/2024-03-13-knowledeggraph-navsite-2.md"};function b(k,t,q,f,v,x){return n(),a("div",null,t[0]||(t[0]=[r('<div class="admonition abstract"><p class="admonition-title">abstract</p><p>给知识图谱的网站导航增加页面内搜索和根据图谱关系的分组筛选功能。</p></div><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>知识图谱的导航网站功能做好上后，很快就发现两个问题。</p><p>一个问题是页面没有<strong>页面内搜索</strong>，不方便。</p><p>另一个问题是，由于我为了<strong>更好的可视化</strong>，在知识图谱建模的时候， 把<strong>分类</strong>这样的<strong>非实体当做节点</strong>。所以在知识导航的时候，这些数据不应该混在实体节点里面。</p><p>下面我们要做的就是把这些<strong>标签节点</strong>抽取出来，当做<strong>分组</strong>，显示在导航网站的正确地方。</p><p><img src="'+s+'" alt="效果预览"></p><p>!!! explain 知识图谱建模 我们在早期的文章特意讲过，对于<code>职业</code>、<code>分类</code>、等属性有两种处理方法：作为<strong>单独节点</strong>、或者作为<strong>节点属性</strong>，都可以。 具体选择根据个人喜好，以及查询习惯、使用场景来决定。 !!!</p><h2 id="数据标注" tabindex="-1">数据标注 <a class="header-anchor" href="#数据标注" aria-label="Permalink to &quot;数据标注&quot;">​</a></h2><p>为了方便处理，我在<strong>节点</strong>上增加一个<strong>是否是分组</strong>的属性， 来表示这个节点是不是一个分组节点（或者说标签节点），比如<code>开源</code>、<code>闭源</code>等，这些节点只是一个分类，没有实际的实体。</p><h3 id="如何判断节点类型" tabindex="-1">如何判断节点类型 <a class="header-anchor" href="#如何判断节点类型" aria-label="Permalink to &quot;如何判断节点类型&quot;">​</a></h3><p>上面我们说的两种节点，暂且称之为<strong>实体节点</strong>和<strong>标签节点</strong>。实体节点就是实际存在的，比如看得见摸得着，有主页，能购买等，具体的东西。</p><p>比如：</p><ul><li><code>ChatGPT</code> 他就是具体的一个产品，有自己的页面、大家能是实在在的使用。</li><li><code>AI</code>、<code>大模型</code>、<code>开源大模型</code>等等这些都只是一个泛指，你在显示中找不到一个东西是 AI，其他的不是AI。</li></ul><h3 id="标记" tabindex="-1">标记 <a class="header-anchor" href="#标记" aria-label="Permalink to &quot;标记&quot;">​</a></h3><p>为了快速整理节点属性，我们再节点列表上增加一个按钮，展示其属性状态：</p><ul><li>有颜色表示是标签</li><li>无颜色表示不是标签</li></ul><p><img src="'+e+'" alt="节点属性状态显示"></p><p>同时可以点击图标进行打标（标记或者取消），手动修正一下数据，结果大致如下：</p><p><img src="'+p+'" alt="手动打标"></p><h2 id="分组" tabindex="-1">分组 <a class="header-anchor" href="#分组" aria-label="Permalink to &quot;分组&quot;">​</a></h2><p>数据都标记好了，下一步是梳理节点关系，也就是如何对这些数据分组。 分组之前，我们先看一下数据分布关系，打开 3D 的视图观察一下。</p><p><img src="'+i+'" alt="常见的知识图谱数据"></p><p>上图是我默认的图谱，图中展示了它最大的一个团（还有其他和这个簇无任何连接的节点）， 经过各个方向反转，可以看到节点数据是无序的。</p><p>!!! explain 团 团是指图谱中的一组节点，它们之间<strong>完全连通</strong>，也就是说，<strong>任意两个节点之间都存在一条路径</strong>。 我这里的团特指相交的所有节点的集合（或者说不相交团），不包含子团。 !!!</p><p>再看一下 AIGC 行业图谱的数据：</p><p><img src="'+l+'" alt="树结构的知识图谱数据"></p><p>这个图谱只有一个团，没有不相交的团。同样的观察方式，我们可以看到数据呈现很明显的<strong>树形状</strong>。</p><div class="admonition note"><p class="admonition-title">note</p><p>对于导航网站来说，数据结构都比较简单，就像我们上面展示第二个场景， 单纯的<strong>树状结构</strong>，每个节点都<strong>只有一个父节点</strong>（或者只有一个标签属性）。</p></div><p>我们先考虑这个简单的树情况，假设分类如下结构，只有最后一个分类才有节点数据：</p><p><img src="'+g+'" alt="树分组的结构"></p><h3 id="分组标签样式" tabindex="-1">分组标签样式 <a class="header-anchor" href="#分组标签样式" aria-label="Permalink to &quot;分组标签样式&quot;">​</a></h3><p>我们刚刚提到，简单的知识图谱节点之间关系，可以表达成一棵树，而对应的的分组关系同样也天生是一棵树。</p><p>树的展现形式有很多种，常见的有菜单、树图、平铺等等。</p><p><img src="'+c+'" alt="树数据的展示"></p><p>我们用导航网站的形式展示知识图谱数据的初衷就是为了<strong>简单</strong>，<strong>避免复杂的操作</strong>，所以我们选择第三种平铺样式。</p><div class="admonition note"><p class="admonition-title">note</p><p>以上三种UI形态没有特别明显的界限。当然平铺的样式和交互也有很多种，这个不是重点，我们不做过多讨论。</p></div><h3 id="找根节点" tabindex="-1">找根节点 <a class="header-anchor" href="#找根节点" aria-label="Permalink to &quot;找根节点&quot;">​</a></h3><p>在常规的知识图谱中没有根节点，或者说有很多个根节点。 而确定根节点也很简单，查找出<strong>关系中没有在 target 中出现</strong>的即可。</p><p>如果有多个根节点，根节点正常作为分类，对于<strong>只有一个根节点</strong>的特殊情况， 此时根节点以便没有特别含义，可能是为了组织数据，我们做一下处理，，<strong>忽略该根节点</strong>，把它的子分组节点作为一级节点。</p><h3 id="导航实现" tabindex="-1">导航实现 <a class="header-anchor" href="#导航实现" aria-label="Permalink to &quot;导航实现&quot;">​</a></h3><p>图谱内的节点组织成对应的数据结构，在界面上展示出来。具体算法我就不细说了，很多AI都可以帮你完成。</p><p><img src="'+d+'" alt="分组结构和样式"></p><p>程序写好了，发现结果不对，检查了好几遍，才发现是数据问题。当时数据打标打错了。 回到打标界面重新打标。</p><blockquote><p>所以知识图谱好坏，数据本身起了基础决定性作用。</p></blockquote><p>现在数据基本显示正常了：</p><p><img src="'+h+'" alt="正常显示的分组"></p><p>显示内容里面过滤掉分组节点，功能就基本完成了。</p><p><img src="'+s+'" alt="节点数据不显示标签分组节点"></p><p>比如我们点击<code>创作工具</code>标签，就可以看到对应的数据。</p><p><img src="'+m+'" alt="点击筛选"></p><div class="admonition note"><p class="admonition-title">关于导航筛选和定位</p><p>页面中我没有把标签作为当行节点，也就是这个屏幕中导航数据显示不变，点击标签滚动到对应的位置。 原因是我觉得我的做法更<strong>高效</strong>，符合图谱或者<strong>个人知识索引的特性</strong>。</p><br><br><p>导航的方式更适合大众浏览，就是给你展示更多的信息来<strong>吸引你停留在网站</strong>上。 而这些优点对个人知识管理来说，没有必要，<strong>减少数据干扰</strong>优于不分轻重地更多的信息。</p></div><p>最后在看一下别的图谱，比如数据库：</p><p><img src="'+_+'" alt="数据库图谱过滤"></p>',54)]))}const D=o(u,[["render",b]]);export{w as __pageData,D as default};
