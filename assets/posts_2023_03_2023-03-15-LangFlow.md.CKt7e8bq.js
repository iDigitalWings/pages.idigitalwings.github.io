import{_ as i,a,af as l,o as t}from"./chunks/framework.C87LdZyP.js";const n="/assets/langflow-demo.Dsy_UeKq.gif",p="/assets/739794379848041.CWifqm3V.png",e="/assets/739817379496416.CttjCwkp.png",h="/assets/739838505241750.ZpJAcWIH.png",o="/assets/740002829034125.BmpSi0ph.png",k="/assets/740142227137375.BxudTl6S.png",r="/assets/740260076941958.CLnlgbZM.png",d="/assets/740630879926791.DdRLvxmU.png",g="/assets/740692733590375.CYDZSG17.png",c="/assets/740787502606541._ZikQPy3.png",F="/assets/740743354393833.ByxLjvTd.png",m="/assets/740982235597916.CHZlhais.png",f=JSON.parse('{"title":"LangFlow：使用图形界面完成 LangChain 开发","description":"","frontmatter":{"title":"LangFlow：使用图形界面完成 LangChain 开发","date":"2023-03-15T00:00:00.000Z","tags":["ai","ml"],"category":["AI"]},"headers":[],"relativePath":"posts/2023/03/2023-03-15-LangFlow.md","filePath":"posts/2023/03/2023-03-15-LangFlow.md","lastUpdated":1718173059000}'),y={name:"posts/2023/03/2023-03-15-LangFlow.md"};function u(C,s,D,b,L,_){return t(),a("div",null,s[0]||(s[0]=[l('<blockquote><p>LangFlow 是 LangChain 的 UI，采用反应流设计，提供一种轻松的方式来实验和原型流。 可以通过拖放组件和聊天框提供一种轻松的实验和原型流程方式。</p></blockquote><p><img src="'+n+'" alt=""></p><p>LangFlow 提供了一个用户友好的图形界面，旨在促进 LangChain 上应用程序和命令序列的测试和开发， 是一个基于 🦜🔗LangChain 的原生 LLM 图形开发界面。</p><p>借助 LangFlow，用户可以轻松地对 LLM 应用程序和提示链接进行实验和原型制作。</p><h2 id="预览" tabindex="-1">预览 <a class="header-anchor" href="#预览" aria-label="Permalink to &quot;预览&quot;">​</a></h2><p><img src="'+p+'" alt=""></p><p>黑色</p><p><img src="'+e+'" alt=""></p><p><img src="'+h+`" alt=""></p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>在本地安装使用 LangFlow 特别容易。</p><p>您可以从 pip 安装 LangFlow：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> langflow</span></span></code></pre></div><p>接下来，运行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> langflow</span></span></code></pre></div><p>或者</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">langflow</span></span></code></pre></div><p>可以看到如下输出：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> langflow</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[23:09:51] INFO     [23:09:51] - INFO - Logger set up with log level: 20(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)                                                                        logger.py:28</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">           INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     [23:09:51] - INFO - Log file: logs/langflow.log                                                                                   logger.py:30</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">INFO:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Started</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [53671]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">INFO:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Waiting</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> application</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> startup.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">INFO:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Application</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> startup</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> complete.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">INFO:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     Uvicorn</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> running</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> http://127.0.0.1:7860</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (Press </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">CTRL+C</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> quit</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p>访问 <code>http://127.0.0.1:7860</code> 即可打开界面。</p><p><img src="`+o+'" alt=""></p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p>要创建 LLM Chaining 应用程序，必须将三个组件添加到设计画布中：</p><ul><li>提示模板：<code>Promps</code></li><li>OpenAI 连接器：<code>LLMs</code></li><li>LLM链：<code>Chains</code></li></ul><p>一旦添加了这些组件，就可以构建应用程序，用户可以通过会话 UI 聊天。</p><p><img src="'+k+'" alt=""></p><p>如果你之前有使用过LangChain的经验，比如 <code>Chains</code>、<code>Agents</code>、<code>Prompt Engineering</code>， 那么 LangFlow 原生的 LLM 图形开发界面会非常容易理解。</p><h3 id="创建流程" tabindex="-1">创建流程 <a class="header-anchor" href="#创建流程" aria-label="Permalink to &quot;创建流程&quot;">​</a></h3><p>使用 LangFlow 创建流很容易。只需将侧边栏组件拖到画布上并将它们连接在一起即可创建您的管道。</p><p>LangFlow 提供了一系列可供选择的 LangChain 组件，包括：</p><ul><li>Chains</li><li>Agents</li><li>Prompts</li><li>LLMs</li><li>Memories</li><li>Tools</li><li>Toolkits</li><li>Wrappers。</li></ul><p>通过编辑提示参数、链接组件，跟踪测试，并导出您的流程。</p><p><img src="'+r+'" alt=""></p><p>完成后，您可以将流程导出为 JSON 文件以与 LangChain 一起使用。</p><p>请单击画布右上角的 <code>Export</code> 按钮，</p><p><img src="'+d+`" alt=""></p><p>然后在 Python 中，您可以使用以下命令加载流：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> langflow </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> load_flow_from_json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">flow </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> load_flow_from_json(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Conversation Chain.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Now you can use it like any chain</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">flow(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Hey, have you heard of LangFlow?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p>具体的代码可以在界面上点击 <code>Code</code> 查看：</p><p><img src="`+g+'" alt=""></p><h3 id="导入" tabindex="-1">导入 <a class="header-anchor" href="#导入" aria-label="Permalink to &quot;导入&quot;">​</a></h3><p>作者还提供了很多例子，可以让你快速的测试，点击 Import，</p><p><img src="'+c+'" alt=""></p><p>选择 <code>Examples</code>，然后就可以看到很多例子了：</p><p><img src="'+F+'" alt=""></p><p>填写 <code>OpenAI Key</code> 和 <code>OpenAI API Base</code>，然后在聊天框测试：</p><p><img src="'+m+'" alt=""></p><h2 id="项目地址" tabindex="-1">项目地址 <a class="header-anchor" href="#项目地址" aria-label="Permalink to &quot;项目地址&quot;">​</a></h2><p>Github 地址：</p><ul><li><a href="https://github.com/logspace-ai/langflow" target="_blank" rel="noreferrer">https://github.com/logspace-ai/langflow</a></li></ul><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>',52)]))}const v=i(y,[["render",u]]);export{f as __pageData,v as default};
