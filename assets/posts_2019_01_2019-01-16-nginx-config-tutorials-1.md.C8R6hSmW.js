import{_ as i,a,af as n,o as l}from"./chunks/framework.C87LdZyP.js";const o=JSON.parse('{"title":"Nginx 配置学习 - 1","description":"","frontmatter":{"title":"Nginx 配置学习 - 1","date":"2019-01-16T00:00:00.000Z","tags":["nginx"]},"headers":[],"relativePath":"posts/2019/01/2019-01-16-nginx-config-tutorials-1.md","filePath":"posts/2019/01/2019-01-16-nginx-config-tutorials-1.md","lastUpdated":1718175555000}'),h={name:"posts/2019/01/2019-01-16-nginx-config-tutorials-1.md"};function p(t,s,e,k,d,r){return l(),a("div",null,s[0]||(s[0]=[n(`<p>PS: 原文链接在末尾</p><h2 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-label="Permalink to &quot;变量&quot;">​</a></h2><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">set </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$a </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;hello world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><p>标准 <code>ngx_rewrite</code> 模块的 <code>set</code> 配置指令对变量进行赋值.</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">set $a hello;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">set $b </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;$a, $a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># hello, hello</span></span></code></pre></div><p>第三方 <code>ngx_echo</code> 模块的 <code>echo</code> 配置指令将 <code>$foo</code> 变量的值作为当前请求的响应体输出</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">server {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        set $foo hello;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        echo </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;foo: $foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="输出-符号" tabindex="-1">输出 $ 符号 <a class="header-anchor" href="#输出-符号" aria-label="Permalink to &quot;输出 $ 符号&quot;">​</a></h3><p>标准模块 <code>ngx_geo</code> 提供的配置指令 <code>geo</code> 来为变量 <code>$dollar</code> 赋予字符串 <code>$</code></p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">geo </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$dollar {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    default</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;$&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /test </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;This is a dollar sign: $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">dollar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="变量名紧跟-变量名的构成字符" tabindex="-1">变量名紧跟 变量名的构成字符 <a class="header-anchor" href="#变量名紧跟-变量名的构成字符" aria-label="Permalink to &quot;变量名紧跟 变量名的构成字符&quot;">​</a></h3><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    server {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            set $first </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;hello &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            echo </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;\${first}world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span></code></pre></div><h3 id="变量创建" tabindex="-1">变量创建 <a class="header-anchor" href="#变量创建" aria-label="Permalink to &quot;变量创建&quot;">​</a></h3><p>变量未创建就是用会报错, <code>set</code> <code>geo</code> 都会创建变量.</p><p>Nginx变量的创建只能发生在 Nginx 配置加载的时候,而赋值操作则只会发生在请求实际处理的时候</p><ul><li>这意味着不创建而直接使用变量会导致启动失败</li><li>我们无法在请求处理时动态地创建新的 Nginx 变量</li></ul><p>Nginx 变量一旦创建，其变量名的可见范围就是整个 Nginx 配置，甚至可以跨越不同虚拟主机的 <code>server</code> 配置块。</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">server {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">foo {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        echo </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;foo = [$foo]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">bar {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        set $foo </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        echo </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;foo = [$foo]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$ curl </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;http://127.0.0.1:8080/foo&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$ curl </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;http://127.0.0.1:8080/bar&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$ curl </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;http://127.0.0.1:8080/foo&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> []</span></span></code></pre></div><h2 id="变量的生命周期贯穿内部跳转" tabindex="-1">变量的生命周期贯穿内部跳转 <a class="header-anchor" href="#变量的生命周期贯穿内部跳转" aria-label="Permalink to &quot;变量的生命周期贯穿内部跳转&quot;">​</a></h2><p>第三方模块 ngx_echo 提供的 echo_exec 配置指令</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">server {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">foo {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        set $a hello;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        echo_exec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">bar;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">bar {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        echo </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;a = [$a]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> localhost:8080/foo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [hello]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> localhost:8080/foo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> []</span></span></code></pre></div><p>标准 ngx_rewrite 模块的 rewrite 配置指令其实也可以发起“内部跳转”，例如上面那个例子用 rewrite 配置指令可以改写成下面这样的形式：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">server {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">foo {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        set $a hello;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        rewrite </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">^</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">bar;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">bar {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        echo </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;a = [$a]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>另外, rewrite 还可以发起 301 和 302 这样的“外部跳转”</p><h2 id="用户变量-自定义变量" tabindex="-1">用户变量 / 自定义变量 <a class="header-anchor" href="#用户变量-自定义变量" aria-label="Permalink to &quot;用户变量 / 自定义变量&quot;">​</a></h2><p>上面讲的都是<code>用户自定义变量</code>, 还有一些 Nginx core 或者各个模块提供的预定义变量,或者说内建变量(buildin variable).</p><p>例如由 <code>ngx_http_core</code> 模块提供的内建变量 <code>$uri</code>，可以用来获取当前请求的 URI（经过解码，并且不含请求参数）， 而<code> $request_uri</code> 则用来获取请求最原始的 URI （未经解码，并且包含请求参数）</p><p>eg:</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    echo </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;uri = $uri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    echo </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;request_uri = $request_uri&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$ curl </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;http://127.0.0.1:8080/test&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uri </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /test</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">request_uri = /</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$ curl </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;http://127.0.0.1:8080/test?a=3&amp;b=4&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uri </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /test</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">request_uri = /</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">test?a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$ curl </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;http://127.0.0.1:8080/test/hello%20world?a=3&amp;b=4&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">uri </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /test/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">hello world</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">request_uri </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /test/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">hello</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">20world?a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4</span></span></code></pre></div><h3 id="arg-xxx-变量群" tabindex="-1">$arg_XXX 变量群 <a class="header-anchor" href="#arg-xxx-变量群" aria-label="Permalink to &quot;$arg_XXX 变量群&quot;">​</a></h3><p>名字以 arg_ 开头的所有变量</p><p>一个例子是 $arg_name，这个变量的值是当前请求名为 name 的 URI 参数的值，而且还是未解码的原始形式的值。我们来看一个比较完整的示例：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">location</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /test</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;name: </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$arg_name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;class: </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$arg_class</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>然后在命令行上使用各种参数组合去请求这个 /test 接口：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;http://127.0.0.1:8080/test&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">name:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">class:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;http://127.0.0.1:8080/test?name=Tom&amp;class=3&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">name:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Tom</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">class:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;http://127.0.0.1:8080/test?name=hello%20world&amp;class=9&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">name:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> hello%20world</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">class:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 9</span></span></code></pre></div><p>其实 $arg_name 不仅可以匹配 name 参数，也可以匹配 NAME 参数，抑或是 Name，等等：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;http://127.0.0.1:8080/test?NAME=Marry&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">name:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Marry</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">class:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;http://127.0.0.1:8080/test?Name=Jimmy&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">name:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Jimmy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">class:</span></span></code></pre></div><p>Nginx 会在匹配参数名之前，自动把原始请求中的参数名调整为全部小写的形式。</p><p>如果你想对 URI 参数值中的 %XX 这样的编码序列进行解码，可以使用第三方 <code>ngx_set_misc</code> 模块提供的 <code>set_unescape_uri</code> 配置指令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">location</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /test</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    set_unescape_uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> $name $arg_name;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    set_unescape_uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> $class $arg_class;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;name: </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;class: </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$class</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>现在我们再看一下效果：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;http://127.0.0.1:8080/test?name=hello%20world&amp;class=9&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">name:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> hello</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> world</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">class:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 9</span></span></code></pre></div><p>空格果然被解码出来了！</p><p>类似 <code>$arg_XXX</code> 的内建变量还有不少，比如用来取 <strong>cookie</strong> 值的 <code>$cookie_XXX</code> 变量群， 用来取请求头的 <code>$http_XXX</code> 变量群，以及用来取响应头的 <code>$sent_http_XXX</code> 变量群。</p><p>需要指出的是，许多内建变量都是只读的，比如我们刚才介绍的 <code>$uri</code> 和 <code>$request_uri</code>. 对只读变量进行赋值是应当绝对避免的，因为会有意想不到的后果</p><hr><ul><li>来源: <a href="https://openresty.org/download/agentzh-nginx-tutorials-zhcn.html#01-NginxVariables01" target="_blank" rel="noreferrer">https://openresty.org/download/agentzh-nginx-tutorials-zhcn.html#01-NginxVariables01</a></li></ul>`,50)]))}const c=i(h,[["render",p]]);export{o as __pageData,c as default};
