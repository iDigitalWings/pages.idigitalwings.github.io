import{_ as i,a,af as e,o as t}from"./chunks/framework.C87LdZyP.js";const n="/assets/download-icon.9TVMKSdt.png",c=JSON.parse('{"title":"todo Transformer 安装教程","description":"","frontmatter":{"title":"todo Transformer 安装教程","date":"2023-02-27T00:00:00.000Z","tags":["ai","ml"],"category":["AI"]},"headers":[],"relativePath":"posts/2023/02/2023-02-27-transformer-install.md","filePath":"posts/2023/02/2023-02-27-transformer-install.md","lastUpdated":1718173059000}'),h={name:"posts/2023/02/2023-02-27-transformer-install.md"};function p(l,s,r,k,d,o){return t(),a("div",null,s[0]||(s[0]=[e('<p>为您正在使用的任何深度学习库安装🤗转换器，设置缓存，并选择性地将转换器配置为🤗脱机运行。</p><p>🤗 Transformers 在 Python 3.6+、PyTorch 1.1.0+、TensorFlow 2.0+ 和 Flax 上进行了测试。</p><h2 id="使用-pip-安装" tabindex="-1">使用 Pip 安装 <a class="header-anchor" href="#使用-pip-安装" aria-label="Permalink to &quot;使用 Pip 安装&quot;">​</a></h2><p>首先在项目目录中创建一个虚拟环境：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> venv</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> .env</span></span></code></pre></div><p>激活虚拟环境。在 Linux 和 MacOS 上：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> .env/bin/activate</span></span></code></pre></div><p>在视窗上激活虚拟环境</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">.env/Scripts/activate</span></span></code></pre></div><p>现在，您可以使用以下命令安装🤗转换器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> transformers</span></span></code></pre></div><p>仅对于 CPU 支持，您可以方便地在一行中安装🤗转换器和深度学习库。例如，使用以下命令安装 🤗 Transformers 和 PyTorch：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;transformers[torch]&#39;</span></span></code></pre></div><p>🤗 转换器和TensorFlow 2.0：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;transformers[tf-cpu]&#39;</span></span></code></pre></div><p>M1 / ARM用户</p><p>在安装 TensorFLow 2.0 之前，您需要安装以下内容</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cmake</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pkg-config</span></span></code></pre></div><p>🤗 Transformer 和 FLax：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;transformers[flax]&#39;</span></span></code></pre></div><p>最后，通过运行以下命令检查Transformer是否已🤗正确安装。它将下载一个预训练模型：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;from transformers import pipeline; print(pipeline(&#39;sentiment-analysis&#39;)(&#39;we love you&#39;))&quot;</span></span></code></pre></div><p>然后打印出标签并评分：</p><div class="language-json5 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;label&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;POSITIVE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;score&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.9998704791069031</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}]</span></span></code></pre></div><h2 id="从源代码安装" tabindex="-1">从源代码安装 <a class="header-anchor" href="#从源代码安装" aria-label="Permalink to &quot;从源代码安装&quot;">​</a></h2><p>使用以下命令从源代码安装🤗转换器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> git+https://github.com/huggingface/transformers</span></span></code></pre></div><p>此命令安装最前沿版本，而不是最新版本。该版本对于了解最新发展非常有用。例如，如果自上次正式发布以来已修复错误，但尚未推出新版本。但是，这意味着版本可能并不总是稳定的。我们努力保持版本正常运行，大多数问题通常在几个小时或一天内解决。如果您遇到问题，请打开一个问题，以便我们更快地修复它！<code>main``stable``main``main``main</code></p><p>🤗 通过运行以下命令检查是否已正确安装变压器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;from transformers import pipeline; print(pipeline(&#39;sentiment-analysis&#39;)(&#39;I love you&#39;))&quot;</span></span></code></pre></div><h2 id="使用-conda-安装" tabindex="-1">使用 conda 安装 <a class="header-anchor" href="#使用-conda-安装" aria-label="Permalink to &quot;使用 conda 安装&quot;">​</a></h2><p>从 conda 通道安装：<code>huggingface</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> huggingface</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> transformers</span></span></code></pre></div><h2 id="缓存设置" tabindex="-1">缓存设置 <a class="header-anchor" href="#缓存设置" aria-label="Permalink to &quot;缓存设置&quot;">​</a></h2><p>预训练模型下载并本地缓存在：。这是 shell 环境变量给出的默认目录。在 Windows 上，默认目录由 提供。您可以更改如下所示的 shell 环境变量 - 按优先级顺序 - 以指定不同的缓存目录：<code>~/.cache/huggingface/hub``TRANSFORMERS_CACHE``C:\\Users\\username\\.cache\\huggingface\\hub</code></p><ol><li>外壳环境变量（默认）：或 。<code>HUGGINGFACE_HUB_CACHE``TRANSFORMERS_CACHE</code></li><li>外壳环境变量：。<code>HF_HOME</code></li><li>外壳环境变量： + 。<code>XDG_CACHE_HOME``/huggingface</code></li></ol><p>🤗 转换器将使用 shell 环境变量，或者如果您来自此库的早期迭代并设置了这些环境变量，除非您指定 shell 环境变量 。<code>PYTORCH_TRANSFORMERS_CACHE``PYTORCH_PRETRAINED_BERT_CACHE``TRANSFORMERS_CACHE</code></p><h2 id="离线模式" tabindex="-1">离线模式 <a class="header-anchor" href="#离线模式" aria-label="Permalink to &quot;离线模式&quot;">​</a></h2><p>🤗 转换器能够仅使用本地文件在防火墙或脱机环境中运行。设置环境变量以启用此行为。<code>TRANSFORMERS_OFFLINE=1</code></p><p>通过设置环境变量将数据集添加到🤗离线训练工作流。<code>HF_DATASETS_OFFLINE=1</code></p><p>例如，通常使用以下命令在防火墙连接到外部实例的普通网络上运行程序：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> examples/pytorch/translation/run_translation.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --model_name_or_path</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> t5-small</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --dataset_name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> wmt16</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --dataset_config</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ro-en</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ...</span></span></code></pre></div><p>在脱机实例中运行此相同程序：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">HF_DATASETS_OFFLINE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TRANSFORMERS_OFFLINE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> \\</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">python </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">examples/pytorch/translation/run_translation.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --model_name_or_path</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> t5-small</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --dataset_name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> wmt16</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --dataset_config</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ro-en</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ...</span></span></code></pre></div><p>脚本现在应该在不挂起或等待超时的情况下运行，因为它知道它应该只查找本地文件。</p><h3 id="获取模型和分词器以离线使用" tabindex="-1">获取模型和分词器以离线使用 <a class="header-anchor" href="#获取模型和分词器以离线使用" aria-label="Permalink to &quot;获取模型和分词器以离线使用&quot;">​</a></h3><p>脱机使用变形金刚的另一个选项是提前下载文件，然后在需要脱机使用🤗它们时指向其本地路径。有三种方法可以做到这一点：</p><ul><li>通过<a href="https://huggingface.co/models" target="_blank" rel="noreferrer">模型中心的open in new window</a>用户界面，单击 ↓ 图标下载文件。 <img src="'+n+`" alt="download-icon.png"></li><li>使用 [PreTrainedModel.from_pretrained()open in new window](<a href="https://huggingface.co/docs/transformers/v4.28.1/en/main_classes/model#" target="_blank" rel="noreferrer">https://huggingface.co/docs/transformers/v4.28.1/en/main_classes/model#</a> 工作流： <ol><li><p>使用 <a href="https://huggingface.co/docs/transformers/v4.28.1/en/main_classes/model#transformers.PreTrainedModel.from_pretrained" target="_blank" rel="noreferrer">PreTrainedModel.from_pretrained()open in new window</a> 提前下载文件：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> transformers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AutoTokenizer, AutoModelForSeq2SeqLM</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tokenizer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AutoTokenizer.from_pretrained(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;bigscience/T0_3B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AutoModelForSeq2SeqLM.from_pretrained(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;bigscience/T0_3B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div></li><li><p>使用 <a href="https://huggingface.co/docs/transformers/v4.28.1/en/main_classes/model#transformers.PreTrainedModel.save_pretrained" target="_blank" rel="noreferrer">PreTrainedModel.save_pretrained()open in new window</a> 将文件保存到指定目录：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tokenizer.save_pretrained(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;./your/path/bigscience_t0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> model.save_pretrained(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;./your/path/bigscience_t0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div></li><li><p>现在，当您离线时，使用 <a href="https://huggingface.co/docs/transformers/v4.28.1/en/main_classes/model#transformers.PreTrainedModel.from_pretrained" target="_blank" rel="noreferrer">PreTrainedModel.from_pretrained()open in new window</a> 从指定目录重新加载文件：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tokenizer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AutoTokenizer.from_pretrained(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;./your/path/bigscience_t0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AutoModel.from_pretrained(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;./your/path/bigscience_t0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div></li></ol></li><li>使用 <a href="https://github.com/huggingface/huggingface_hub/tree/main/src/huggingface_hub" target="_blank" rel="noreferrer">huggingface_hubopen in new window</a> 库以编程方式下载文件： <ol><li><p>在虚拟环境中安装库：<code>huggingface_hub</code></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">python </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">m pip install huggingface_hub</span></span></code></pre></div></li><li><p>使用 hf_hub_download 功能将文件下载到特定路径。例如，以下命令将文件从 T0 模型下载到所需路径：<code>config.json</code></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> huggingface_hub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> hf_hub_download</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> hf_hub_download(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">repo_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;bigscience/T0_3B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;config.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">cache_dir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;./your/path/bigscience_t0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div></li></ol></li></ul><p>下载文件并本地缓存后，请指定要加载和使用它的本地路径：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> transformers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AutoConfig</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AutoConfig.from_pretrained(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;./your/path/bigscience_t0/config.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p>有关下载存储在 Hub 上的文件的更多详细信息，请参阅<a href="https://huggingface.co/docs/hub/how-to-downstream" target="_blank" rel="noreferrer">如何从 Hub 下载文件open in new window</a>部分。</p><p><a href="https://huggingface.co/docs/transformers/quicktour" target="_blank" rel="noreferrer">←open in new window</a></p><hr><ul><li><a href="https://huggingface.co/docs/transformers/installation" target="_blank" rel="noreferrer">https://huggingface.co/docs/transformers/installation</a></li></ul>`,54)]))}const F=i(h,[["render",p]]);export{c as __pageData,F as default};
