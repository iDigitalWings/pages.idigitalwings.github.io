import{_ as i,a,af as t,o as n}from"./chunks/framework.C87LdZyP.js";const o=JSON.parse('{"title":"apisix-ingress-controller","description":"","frontmatter":{"title":"apisix-ingress-controller","date":"2022-08-09T00:00:00.000Z","tags":["apisix"],"category":["其它"]},"headers":[],"relativePath":"posts/2022/08/2022-08-09-apisix-ingress-controller-failed-401.md","filePath":"posts/2022/08/2022-08-09-apisix-ingress-controller-failed-401.md","lastUpdated":1718173059000}'),h={name:"posts/2022/08/2022-08-09-apisix-ingress-controller-failed-401.md"};function e(l,s,k,p,r,F){return n(),a("div",null,s[0]||(s[0]=[t(`<p>系统的网关 apisix-ingress-controller 这个 Pod 经常报一堆错误如下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2022-09-23T10:57:22+08:00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	\x1B[33mwarn\x1B[0m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	apisix/cluster.go:696</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	failed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> drain</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> body</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (read)	{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;url&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;http://apisix-admin.ingress-apisix.svc.cluster.local:9180/apisix/admin/routes&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;error&quot;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;http: read on closed response body (Client.Timeout or context cancellation while reading body)&quot;}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2022-09-23T10:57:22+08:00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	\x1B[31merror\x1B[0m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	apisix/route.go:119</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	failed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> routes:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> unexpected</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> code</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 401</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> message:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {&quot;error_msg&quot;:&quot;failed to check token&quot;}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2022-09-23T10:57:22+08:00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	\x1B[31merror\x1B[0m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	apisix/cluster.go:210</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	failed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> routes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> APISIX:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> unexpected</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> code</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 401</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> message:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {&quot;error_msg&quot;:&quot;failed to check token&quot;}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2022-09-23T10:57:24+08:00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	\x1B[31merror\x1B[0m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	apisix/route.go:119</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	failed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> routes:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> unexpected</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> code</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 401</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> message:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {&quot;error_msg&quot;:&quot;failed to check token&quot;}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2022-09-23T10:57:24+08:00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	\x1B[31merror\x1B[0m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	apisix/cluster.go:210</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	failed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> routes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> APISIX:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> unexpected</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> code</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 401</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> message:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {&quot;error_msg&quot;:&quot;failed to check token&quot;}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2022-09-23T10:57:27+08:00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	\x1B[31merror\x1B[0m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	apisix/route.go:119</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	failed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> routes:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> unexpected</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> code</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 401</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> message:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {&quot;error_msg&quot;:&quot;failed to check token&quot;}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2022-09-23T10:57:27+08:00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	\x1B[31merror\x1B[0m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	apisix/cluster.go:210</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	failed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> routes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> APISIX:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> unexpected</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> code</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 401</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> message:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {&quot;error_msg&quot;:&quot;failed to check token&quot;}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2022-09-23T10:57:27+08:00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	\x1B[31merror\x1B[0m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	apisix/cluster.go:170</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	failed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sync</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cache</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	{&quot;cost_time&quot;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;17.091870398s&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;cluster&quot;:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;default&quot;}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2022-09-23T10:57:27+08:00</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	\x1B[31merror\x1B[0m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	ingress/controller.go:433</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	failed</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> wait</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cluster</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> be</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ready:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> unexpected</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> code</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 401</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> message:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {&quot;error_msg&quot;:&quot;failed to check token&quot;}</span></span></code></pre></div><p>官网上有这么一段解释， <a href="https://apisix.apache.org/zh/docs/ingress-controller/FAQ/#4-why-there-are-some-error-logs-like-list-upstreams-failed-err-http-get-failed-url-blahblahblah-err-status-401" target="_blank" rel="noreferrer">Why there are some error logs like &quot;list upstreams failed, err: http get failed, url: blahblahblah, err: status: 401&quot;#</a>:</p><blockquote><p>So far apisix-ingress-controller doesn&#39;t support set admin_key for Apache APISIX, so when you deploy your APISIX cluster, admin_key should be removed from config.</p><p>Note since APISIX have two configuration files, the first is config.yaml, which contains the user specified configs, the other is config-default.yaml, which has all default items, config items in these two files will be merged. So admin_key in both files should be removed. You can customize these two configuration files and mount them to APISIX deployment.</p></blockquote><p>在 <code>apisix-configmap</code> 这个 ConfigMap 里面，发现有这样一段配置：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">apisix</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  default_cluster_base_url</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">http://apisix-admin.ingress-apisix.svc.cluster.local:9180/apisix/admin</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  default_cluster_admin_key</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;edd1c9f034335f136f87ad84b625c8f1&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  default_cluster_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;default&quot;</span></span></code></pre></div><p>应该不对。</p><p>在 <code>apisix</code> 这个 ConfigMap 中，有这样配置：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # Default token when use API to call for Admin API.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # *NOTE*: Highly recommended to modify this value to protect APISIX&#39;s Admin API.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # Disabling this configuration item means that the Admin API does not</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # require any authentication.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#  admin_key:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#    # admin: can everything for configuration data</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#    - name: &quot;admin&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#      key: 6e8a18df9ca5d2c7b2442d3283c659786</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#      role: admin</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#    # viewer: only can view configuration data</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#    - name: &quot;viewer&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#      key: 20424d40f408ba8155fd7019065c37025e</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#      role: viewer</span></span></code></pre></div><p>注释掉，然后再注释掉 <code>config-default.yaml</code> （和 config.yaml 同目录）。</p><p>启动会提示需要配置合理的 admin_key。</p><p>好在我们不需要在系统内进行 ingress 的管理，索性关闭 ingress-controller:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">ingress-controller</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span></span></code></pre></div><p>眼不见心不烦。</p>`,14)]))}const g=i(h,[["render",e]]);export{o as __pageData,g as default};
