import{_ as a,a as t,af as p,o as r}from"./chunks/framework.C87LdZyP.js";const d=JSON.parse('{"title":"DevSecOps: 人员篇（People）","description":"","frontmatter":{"title":"DevSecOps: 人员篇（People）","date":"2022-06-02T00:00:00.000Z","tags":["devsecops","devops"],"category":["运维"]},"headers":[],"relativePath":"posts/2022/06/2022-06-02-devsecops-technology.md","filePath":"posts/2022/06/2022-06-02-devsecops-technology.md","lastUpdated":1718173059000}'),s={name:"posts/2022/06/2022-06-02-devsecops-technology.md"};function o(l,e,n,i,c,_){return r(),t("div",null,e[0]||(e[0]=[p('<p>a</p><h2 id="建立安全冠军计划" tabindex="-1">建立安全冠军计划 <a class="header-anchor" href="#建立安全冠军计划" aria-label="Permalink to &quot;建立安全冠军计划&quot;">​</a></h2><p>DevOps 交付速度的加快有助于提高产品发布的频率，但通常以忽视安全实践为代价。创建一个安全拥护者计划，在其中分配和培训开发团队中的安全拥护者，确保安全在整个软件交付过程中始终是优先事项。安全拥护者负责协调、跟踪和报告项目的安全问题，并帮助决定何时让安全团队参与进来。安全冠军的一些最重要的职责包括：</p><ul><li>确保安全性不会阻碍积极的开发或审查。</li><li>有权做出决定（但要确保他们<strong>不会</strong>因为开发团队出现的安全问题而被追究责任）。</li><li>与 AppSec 团队合作制定缓解策略。</li><li>帮助进行质量检查和测试。</li><li>编写测试（从单元测试到集成测试）。</li><li>帮助开发 CI（持续集成）环境。</li><li>跟踪并及时了解现代安全攻击和防御。</li><li>介绍组织的知识体系，例如 OWASP（<a href="https://snyk-io.translate.goog/learn/owasp-top-10-vulnerabilities/?_x_tr_sl=en&amp;_x_tr_tl=zh-CN&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp" target="_blank" rel="noreferrer">Top 10</a>、应用程序安全验证标准、测试指南等）。</li><li>与运维人员和开发人员合作，使监控和日志记录与代码错误和异常保持一致。</li></ul><p>有关建立或发展安全冠军计划的更多信息，请查看<a href="https://translate.google.com/website?sl=en&amp;tl=zh-CN&amp;hl=en&amp;client=webapp&amp;u=https://www.devseccon.com/the-secure-developer-podcast/ep-72-security-champions-assemble" target="_blank" rel="noreferrer">The Secure Developer Podcast</a>的第 72 集。</p><h2 id="通过培训启用" tabindex="-1">通过培训启用 <a class="header-anchor" href="#通过培训启用" aria-label="Permalink to &quot;通过培训启用&quot;">​</a></h2><p>成功的<a href="https://snyk-io.translate.goog/series/devsecops/?_x_tr_sl=en&amp;_x_tr_tl=zh-CN&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp" target="_blank" rel="noreferrer">DevSecOps</a>计划还投资于现有开发团队成员和新员工的良好培训和专业发展。尽管软件开发人员通常不打算成为专业的渗透测试人员，但了解攻击者的观点以及实际的黑客练习和易受攻击的应用程序对他们来说仍然很有价值。devops 安全培训中应包含的最低主题是威胁建模、安全编码实践、漏洞概念和漏洞优先级。</p><p>传统的培训方法，例如基于计算机和讲师指导的课程，可能非常有效。良好的培训内容必须植根于公司的目标、政策和<a href="https://snyk-io.translate.goog/learn/software-security/?_x_tr_sl=en&amp;_x_tr_tl=zh-CN&amp;_x_tr_hl=en&amp;_x_tr_pto=wapp" target="_blank" rel="noreferrer">软件安全</a>标准，因此理想情况下应该在一定程度上针对团队和公司的特定需求量身定制。</p><p>组织还应考虑不太传统的培训模式。例如，利用安全挑战的游戏化已被证明可以极大地提高参与度和培训计划的整体成功率。参加会议、支持获得行业认证，甚至是内部认证计划也有助于提高参与度，并且作为副产品，还有助于留住熟练的资源。</p><p>**安全团队： **</p><p>安全界对技能差距进行了大量讨论。雇用具有长期经验的高技能资源可能很困难，甚至是不可能的。通过培训计划投资发展有凝聚力的安全团队可以帮助克服这一挑战。</p><p>组织经常发现，将员工从相关角色（例如开发、运营支持、网络管理等）转变为建立安全团队的有效路线图。这些资源的组织和技术经验是对传统安全专业知识的极大补充。</p><p>**更广泛的组织（每个人）： **</p><p>安全培训不应仅限于安全和 devops 团队，而应扩展到整个组织，以确保业务的各个方面都具有安全意识。</p><p>根据风险评估结果制定安全意识计划，确保每位员工在看到可能的威胁时知道如何应对，并熟悉内部安全政策。</p><p>安全团队和 devops 团队组织的午餐和学习会议应旨在传播他们的知识，以便共同处理模拟事件，以测试事件响应运行手册，并进一步根据每个受影响团队的流程对其进行调整。安全意识挑战、内部安全峰会和其他创造性方法可以帮助加强正式培训工作。</p><h2 id="提高同理心和合作" tabindex="-1">提高同理心和合作 <a class="header-anchor" href="#提高同理心和合作" aria-label="Permalink to &quot;提高同理心和合作&quot;">​</a></h2><p>几十年来，开发人员和安全从业者之间相互理解的需求一直是人们谈论的话题。帮助安全团队更加了解开发人员面临的挑战通常具有挑战性，反之亦然。然而，这种理解在实施成功改进方面创造的价值不容小觑。在 DevSecOps 模型中，这一点尤为重要。实施会给开发人员带来不必要压力的安全工具可能对管道有害。开发人员引入会造成重大安全风险的技术可能会导致同样具有破坏性的问题。</p><p>基于安全拥护者的理念，组织可以通过跨职能嵌入资源来提高成功的结果。分配安全资源在开发团队内工作一段时间，以及开发人员与安全团队合作，有助于建立这种同理心。然后，这些资源可以为他们的核心团队提供关于其他团队所面临的内部运作和挑战的重要观点。这是一种有效的做法，也可以扩展到运营团队甚至业务团队。</p><h2 id="加强成功" tabindex="-1">加强成功 <a class="header-anchor" href="#加强成功" aria-label="Permalink to &quot;加强成功&quot;">​</a></h2><p>研究表明，可以通过使用正强化来加强对新项目的采用。随着组织推出 DevSecOps 计划，这是一个很容易被忽视的领域。然而，实施奖励期望行为的策略至关重要。与培训一样，该计划的游戏化可以帮助推动强大的成果。应考虑提供诸如礼品卡、公司礼品或其他简单的奖励（如电子徽章或特殊认可）之类的东西。</p><p>当然，如何获得奖励的策略需要根据组织及其文化进行调整。对此没有一刀切的方法或框架。但是，重要的是要考虑实施 DevSecOps 模型的目标以及对组织最重要的好处。从那里，可以创建奖励方法，确保奖励行为有助于实现这些目标。</p><hr><ul><li><a href="https://snyk.io/series/devsecops/people/" target="_blank" rel="noreferrer">https://snyk.io/series/devsecops/people/</a></li></ul>',24)]))}const m=a(s,[["render",o]]);export{d as __pageData,m as default};
