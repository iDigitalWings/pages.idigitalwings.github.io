import{_ as a,a as i,af as e,o as t}from"./chunks/framework.C87LdZyP.js";const l="/assets/777253788267541.BXeGifjl.png",p="/assets/777375800334083.BLTwWt8S.png",n="/assets/777817488734125.Bmrx34Z5.png",h="/assets/777930250872958.DIK4f1ga.png",o="/assets/779331836820875.HhBK_ax0.png",r="/assets/779653174247166.DcGIsmk4.png",d="/assets/779462901314708.BR4Sirkm.png",c="/assets/779761025327125.CCXQ8Fwm.png",g="/assets/779761025327125.CCXQ8Fwm.png",k="/assets/779937353193500.Cqsk_s_P.png",m="/assets/780006460644875.DmkzkKOD.png",F="/assets/780230487453458.BwKN4RzY.png",u="/assets/780406230108791.CQL3Lx83.png",b="/assets/780513932628708.BrWfpg-q.png",L=JSON.parse('{"title":"Flowise：拖放 UI 来构建自定义的 LLM 流程","description":"","frontmatter":{"title":"Flowise：拖放 UI 来构建自定义的 LLM 流程","date":"2023-03-16T00:00:00.000Z","tags":["ai","ml"],"category":["AI"]},"headers":[],"relativePath":"posts/2023/03/2023-03-16-flowise.md","filePath":"posts/2023/03/2023-03-16-flowise.md","lastUpdated":1718175555000}'),C={name:"posts/2023/03/2023-03-16-flowise.md"};function y(v,s,_,f,w,x){return t(),i("div",null,s[0]||(s[0]=[e('<blockquote><p>LangFlow 是 LangChain 的 UI，采用反应流设计，提供一种轻松的方式来实验和原型流。 可以通过拖放组件和聊天框提供一种轻松的实验和原型流程方式。</p></blockquote><p>昨天介绍了 LangFlow，今天的工具 Flowise 相比 LangFlow 更加成熟，组织方式上感觉也更适合开发者使用（个人感觉更专业）。</p><p>老规矩，先看下我<strong>运行的效果</strong>：</p><p><img src="'+l+'" alt=""></p><p>当然少不了暗色主题：</p><p><img src="'+p+'" alt=""></p><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>Flowise 是一个由 <strong>Flowise AI</strong> 公司开源的项目，将永远免费供商业和个人使用。</p><p><img src="'+n+'" alt=""></p><p>它基于🦜️🔗 LangChain.js，是一个非常先进的图形用户界面，用于开发基于 LLM 的应用程序。</p><p>这些应用程序也称为 Gen Apps、LLM Apps、Prompt Chaining、LLM Chains 等。</p><h2 id="关于-llm-应用" tabindex="-1">关于 LLM 应用 <a class="header-anchor" href="#关于-llm-应用" aria-label="Permalink to &quot;关于 LLM 应用&quot;">​</a></h2><p>LLM 应用程序构建生态系统中出现了各种构建块。</p><p>这些包括提示工程（Promps）、代理（Agents）、 链接（Chains）、语义搜索（Semantic Search）、聊天模型（Chat Models）、 矢量存储（Vector Stores）和可以分配给代理以执行操作的各种工具。</p><p>基于这些模块出现了构建灵活的对话界面的新方法。</p><p>使用基于 LLM 的聊天流程，对话设计和构建过程的粒度更小， 异常处理、聊天（闲聊）、修复路径等的许多细节和细节都可以卸载到 LLM 的能力中。</p><p>尽管 Flowise 是免费使用的，但托管（如果本地开发测试则没无需考虑）时需要考虑成本。 加上所有第三方 API 调用，都会产生成本。</p><p>这些成本会根据用户量和这些系统的利用程度而迅速增加。</p><h2 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h2><p>安装启动 Flowise 非常简单，你可以直接 npm 运行，或者下载代码从源码运行。</p><h3 id="使用-npm-运行编译好的模块" tabindex="-1">使用 npm 运行编译好的模块 <a class="header-anchor" href="#使用-npm-运行编译好的模块" aria-label="Permalink to &quot;使用 npm 运行编译好的模块&quot;">​</a></h3><p>Flowise 是一个 使用 TypeScript 编写的前端应用，你可以使用 npm 命令直接安装使用。</p><p>下载并安装NodeJS &gt;= 18.15.0：</p><ol><li>安装 Flowise</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> flowise</span></span></code></pre></div><ol start="2"><li>启动 Flowise</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> flowise</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> start</span></span></code></pre></div><p>如果你想给程序加上认证，那么可以指定用户名和密码来启动程序：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> flowise</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --FLOWISE_USERNAME=user</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --FLOWISE_PASSWORD=1234</span></span></code></pre></div><p>然后打开 <code>http://127.0.0.1:3000</code>，即可访问程序。</p><p><img src="'+h+'" alt=""></p><h3 id="从源码运行" tabindex="-1">从源码运行 <a class="header-anchor" href="#从源码运行" aria-label="Permalink to &quot;从源码运行&quot;">​</a></h3><p>Flowise 在这个代码仓库中有 3 个不同的模块。</p><ul><li><code>server</code>: 节点后端服务 API 逻辑</li><li><code>ui</code>: 前端</li><li><code>components</code>: LangChain 的组件</li></ul><p>首先安装 Yarn：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> yarn</span></span></code></pre></div><p>克隆存储库：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/FlowiseAI/Flowise.git</span></span></code></pre></div><p>进入存储库文件夹</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Flowise</span></span></code></pre></div><p>安装所有模块的所有依赖项：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span></span></code></pre></div><p>构建所有代码（当然也可以不执行）：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> build</span></span></code></pre></div><p>启动应用程序：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> start</span></span></code></pre></div><p>您现在可以访问 <code>http://127.0.0.1:3000</code> 上的应用程序。</p><p>如果你不仅仅是运行项目，还想基于代码进行开发，可以运行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dev</span></span></code></pre></div><p>这样，你在代码中的任何更改都会在 <code>http://127.0.0.1:8080</code> 上自动重新加载应用程序。</p><h2 id="界面介绍" tabindex="-1">界面介绍 <a class="header-anchor" href="#界面介绍" aria-label="Permalink to &quot;界面介绍&quot;">​</a></h2><h3 id="流程" tabindex="-1">流程 <a class="header-anchor" href="#流程" aria-label="Permalink to &quot;流程&quot;">​</a></h3><p><strong>Chatflows</strong> 列出了你构建的所有流程。 <img src="'+o+'" alt=""></p><p>每个流程下面都列出了当前流程用到的组件：</p><p><img src="'+r+'" alt=""></p><h3 id="市场" tabindex="-1">市场 <a class="header-anchor" href="#市场" aria-label="Permalink to &quot;市场&quot;">​</a></h3><p>这里页面我翻译成<strong>中文</strong>了，市场上列出了所有的内置的流程模板，你可以快速体验，然后就此进行构建：</p><p><img src="'+d+'" alt=""></p><h3 id="编辑界面" tabindex="-1">编辑界面 <a class="header-anchor" href="#编辑界面" aria-label="Permalink to &quot;编辑界面&quot;">​</a></h3><p><img src="'+c+'" alt=""></p><p>组件列表列出了支持的所有组件，比较贴心的就是<strong>支持搜索</strong>：</p><p><img src="'+g+'" alt=""></p><p>具体的组件常用的参数都直接展示出来了，不常用的参数可以点击 <code>Additional Parameters</code> 按钮在弹窗里面编辑。</p><p><img src="'+k+'" alt=""></p><p>聊天窗口可以让你快速的进行测试：</p><p><img src="'+m+'" alt=""></p><p>大家编辑的时候记得<strong>先保存再测试</strong>，如果填了参数没有点击保存，测试参数是不生效的。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p><img src="'+F+'" alt=""></p><p>我在网上找了个新闻，然后存成文件， 作为输入。</p><p><img src="'+u+'" alt=""></p><p>然后 使用 OpenAI 作为 Embedding 和 对话进行提问，可以看到效果还不错。</p><p><img src="'+b+'" alt=""></p><h2 id="项目地址" tabindex="-1">项目地址 <a class="header-anchor" href="#项目地址" aria-label="Permalink to &quot;项目地址&quot;">​</a></h2><p>Github 地址：</p><ul><li><a href="https://github.com/FlowiseAI/Flowise" target="_blank" rel="noreferrer">https://github.com/FlowiseAI/Flowise</a></li></ul><p>官网地址：</p><ul><li><a href="https://flowiseai.com/" target="_blank" rel="noreferrer">https://flowiseai.com/</a></li></ul><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>',80)]))}const q=a(C,[["render",y]]);export{L as __pageData,q as default};
