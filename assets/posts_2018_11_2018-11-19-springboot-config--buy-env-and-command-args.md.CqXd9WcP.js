import{_ as i,a,af as t,o as e}from"./chunks/framework.C87LdZyP.js";const k=JSON.parse('{"title":"通过命令行参数和环境变量配置 SpringBoot Config（yml）","description":"","frontmatter":{"title":"通过命令行参数和环境变量配置 SpringBoot Config（yml）","date":"2018-11-19T00:00:00.000Z","tags":["spring","springboot"]},"headers":[],"relativePath":"posts/2018/11/2018-11-19-springboot-config--buy-env-and-command-args.md","filePath":"posts/2018/11/2018-11-19-springboot-config--buy-env-and-command-args.md","lastUpdated":1718173059000}'),n={name:"posts/2018/11/2018-11-19-springboot-config--buy-env-and-command-args.md"};function p(o,s,l,r,h,d){return e(),a("div",null,s[0]||(s[0]=[t('<h2 id="通过-application-property-files" tabindex="-1">通过 Application Property Files <a class="header-anchor" href="#通过-application-property-files" aria-label="Permalink to &quot;通过 Application Property Files&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>application.properties</span></span>\n<span class="line"><span>application.yml</span></span></code></pre></div><h2 id="通过vm-options" tabindex="-1">通过VM Options <a class="header-anchor" href="#通过vm-options" aria-label="Permalink to &quot;通过VM Options&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -Dserver.port=XXXX</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -jar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">path/to/my/ja</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span></code></pre></div><h2 id="通过-springboot参数-command-line-properties" tabindex="-1">通过 SpringBoot参数 <code>Command Line Properties</code> <a class="header-anchor" href="#通过-springboot参数-command-line-properties" aria-label="Permalink to &quot;通过 SpringBoot参数 `Command Line Properties`&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -jar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">path/to/my/ja</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --server.port=YYYY</span></span></code></pre></div><h2 id="通过环境变量-spring-application-json" tabindex="-1">通过环境变量 SPRING_APPLICATION_JSON <a class="header-anchor" href="#通过环境变量-spring-application-json" aria-label="Permalink to &quot;通过环境变量 SPRING_APPLICATION_JSON&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">SPRING_APPLICATION_JSON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;{&quot;acme&quot;:{&quot;name&quot;:&quot;test&quot;}}&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> java</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myapp.jar</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ACME_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;test&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> java</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myapp.jar</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -Dspring.application.json=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;{&quot;name&quot;:&quot;test&quot;}&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myapp.jar</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myapp.jar</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --spring.application.json=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;{&quot;name&quot;:&quot;test&quot;}&#39;</span></span></code></pre></div><h3 id="变量命名解释" tabindex="-1">变量命名解释 <a class="header-anchor" href="#变量命名解释" aria-label="Permalink to &quot;变量命名解释&quot;">​</a></h3><ul><li><p><code>acme.my-project.person.first-name</code> Kebab case, which is recommended for use in <code>.properties</code> and <code>.yml</code> files.</p></li><li><p><code>acme.myProject.person.firstName</code> Standard camel case syntax.</p></li><li><p><code>acme.my_project.person.first_name</code> Underscore notation, which is an alternative format for use in <code>.properties</code> and <code>.yml</code> files.</p></li><li><p><code>ACME_MYPROJECT_PERSON_FIRSTNAME</code> Upper case format, which is recommended when using system environment variables.</p></li></ul><hr><ul><li><a href="https://stackoverflow.com/questions/21083170/how-to-configure-port-for-a-spring-boot-application" target="_blank" rel="noreferrer">https://stackoverflow.com/questions/21083170/how-to-configure-port-for-a-spring-boot-application</a></li><li><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html" target="_blank" rel="noreferrer">https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html</a></li></ul>',14)]))}const g=i(n,[["render",p]]);export{k as __pageData,g as default};
