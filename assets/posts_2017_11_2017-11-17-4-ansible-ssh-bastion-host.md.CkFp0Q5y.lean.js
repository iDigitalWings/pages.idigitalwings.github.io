import{_ as i,a,af as e,o as n}from"./chunks/framework.C87LdZyP.js";const F=JSON.parse('{"title":"Ansible SSH Bastion Host","description":"","frontmatter":{"title":"Ansible SSH Bastion Host","date":"2017-11-17T00:00:00.000Z","tags":["ansible","ssh","bastion"]},"headers":[],"relativePath":"posts/2017/11/2017-11-17-4-ansible-ssh-bastion-host.md","filePath":"posts/2017/11/2017-11-17-4-ansible-ssh-bastion-host.md","lastUpdated":1718173059000}'),t={name:"posts/2017/11/2017-11-17-4-ansible-ssh-bastion-host.md"};function l(p,s,h,k,d,r){return n(),a("div",null,s[0]||(s[0]=[e(`<p>在ansible的使用过程中，存在这样的场景，ansible所在的管理节点与被管理的机器需要 通过一个跳板机才能连接，无法直接连接。网上搜了一下，要解决这个问题，并不需要在 ansible里做什么处理，而是在ssh连接层面解决这个问题。</p><p>比如，</p><p>我们有三类节点：</p><ol><li>管理节点，<code>admin.example.com</code>，是执行ansible命令的服务器</li><li>被管理的节点，<code>internal1.example.com</code>, <code>internal2.example.com</code></li><li>跳板机，<code>bastion.example.com</code></li></ol><p>管理节点不能直连 internal1 &amp; internal2，需要通过跳板机建立连接。</p><p>管理节点连接跳板机的方式如下：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> keyfile_bastion</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 12345</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> user@bastion.example.com</span></span></code></pre></div><p>从跳板机连接internal节点的方式如下：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> keyfile_internal</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 23456</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> user@internal1.example.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> keyfile_internal</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 23456</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> user@internal2.example.com</span></span></code></pre></div><p>解决方案：</p><p>修改 <code>~/.ssh/config</code>，加入如下的配置项，</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Host</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> internal1.example.com</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> internal2.example.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    User</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> user</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    Port</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 23456</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    IdentityFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">keyfile_internal</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    ProxyCommand</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -qaY</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> keyfile_bastion</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 12345</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> user@bastion.example.com</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;nc -w 14400 %h %p&#39;</span></span></code></pre></div><p>这样，就可以直接从节点 admin.example.com 执行下面的命令直接连接internal1.example.com了</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> user@internal1.example.com</span></span></code></pre></div><p>ansible中也可以将internal节点当做可以直接连接的机器来使用</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ansible</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> host</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> setup</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> internal1.example.com</span></span></code></pre></div><ul><li><a href="https://ouyang.me/blog/2015/08/31/using-ansible-with-a-bastion-host" target="_blank" rel="noreferrer">Ansible结合跳板机控制远程服务器</a></li><li><a href="http://www.cweye.net/2015/07/17/ansible-jumper.html" target="_blank" rel="noreferrer">Ansible通过跳板机管理服务器</a></li></ul>`,17)]))}const c=i(t,[["render",l]]);export{F as __pageData,c as default};
