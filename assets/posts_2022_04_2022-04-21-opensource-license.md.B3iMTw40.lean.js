import{_ as a,a as r,af as i,o}from"./chunks/framework.C87LdZyP.js";const l="/assets/img.DoAu6DNf.png",t="/assets/img-2.CHBwGmop.png",n="/assets/img_1.tqTR3qxg.png",b=JSON.parse('{"title":"开源协议","description":"","frontmatter":{"title":"开源协议","date":"2022-04-21T00:00:00.000Z","tags":["架构"],"category":["架构"]},"headers":[],"relativePath":"posts/2022/04/2022-04-21-opensource-license.md","filePath":"posts/2022/04/2022-04-21-opensource-license.md","lastUpdated":1718173059000}'),s={name:"posts/2022/04/2022-04-21-opensource-license.md"};function c(p,e,h,u,d,L){return o(),r("div",null,e[0]||(e[0]=[i('<h2 id="协议" tabindex="-1">协议 <a class="header-anchor" href="#协议" aria-label="Permalink to &quot;协议&quot;">​</a></h2><h3 id="闭源软件许可协议" tabindex="-1">闭源软件许可协议 <a class="header-anchor" href="#闭源软件许可协议" aria-label="Permalink to &quot;闭源软件许可协议&quot;">​</a></h3><p>不开源的软件，一般都有一个类似于最终用户许可协议的东西，这个协议大体上都会包含这样一些内容： <strong>禁止把软件给别人用、禁止对软件反向工程、禁止或允许将软件作为自己项目的一部分发布，以及免责条款，例如操作不当导致自己的数据丢失</strong>等等。</p><p>免费收费共享之间的区别主要是授权协议的取得，例如免费软件一般是自由下载，然后安装的时候同意协议（下一步、下一步、下一步）即行安装。</p><p>收费软件一般不提供自由下载，或者下载后，必须通过付费获得授权，且同意授权协议，才能继续使用。 共享软件提供自由下载，到一定期限后，或者需要使用额外的功能，通过付费获得扩展授权使用。</p><h3 id="开源软件许可协议" tabindex="-1">开源软件许可协议 <a class="header-anchor" href="#开源软件许可协议" aria-label="Permalink to &quot;开源软件许可协议&quot;">​</a></h3><p>问题中列举的协议主要都是开源协议。 对于不开源软件而言，虽然授权协议都大同小异，但每个公司的授权协议，甚至不同的发行地的协议都有所不同。 这是因为这些商业软件公司都拥有专业的销售和法律团队，授权协议关系到他们的核心业务，所以聘用非常专业的团队处理。</p><p>但对于开源软件而言，作者大多数是苦逼的程序员，根本没有能力聘用专业的法律顾问， 有程序员搞出了一个比较完善的授权许可协议，大家就都拿来用，把里面的软件名字改改就好了。 所以后来逐渐形成了几大开源授权协议，如GPL、Apache、BSD等。值得注意的是， 这些开源授权协议文本本身也受著作权法保护，不过他们一般又都以开放的协议发布，允许大家随意拿来当作自己软件的授权协议。</p><p>比起不开源软件，大多数开源授权协议都比较简单，开源的特点就是开放源代码， 这里的开放，并不是指随软件一并附上源代码的意思，而是源代码也给你了，你看着办吧。</p><p><strong>允不允许修改源代码，是开源软件和不开源软件的根本的区别</strong>。这里顺便谈一下还有一种灰色地带的软件， 即随软件一并附上源代码，但你只能看不能摸，这类软件一般不认为是开源软件。 譬如说Windows就对政府开放了部分源代码，或是.NET Framework之前使用的MS-RL。</p><p>开源软件的授权协议必须包含的权利是软件源代码的修改、演绎权，否则不是开源软件。 所以各大协议主要是在义务上各有区别，譬如说<strong>GPL协议要求，基于该软件开发的任何软件， 都必须以GPL协议发布，这也就是开源感染</strong>。也就是说你要用这个开源软件，就必须把你自己的软件变成开源的。</p><p>GPL这种感染太狠了，会限制使用GPL协议发布的软件所适用的范围，<strong>全部的商业软件， 和大部分的免费软件都不能使用GPL协议发布的东西</strong>。这与开源的精神开放相悖。 所以大家又提出了很多不那么严苛的协议。如A<strong>pache就不强求基于该协议软件开发的软件以相同协议发布， 仅仅要求署名</strong>。这样，以Apache发布的软件就可以作为商业软件的一部分。</p><p>##开源协议</p><p><img src="'+l+'" alt=""><img src="'+t+'" alt=""><img src="'+n+'" alt=""></p><h3 id="bsd" tabindex="-1">BSD <a class="header-anchor" href="#bsd" aria-label="Permalink to &quot;BSD&quot;">​</a></h3><p>包含： original BSD license、FreeBSD license、Original BSD license</p><p>BSD开源协议是一个给于使用者很大自由的协议。基本上使用者可以”为所欲为”， 可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。</p><p>但“为所欲为”的前提当你发布使用了BSD协议的代码，或则以BSD协议代码为基础做二次开发自己的产品时，需要满足三个条件：</p><ul><li>如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。</li><li>如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议。</li><li>不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。</li></ul><p>BSD 代码鼓励代码共享，但需要尊重代码作者的著作权。BSD由于允许使用者修改和重新发布代码， 也允许使用或在BSD代码上开发商业软件发布和销售，因此是对商业集成很友好的协议。 而很多的公司企业在选用开源产品的时候都首选BSD协议， 因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。</p><h3 id="apache-licence" tabindex="-1">Apache Licence <a class="header-anchor" href="#apache-licence" aria-label="Permalink to &quot;Apache Licence&quot;">​</a></h3><p>包含：Apache License, Version 2.0、Apache License, Version 1.1、Apache License, Version 1.0</p><p>Apache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似， 同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布（作为开源或商业软件）。需要满足的条件也和BSD类似：</p><ul><li>需要给代码的用户一份Apache Licence</li><li>如果你修改了代码，需要再被修改的文件中说明。</li><li>在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。</li><li>如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。</li></ul><p>Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售。</p><h3 id="gpl" tabindex="-1">GPL <a class="header-anchor" href="#gpl" aria-label="Permalink to &quot;GPL&quot;">​</a></h3><p>即：GNU General Public License 通用性公开许可证</p><p>我们很熟悉的Linux就是采用了GPL。GPL协议和BSD, Apache Licence等鼓励代码重用的许可很不一样。 GPL的出发点是代码的开源/免费使用和引用/修改/衍生代码的开源/免费使用，但不允许修改后和衍生的代码做为闭源的商业软件发布和销售。 这也就是为什么我们能用免费的各种linux，包括商业公司的linux和linux上各种各样的由个人，组织，以及商业软件公司开发的免费软件了。</p><p>GPL规定：只要这种修改文本在整体上或者其某个部分来源于遵循GPL的程序，该修改文本的 整体就必须按照GPL流通，不仅该修改文本的源码必须向社会公开，而且对于这种修改文本的流通不准许附加修改者自己作出的限制。因此，一项遵循GPL流通 的程序不能同非自由的软件合并。GPL所表达的这种流通规则称为copyleft，表示与copyright(版权)的概念“相左”。</p><p>GPL协议最主要的几个原则：</p><ul><li>确保软件自始至终都以开放源代码形式发布，保护开发成果不被窃取用作商业发售。任何一套软 件，只要其中使用了受 GPL 协议保护的第三方软件的源程序，并向非开发人员发布时，软件本身也就自动成为受 GPL 保护并且约束的实体。也就是说，此时它必须开放源代码。</li><li>GPL 大致就是一个左侧版权（Copyleft，或译为“反版权”、“版权属左”、“版权所无”、“版责”等）的体现。你可以去掉所有原作的版权 信息，只要你保持开源，并且随源代码、二进制版附上 GPL 的许可证就行，让后人可以很明确地得知此软件的授权信息。GPL 精髓就是，只要使软件在完整开源 的情况下，尽可能使使用者得到自由发挥的空间，使软件得到更快更好的发展。</li><li>无论软件以何种形式发布，都必须同时附上源代码。例如在 Web 上提供下载，就必须在二进制版本（如果有的话）下载的同一个页面，清楚地提供源代码下载的链接。如果以光盘形式发布，就必须同时附上源文件的光盘。</li><li>开发或维护遵循 GPL 协议开发的软件的公司或个人，可以对使用者收取一定的服务费用。但还是一句老话——必须无偿提供软件的完整源代码，不得将源代码与服务做捆绑或任何变相捆绑销售。</li></ul><p>GPL 只是规定<strong>用户在获取你的程序的时候必须可以获得源代码，但并没有规定必须免费</strong>， 因此理论上说，你仍然可以收取费用。如果你的确需要发布你的程序，但又不想开源， 规避 GPL 的方法是通过 LPC 或者 RPC 间接调用库里的接口。只要库和你的程序不运行在同一进程下，就不需要开源。</p><p>另外，你需要区分 GPL 和 LGPL。LGPL 的要求比 GPL 低， 你可以动态链接一个 LGPL 的库而不需要开源你自己的程序，而 GPL 是不行的。</p><h3 id="lgpl" tabindex="-1">LGPL <a class="header-anchor" href="#lgpl" aria-label="Permalink to &quot;LGPL&quot;">​</a></h3><p>即：GNU Lesser General Public License 宽松公共许可证</p><p>LGPL是GPL的一个为主要为类库使用设计的开源协议。和GPL要求任何使用/修改/衍生之GPL类库的的软件必须采用GPL协议不同。 LGPL允许商业软件通过类库引用(link)方式使用LGPL类库而不需要开源商业软件的代码。 这使得采用LGPL协议的开源代码可以被商业软件作为类库引用并发布和销售。</p><p>但是如果修改LGPL协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用LGPL协议。 因此LGPL协议的开源代码很适合作为第三方类库被商业软件引用， 但不适合希望以LGPL协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。</p><p>GPL/LGPL都保障原作者的知识产权，避免有人利用开源代码复制并开发类似的产品。</p><h3 id="agpl" tabindex="-1">AGPL <a class="header-anchor" href="#agpl" aria-label="Permalink to &quot;AGPL&quot;">​</a></h3><p>即：Affero General Public License</p><p>GPL（2.x ~ 3.x） 协议还有一个非常大的“漏洞”，就是软件“发布” 才必须开源。也就是说，我的软件不发布，即使使用 GPL (2.x ~ 3.x) 也可以不用开源。 随着以Google为代表的软件作为服务的互联网公司的兴起，它们的“不分发软件，为客户提供网络服务”的商业模式就不受GPL协议的约束。</p><p>AGPL则增加了对此做法的约束：</p><p><strong>如果使用AGPL许可的软件与用户通过网络进行交互，也需要提供源代码给用户，所有的修改也要给用户。</strong></p><h3 id="mit-mit" tabindex="-1">MIT（MIT） <a class="header-anchor" href="#mit-mit" aria-label="Permalink to &quot;MIT（MIT）&quot;">​</a></h3><p>MIT是和BSD一样宽范的许可协议,作者只想保留版权,而无任何其他了限制.也就是说,你必须在你的发行版里包含原许可协议的声明,无论你是以二进制发布的还是以源代码发布的.</p><ul><li>被授权人有权利使用、复制、修改、合并、出版发行、散布、再授权及贩售软体及软体的副本。</li><li>被授权人可根据程式的需要修改授权条款为适当的内容。</li><li>在软件和软件的所有副本中都必须包含版权声明和许可声明</li></ul><h3 id="zlib-libpng" tabindex="-1">Zlib/Libpng <a class="header-anchor" href="#zlib-libpng" aria-label="Permalink to &quot;Zlib/Libpng&quot;">​</a></h3><p>基于该软件的原样使用，作者不负责使用该软件照成的任何损失。</p><p>该软件修改后的版本将受到以下限制：</p><ul><li>不能歪曲原软件的著作权</li><li>修改后的软件不能歪曲为原版软件</li><li>不能删除源码中的协议许可内容</li></ul><h3 id="mpl" tabindex="-1">MPL <a class="header-anchor" href="#mpl" aria-label="Permalink to &quot;MPL&quot;">​</a></h3><p>即：The Mozilla Public License （Mozilla公共许可证）</p><p>MPL是The Mozilla Public License的简写，是1998年初Netscape的 Mozilla小组为其开源软件项目设计的软件许可证。MPL许可证出现的最重要原因就是，Netscape公司认为GPL许可证没有很好地平衡开发者对源代码的需求和他们利用源代码获得的利益。同著名的GPL许可证和BSD许可证相比，MPL在许多权利与义务的约定方面与它们相同（因为都是符合OSIA 认定的开源软件许可证）。但是，相比而言MPL还有以下几个显著的不同之处:</p><ul><li>MPL虽然要求对于经MPL许可证发布的源代码的修改也要以MPL许可证的方式再许可出来，以保证其他人可以在MPL的条款下共享源代码。但是，在MPL 许可证中对“发布”的定义是“以源代码方式发布的文件”，这就意味着MPL允许一个企业在自己已有的源代码库上加一个接口，除了接口程序的源代码以MPL许可证的形式对外许可外，源代码库中的源代码就可以不用MPL许可证的方式强制对外许可。这些，就为借鉴别人的源代码用做自己商业软件开发的行为留了一个豁口。</li><li>MPL许可证第三条第7款中允许被许可人将经过MPL许可证获得的源代码同自己其他类型的代码混合得到自己的软件程序。</li><li>对软件专利的态度：MPL许可证不像GPL许可证那样明确表示反对软件专利，但是却明确要求源代码的提供者不能提供已经受专利保护的源代码（除非他本人是专利权人，并书面向公众免费许可这些源代码），也不能在将这些源代码以开放源代码许可证形式许可后再去申请与这些源代码有关的专利。</li><li>对源代码的定义：而在MPL（1.1版本）许可证中，对源代码的定义是:“源代码指的是对作品进行修改最优先择取的形式，它包括:所有模块的所有源程序，加上有关的接口的定义，加上控制可执行作品的安装和编译的‘原本’（原文为‘Script’），或者不是与初始源代码显著不同的源代码就是被源代码贡献者选择的从公共领域可以得到的程序代码。”</li><li>MPL许可证第3条有专门的一款是关于对源代码修改进行描述的规定，就是要求所有再发布者都得有一个专门的文件就对源代码程序修改的时间和修改的方式有描述。</li></ul><h2 id="常用软件协议" tabindex="-1">常用软件协议 <a class="header-anchor" href="#常用软件协议" aria-label="Permalink to &quot;常用软件协议&quot;">​</a></h2><h3 id="jetbrains" tabindex="-1">Jetbrains <a class="header-anchor" href="#jetbrains" aria-label="Permalink to &quot;Jetbrains&quot;">​</a></h3><ul><li><a href="https://www.jetbrains.com/legal/third-party-software/?product=IIC&amp;version=2021.3.3" target="_blank" rel="noreferrer">Jetbrains Third-Party Software and Licenses</a></li><li><a href="https://www.jetbrains.com/legal/docs/upsource/license_opensource/" target="_blank" rel="noreferrer">License Agreement for Upsource</a></li><li><a href="https://www.jetbrains.com/legal/docs/toolbox/user_community/" target="_blank" rel="noreferrer">JETBRAINS COMMUNITY EDITION TERMS</a></li><li><a href="https://sales.jetbrains.com/hc/en-gb/articles/360021922640-Can-I-use-Community-Editions-of-JetBrains-IDEs-for-developing-commercial-proprietary-software-" target="_blank" rel="noreferrer">Can I use Community Editions of JetBrains IDEs for developing commercial proprietary software?</a></li></ul><h3 id="sublime" tabindex="-1">Sublime <a class="header-anchor" href="#sublime" aria-label="Permalink to &quot;Sublime&quot;">​</a></h3><ul><li>Shareware</li></ul><h3 id="vscode" tabindex="-1">VSCode <a class="header-anchor" href="#vscode" aria-label="Permalink to &quot;VSCode&quot;">​</a></h3><ul><li><a href="https://code.visualstudio.com/docs/supporting/FAQ#_licensing" target="_blank" rel="noreferrer">License</a><ul><li>The source code is available to everyone under a standard MIT license</li><li>Visual Studio Code is a distribution of the <code>Code - OSS</code> repository with Microsoft specific customizations (including source code), released under a traditional <a href="https://code.visualstudio.com/License/" target="_blank" rel="noreferrer">Microsoft product license</a>.</li></ul></li></ul><h3 id="chromium" tabindex="-1">Chromium <a class="header-anchor" href="#chromium" aria-label="Permalink to &quot;Chromium&quot;">​</a></h3><p>Licensing. Chromium is an entirely free and open-source software project. The Google-authored portion is shared under the 3-clause BSD license. Other parts are subject to a variety of licenses, including MIT, LGPL, Ms-PL, and an MPL/GPL/LGPL tri-license.</p><ul><li><a href="https://www.chromium.org/chromium-os/licensing/" target="_blank" rel="noreferrer">https://www.chromium.org/chromium-os/licensing/</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/HEAD/LICENSE" target="_blank" rel="noreferrer">https://chromium.googlesource.com/chromium/src/+/HEAD/LICENSE</a></li></ul><h3 id="jmeter" tabindex="-1">JMeter <a class="header-anchor" href="#jmeter" aria-label="Permalink to &quot;JMeter&quot;">​</a></h3><p><a href="https://www.apache.org/licenses/" target="_blank" rel="noreferrer">Apache License 2.0</a></p><h3 id="cypress" tabindex="-1">Cypress <a class="header-anchor" href="#cypress" aria-label="Permalink to &quot;Cypress&quot;">​</a></h3><ul><li><a href="https://www.cypress.io/terms-of-use" target="_blank" rel="noreferrer">Terms of Use</a></li><li><a href="https://github.com/cypress-io/cypress/blob/develop/LICENSE" target="_blank" rel="noreferrer">cypress/LICENSE</a></li><li><a href="https://docs.cypress.io/faq/questions/general-questions-faq#Is-Cypress-free-and-open-source" target="_blank" rel="noreferrer">Is Cypress free and open source?</a><blockquote><p>The Test Runner is a free, downloadable and open source (<code>MIT license</code>) application. This is always free to use. Our Dashboard Service is a web application that offers a variety of billing plans (including a free, open source plan) for when you want to record your test runs in CI.</p></blockquote></li></ul><h3 id="jenkins" tabindex="-1">Jenkins <a class="header-anchor" href="#jenkins" aria-label="Permalink to &quot;Jenkins&quot;">​</a></h3><ul><li><a href="https://www.jenkins.io/license/" target="_blank" rel="noreferrer">MIT License</a></li><li><a href="https://www.jenkins.io/project/governance/#license" target="_blank" rel="noreferrer">Project Governance Document - License</a></li></ul><h3 id="gitlab-ce" tabindex="-1">Gitlab CE <a class="header-anchor" href="#gitlab-ce" aria-label="Permalink to &quot;Gitlab CE&quot;">​</a></h3><p>GitLab Community Edition (CE) is licensed under the terms of the <strong>MIT License</strong>.</p><ul><li><a href="https://docs.gitlab.com/ee/development/licensing.html" target="_blank" rel="noreferrer">GitLab Licensing and Compatibility</a></li></ul><h3 id="docker-ce-moby" tabindex="-1">Docker CE / Moby <a class="header-anchor" href="#docker-ce-moby" aria-label="Permalink to &quot;Docker CE / Moby&quot;">​</a></h3><p>Apache License 2.0</p><ul><li><a href="https://github.com/docker/docker-ce/blob/master/components/cli/LICENSE" target="_blank" rel="noreferrer">docker-ce/components/cli/LICENSE</a></li><li><a href="https://github.com/moby/moby#licensing" target="_blank" rel="noreferrer">Licensing</a></li></ul><h3 id="docker-desktop" tabindex="-1">Docker Desktop <a class="header-anchor" href="#docker-desktop" aria-label="Permalink to &quot;Docker Desktop&quot;">​</a></h3><ul><li><a href="https://www.docker.com/pricing/faq/" target="_blank" rel="noreferrer">Updated Docker Subscription and Licensing Questions</a></li></ul><h3 id="grafana-loki-tempo" tabindex="-1">Grafana/Loki/Tempo <a class="header-anchor" href="#grafana-loki-tempo" aria-label="Permalink to &quot;Grafana/Loki/Tempo&quot;">​</a></h3><p><strong>AGPL</strong></p><p>Our core projects (Grafana, Grafana Loki, and Grafana Tempo) have moved to <strong>AGPL</strong>. Plugins, agents, and certain libraries will remain <strong>Apache-licensed.</strong>. <code>20 Apr 2021</code></p><ul><li><a href="https://grafana.com/licensing/" target="_blank" rel="noreferrer">Licensing - What’s moving to AGPL and what’s not?</a></li></ul><hr><ul><li><a href="https://zhuanlan.zhihu.com/p/350966700" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/350966700</a></li><li><a href="https://choosealicense.com/licenses/" target="_blank" rel="noreferrer">https://choosealicense.com/licenses/</a></li><li><a href="https://choosealicense.com/appendix/" target="_blank" rel="noreferrer">https://choosealicense.com/appendix/</a></li></ul>',84)]))}const f=a(s,[["render",c]]);export{b as __pageData,f as default};
