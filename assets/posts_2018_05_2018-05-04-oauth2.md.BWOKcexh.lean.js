import{_ as e,a,af as o,o as n}from"./chunks/framework.C87LdZyP.js";const p=JSON.parse('{"title":"X-Frame-Options","description":"","frontmatter":{"title":"X-Frame-Options","date":"2018-05-04T00:00:00.000Z","tags":["spring","http","spring-security"],"category":["Java"]},"headers":[],"relativePath":"posts/2018/05/2018-05-04-oauth2.md","filePath":"posts/2018/05/2018-05-04-oauth2.md","lastUpdated":1718173059000}'),i={name:"posts/2018/05/2018-05-04-oauth2.md"};function l(r,t,s,h,u,d){return n(),a("div",null,t[0]||(t[0]=[o('<p>OAuth只是一个授权框架</p><h2 id="oauth-2-0-grant-types" tabindex="-1">OAuth 2.0 Grant Types <a class="header-anchor" href="#oauth-2-0-grant-types" aria-label="Permalink to &quot;OAuth 2.0 Grant Types&quot;">​</a></h2><ul><li>Authorization Code</li><li>Implicit</li><li>Password</li><li>Client Credentials</li><li>Device Code</li><li>Refresh Token</li></ul><h2 id="token-and-token-management" tabindex="-1">Token and Token Management <a class="header-anchor" href="#token-and-token-management" aria-label="Permalink to &quot;Token and Token Management&quot;">​</a></h2><ul><li><code>OAuth 2.0 Token Introspection</code> - RFC 7662, to determine the active state and meta-information of a token</li><li><code>OAuth 2.0 Token Revocation</code> - RFC 7009, to signal that a previously obtained token is no longer needed</li><li><code>JSON Web Token</code> - RFC 7519</li></ul><h2 id="protocols-built-on-oauth-2-0" tabindex="-1">Protocols Built on OAuth 2.0 <a class="header-anchor" href="#protocols-built-on-oauth-2-0" aria-label="Permalink to &quot;Protocols Built on OAuth 2.0&quot;">​</a></h2><ul><li>OpenID Connect</li><li>UMA</li><li>IndieAuth</li></ul><hr><ul><li><a href="https://oauth.net/2/" target="_blank" rel="noreferrer">官网 https://oauth.net/2/</a></li><li><a href="https://oauth.net/code/" target="_blank" rel="noreferrer">实现 https://oauth.net/code/</a></li></ul>',9)]))}const m=e(i,[["render",l]]);export{p as __pageData,m as default};
