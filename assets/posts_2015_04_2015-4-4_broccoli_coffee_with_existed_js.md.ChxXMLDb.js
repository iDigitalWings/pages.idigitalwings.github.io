import{_ as i,a,af as n,o as e}from"./chunks/framework.C87LdZyP.js";const o=JSON.parse('{"title":"Broccoli Coffee 插件处理已经存在的同名js文件","description":"","frontmatter":{"title":"Broccoli Coffee 插件处理已经存在的同名js文件","date":"2015-04-04T00:00:00.000Z","tags":["js","broccoli","coffee"]},"headers":[],"relativePath":"posts/2015/04/2015-4-4_broccoli_coffee_with_existed_js.md","filePath":"posts/2015/04/2015-4-4_broccoli_coffee_with_existed_js.md","lastUpdated":1718193786000}'),l={name:"posts/2015/04/2015-4-4_broccoli_coffee_with_existed_js.md"};function t(p,s,h,k,r,d){return e(),a("div",null,s[0]||(s[0]=[n(`<p>今天测试<code>Broccoli</code>这个工具,前面都好好的,谁知到coffe编译的时候出了问题.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>Error: EEXIST, file already exists &#39;/broccoli/tmp/coffee_script_filter-tmp_dest_dir-StlJGvvi.tmp/a.js&#39;</span></span>
<span class="line"><span>  at Object.fs.openSync (fs.js:432:18)</span></span>
<span class="line"><span>  at Object.fs.writeFileSync (fs.js:971:15)</span></span>
<span class="line"><span>  at Object.copyPreserveSync (/broccoli/node_modules/broccoli-coffee/node_modules/broccoli-filter/node_modules/broccoli-kitchen-sink-helpers/index.js:153:8)</span></span>
<span class="line"><span>  at /broccoli/node_modules/broccoli-coffee/node_modules/broccoli-filter/index.js:44:19</span></span>
<span class="line"><span>  at /broccoli/node_modules/broccoli-coffee/node_modules/broccoli-filter/node_modules/promise-map-series/index.js:11:14</span></span>
<span class="line"><span>  at lib$rsvp$$internal$$tryCatch (/broccoli/node_modules/broccoli-coffee/node_modules/broccoli-filter/node_modules/rsvp/dist/rsvp.js:489:16)</span></span>
<span class="line"><span>  at lib$rsvp$$internal$$invokeCallback (/broccoli/node_modules/broccoli-coffee/node_modules/broccoli-filter/node_modules/rsvp/dist/rsvp.js:501:17)</span></span>
<span class="line"><span>  at lib$rsvp$$internal$$publish (/broccoli/node_modules/broccoli-coffee/node_modules/broccoli-filter/node_modules/rsvp/dist/rsvp.js:472:11)</span></span>
<span class="line"><span>  at Object.lib$rsvp$asap$$flush [as _onImmediate] (/broccoli/node_modules/broccoli-coffee/node_modules/broccoli-filter/node_modules/rsvp/dist/rsvp.js:1290:9)</span></span>
<span class="line"><span>  at processImmediate [as _immediateCallback] (timers.js:330:15)</span></span></code></pre></div><p>原因也很简单,就是我本地的coffeescript是已经有编译成js,测试过程中,把同名js文件删除,broccoli编译可以成功.</p><p>不过这肯定不是办法,虽然自动化的环境下载来的代码是没有js文件的,但是我自己没事肯定会编个译啥的吧.</p><p>先去插件的<a href="https://github.com/joliss/broccoli-coffee" target="_blank" rel="noreferrer">主页</a>,没有找到有用的信息.</p><p>干脆找到报错代码:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>broccoli/node_modules/broccoli-coffee/node_modules/broccoli-filter/node_modules/broccoli-kitchen-sink-helpers/index.js:153:8</span></span></code></pre></div><p>以及出错位置:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// This function is deprecated in favor of</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// https://github.com/broccolijs/node-copy-dereference</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">//</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// srcStats is optional; use it as an optimization to avoid double stats</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// This function refuses to overwrite files.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.copyPreserveSync </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> copyPreserveSync</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> copyPreserveSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">src</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">dest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">srcStats</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (srcStats </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) srcStats </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">statSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(src)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (srcStats.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">isFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // 下面就是出错的一行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">writeFileSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(dest, content, { flag: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;wx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">utimesSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(dest, srcStats.atime, srcStats.mtime)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Unexpected file type for &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> src)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>改成了下面,</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// This function is deprecated in favor of</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// https://github.com/broccolijs/node-copy-dereference</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">//</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// srcStats is optional; use it as an optimization to avoid double stats</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// This function refuses to overwrite files.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.copyPreserveSync </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> copyPreserveSync</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> copyPreserveSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">src</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">dest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">srcStats</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (srcStats </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) srcStats </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">statSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(src)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (srcStats.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">isFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">readFileSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(src)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // begin hack</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">existsSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(dest)){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">unlinkSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(dest)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // end hack</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">writeFileSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(dest, content, { flag: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;wx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">utimesSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(dest, srcStats.atime, srcStats.mtime)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Unexpected file type for &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> src)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>这次运行可以了.</p><p>当然这事情没有完,因为这个插件不是我写的,所以这样该肯定是不对滴.在debug编译过程的时候发现,在coffee插件运行的时候是不报错的,直到最后一步<code>mergeTrees</code>的时候才报错,猜测是异步更新文件或者使用回调函数.</p><p>既然是<code>mergeTrees</code>才报错,那么找到<a href="https://github.com/broccolijs/broccoli-merge-trees" target="_blank" rel="noreferrer">mergeTrees插件的主页</a>,看到这样一个参数:</p><ul><li><strong>overwrite</strong>: By default, broccoli-merge-trees throws an error when a file exists in multiple trees. If you pass <code>{ overwrite: true }</code>, the resulting tree will contain the version of the file as it exists in the last input tree that contains it.</li></ul><p>顿时信息若狂,马上使用:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> mergeTrees</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([appHtml, appJs, appCss],{overwrite: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">});</span></span></code></pre></div><p>重新编译,结果仍然出错,心中一万只草泥马狂奔而过,想17岁的雨季表白被拒绝一样失落.</p><p>不过想想也释然了,<code>overwrite: true</code>应是对多个<code>trees</code>之间的overwrite,而我这个问题明显不再次之列.</p><p>ps: 完全是一个tree里的重复.</p><h2 id="插件本身" tabindex="-1">插件本身 <a class="header-anchor" href="#插件本身" aria-label="Permalink to &quot;插件本身&quot;">​</a></h2><p>心想这个事儿不能这么不明不白的放着啊.只能使用<code>神追溯</code>,找到报错的<code>broccoli-coffee</code>插件代码:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">Filter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">prototype</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">write</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">readTree</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">destDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> self </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> this</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> readTree</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.inputTree).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">srcDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> paths </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> walkSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(srcDir)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> mapSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(paths, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">relativePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (relativePath.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">slice</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        mkdirp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(destDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;/&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> relativePath)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (self.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">canProcessFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(relativePath)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">          return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> self.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">processAndCacheFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(srcDir, destDir, relativePath)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">          // 就是下面这句 line no:44</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">          helpers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">copyPreserveSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            srcDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;/&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> relativePath, destDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;/&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> relativePath)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>总览了下代码,也也证明我之前的猜想,更新文件使用的<code>Promise</code>.</p><p>既然插件不提供配置参数而本身又有问题,最大限度的容忍也就是作者更新之前自己写/改一个插件本地先用着,好在broccoli的插件都是很端的(当然就 compile and write file也不能用多少代码).</p><p>事情到此告一段落.</p><p>参考:</p><ul><li><a href="https://nodejs.org/api/fs.html#fs_fs_writefilesync_filename_data_options" target="_blank" rel="noreferrer">NodeJs Api</a></li></ul><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>`,30)]))}const g=i(l,[["render",t]]);export{o as __pageData,g as default};
