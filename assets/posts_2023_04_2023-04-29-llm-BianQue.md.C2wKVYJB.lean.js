import{_ as i,a,af as n,o as h}from"./chunks/framework.C87LdZyP.js";const t="/assets/551989402616041-3008f2bd.CtCzXzB-.png",l="/assets/553476903506250-d338e86a.C4cy_0Qm.png",k="/assets/552901627883875-2eace160.BfEfBvnk.png",p="/assets/553614670256708-aab39af3.BhmRXnm3.png",C=JSON.parse('{"title":"中文医疗对话模型扁鹊(BianQue)","description":"","frontmatter":{"title":"中文医疗对话模型扁鹊(BianQue)","date":"2023-04-29T00:00:00.000Z","tags":["ai","ml"],"category":["AI"]},"headers":[],"relativePath":"posts/2023/04/2023-04-29-llm-BianQue.md","filePath":"posts/2023/04/2023-04-29-llm-BianQue.md","lastUpdated":1718193786000}'),e={name:"posts/2023/04/2023-04-29-llm-BianQue.md"};function r(d,s,g,o,F,y){return h(),a("div",null,s[0]||(s[0]=[n('<p><img src="'+t+'" alt=""></p><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>基于主动健康的主动性、预防性、精确性、个性化、共建共享、自律性六大特征， 华南理工大学未来技术学院-广东省数字孪生人重点实验室开源了中文领域生活空间主动健康大模型基座 <code>ProactiveHealthGPT</code>，包括：</p><ul><li>经过千万规模中文健康对话数据指令微调的生活空间健康大模型扁鹊（BianQue）</li><li>经过百万规模心理咨询领域中文长文本指令与多轮共情对话数据联合指令微调的心理健康大模型灵心（SoulChat）</li></ul><h2 id="数据集" tabindex="-1">数据集 <a class="header-anchor" href="#数据集" aria-label="Permalink to &quot;数据集&quot;">​</a></h2><p>我们结合当前开源的中文医疗问答数据集（<a href="https://github.com/UCSD-AI4H/Medical-Dialogue-System" target="_blank" rel="noreferrer">MedDialog-CNopen in new window</a>、 <a href="https://github.com/lemuria-wchen/imcs21" target="_blank" rel="noreferrer">IMCS-V2open in new window</a>、<a href="https://tianchi.aliyun.com/dataset/95414" target="_blank" rel="noreferrer">CHIP-MDCFNPCopen in new window</a>、 <a href="https://tianchi.aliyun.com/dataset/95414" target="_blank" rel="noreferrer">MedDGopen in new window</a>、<a href="https://github.com/zhangsheng93/cMedQA2" target="_blank" rel="noreferrer">cMedQA2open in new window</a>、 <a href="https://github.com/Toyhom/Chinese-medical-dialogue-data" target="_blank" rel="noreferrer">Chinese-medical-dialogue-dataopen in new window</a>）， 分析其中的单轮/多轮特性以及医生问询特性，结合实验室长期自建的生活空间健康对话大数据，构建了千万级别规模的扁鹊健康大数据BianQueCorpus</p><p>对话数据通过“病人：xxx\\n医生：xxx\\n病人：xxx\\n医生：”的形式统一为一种指令格式，如下图所示：</p><p><img src="'+l+`" alt=""></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">input:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;病人：六岁宝宝拉大便都是一个礼拜或者10天才一次正常吗，要去医院检查什么项目\\n医生：您好\\n病人：六岁宝宝拉大便都是一个礼拜或者10天才一次正常吗，要去医院检查什么项目\\n医生：宝宝之前大便什么样呢？多久一次呢\\n病人：一般都是一个礼拜，最近这几个月都是10多天\\n医生：大便干吗？\\n病人：每次10多天拉的很多\\n医生：&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">target:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;成形还是不成形呢？孩子吃饭怎么样呢？&quot;</span></span></code></pre></div><p>训练数据当中混合了大量target文本为医生问询的内容而非直接的建议，这将有助于提升AI模型的问询能力。</p><h2 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h2><h3 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/scutcyr/BianQue.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> BianQue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> bianque</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --file</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> proactivehealthgpt_py38.yml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> activate</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> bianque</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cpm_kernels</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> torch==1.13.1+cu116</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> torchvision==0.14.1+cu116</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> torchaudio==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.13.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --extra-index-url</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://download.pytorch.org/whl/cu116</span></span></code></pre></div><h3 id="模型" tabindex="-1">模型 <a class="header-anchor" href="#模型" aria-label="Permalink to &quot;模型&quot;">​</a></h3><p>模型大约 12个 G，如果网络不好，可以提前本地下载好：</p><p><img src="`+k+`" alt=""></p><h3 id="代码调用" tabindex="-1">代码调用 <a class="header-anchor" href="#代码调用" aria-label="Permalink to &quot;代码调用&quot;">​</a></h3><p>在Python当中调用BianQue-2.0模型：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> torch</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> transformers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AutoModel, AutoTokenizer</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># GPU设置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">device </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> torch.device(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;cuda&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> torch.cuda.is_available() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;cpu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 加载模型与tokenizer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">model_name_or_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;scutcyr/BianQue-2&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AutoModel.from_pretrained(model_name_or_path, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">trust_remote_code</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">).half()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">model.to(device)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">tokenizer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AutoTokenizer.from_pretrained(model_name_or_path, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">trust_remote_code</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 单轮对话调用模型的chat函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">user_input </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;我的宝宝发烧了，怎么办？&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">input_text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;病人：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> user_input </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">医生：&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">response, history </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> model.chat(tokenizer, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">input_text, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">history</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">max_length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2048</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">num_beams</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">do_sample</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">top_p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.75</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">temperature</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.95</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">logits_processor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 多轮对话调用模型的chat函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 注意：本项目使用&quot;\\n病人：&quot;和&quot;\\n医生：&quot;划分不同轮次的对话历史</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 注意：user_history比bot_history的长度多1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">user_history </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;你好&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;我最近失眠了&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">bot_history </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;我是利用人工智能技术，结合大数据训练得到的智能医疗问答模型扁鹊，你可以向我提问。&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 拼接对话历史</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.join([</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;病人：</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">user_history[i]</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">}\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">医生：</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">bot_history[i]</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(bot_history))])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">input_text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">病人：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> user_history[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">医生：&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">response, history </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> model.chat(tokenizer, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">input_text, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">history</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">max_length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2048</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">num_beams</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">do_sample</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">top_p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.75</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">temperature</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.95</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">logits_processor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h3 id="web-ui" tabindex="-1">Web UI <a class="header-anchor" href="#web-ui" aria-label="Permalink to &quot;Web UI&quot;">​</a></h3><p>项目提供了<code>bianque_v2_app.py</code>作为 <strong>BianQue-2.0</strong> 模型的使用示例，通过以下命令即可开启服务，然后，通过<code>http://&lt;your_ip&gt;:9005</code>访问。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">streamlit</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> bianque_v2_app.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --server.port</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 9005</span></span></code></pre></div><p>如果需要指定显卡，可以设置：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">os.environ[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&#39;CUDA_VISIBLE_DEVICES&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">]</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;1&#39;</span></span></code></pre></div><p>当然，我就属于网络忽然抽风的那种，模型运行效果先不给大家看了，直接看下官方的 Demo 吧：</p><h2 id="" tabindex="-1"><img src="`+p+'" alt=""> <a class="header-anchor" href="#" aria-label="Permalink to &quot;![](./resources/2023-04-29-llm-BianQue/553614670256708-aab39af3.png)&quot;">​</a></h2><p>参考：</p><ul><li>Github： <a href="https://github.com/PKU-YuanGroup/ChatLaw" target="_blank" rel="noreferrer">https://github.com/PKU-YuanGroup/ChatLawopen in new window</a></li><li>论文： <a href="https://arxiv.org/pdf/2306.16092.pdf" target="_blank" rel="noreferrer">https://arxiv.org/pdf/2306.16092.pdfopen in new window</a></li><li>开源版本试用：[<a href="https://chatlaw.cloud/lawchat/#" target="_blank" rel="noreferrer">https://chatlaw.cloud/lawchat/#</a></li><li>LlaMA Transformers: <a href="https://huggingface.co/docs/transformers/main/model_doc/llama" target="_blank" rel="noreferrer">https://huggingface.co/docs/transformers/main/model_doc/llamaopen in new window</a></li></ul><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>',30)]))}const D=i(e,[["render",r]]);export{C as __pageData,D as default};
