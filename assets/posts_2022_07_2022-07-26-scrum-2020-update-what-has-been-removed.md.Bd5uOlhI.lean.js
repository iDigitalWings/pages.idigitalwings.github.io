import{_ as a,a as r,af as t,o as c}from"./chunks/framework.C87LdZyP.js";const p=JSON.parse('{"title":"Scrum 指南 2020 更新 - 已删除的内容","description":"","frontmatter":{"title":"Scrum 指南 2020 更新 - 已删除的内容","date":"2022-07-26T00:00:00.000Z","tags":["scrum"],"category":["Scrum"]},"headers":[],"relativePath":"posts/2022/07/2022-07-26-scrum-2020-update-what-has-been-removed.md","filePath":"posts/2022/07/2022-07-26-scrum-2020-update-what-has-been-removed.md","lastUpdated":1718173059000}'),i={name:"posts/2022/07/2022-07-26-scrum-2020-update-what-has-been-removed.md"};function l(u,e,m,o,s,n){return c(),r("div",null,e[0]||(e[0]=[t('<h2 id="专注于框架" tabindex="-1">专注于框架 <a class="header-anchor" href="#专注于框架" aria-label="Permalink to &quot;专注于框架&quot;">​</a></h2><p>Scrum 被描述为一个框架，而不是一种方法。Scrum 指南提供了足够的处方以允许 Scrum 工作，并鼓励其“用户”变得聪明，根据需要在框架之上添加实践和其他特定于他们的东西来形成他们的流程。它提供了一种称为回顾的机制，Scrum 团队可以在其中反思哪些有效，哪些无效，以允许团队一起工作，根据需要更改流程以改进他们的工作方式。事实上，Scrum 鼓励检查和调整产品以及 Scrum 团队的工作方式。</p><p>许多 Scrum 团队会慢慢添加和删除实践，因为它们似乎有助于或阻碍他们的工作。Scrum 指南与优秀的 Scrum 团队一样，也添加了内容以增加清晰度或描述约定。但与优秀的 Scrum 团队不同，它很少删除东西。在此版本的 Scrum 指南中，Ken Schwaber 和 Jeff Sutherland 删除了不必要的内容。他们专注于将 Scrum 指南作为一个框架，并试图使其更简单、更专注。这导致一些东西被删除。以下是大部分已移除元素的列表：</p><ul><li>Sprint 评审的规定要素。</li><li>Sprint 回顾的目的中定义的详细结果。</li><li>将在回顾展的下一个 Sprint 中实施的改进。</li><li>细化通常消耗不超过团队容量的 10%。</li><li>如何监控 Product Backlog 中目标的进度。</li><li>使用组织的“完成定义”。</li><li>Daily Scrum 的三个问题。</li><li>每日 Scrum 之后的会议，进行详细讨论、重新计划等。</li></ul><h3 id="这是否意味着这些想法不再相关" tabindex="-1">这是否意味着这些想法不再相关？ <a class="header-anchor" href="#这是否意味着这些想法不再相关" aria-label="Permalink to &quot;这是否意味着这些想法不再相关？&quot;">​</a></h3><p>简而言之，没有。仅仅因为它们不再出现在 Scrum 指南中并不意味着它们仍然不能用于您的情况。例如，在 Sprint Backlog 中总是有至少一个回顾过程改进项目的想法仍然是一个非常好的想法，但是，它们不再是 Scrum 的“强制性”。通过减少规定性，Scrum 指南更实用，并允许“用户”在他们的上下文中添加对他们有用的东西，而不会强迫他们做对他们的团队或组织没有意义的事情。</p>',6)]))}const S=a(i,[["render",l]]);export{p as __pageData,S as default};
