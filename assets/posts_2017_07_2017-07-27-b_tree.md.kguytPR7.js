import{_ as e,a as i,af as l,o as r}from"./chunks/framework.C87LdZyP.js";const s="/assets/b_tree.5L7F64EI.jpg",f=JSON.parse('{"title":"B+Tree","description":"","frontmatter":{"title":"B+Tree","date":"2017-07-27T00:00:00.000Z","tags":["tree","algorithm"]},"headers":[],"relativePath":"posts/2017/07/2017-07-27-b+tree.md","filePath":"posts/2017/07/2017-07-27-b+tree.md","lastUpdated":1718193786000}'),a={name:"posts/2017/07/2017-07-27-b+tree.md"};function o(p,t,n,c,_,d){return r(),i("div",null,t[0]||(t[0]=[l('<p>B+ 树是 B- 树的变体，也是一种多路搜索 树：</p><ol><li>其定义基本与 B- 树 同，除了：</li><li>非叶子结点的子树指针与关键字个数相同；</li><li>非叶子结点的子树指针 P[i] ， 指向关键字值属于 [K[i], K[i+1]) 的子树（ B- 树是开区间）；</li><li>为所有叶子结点增加一个链指针；</li><li>所有关键字都在叶子结点出现；</li></ol><p>如：（ M=3 ）</p><p><img src="'+s+'" alt=""></p><p>B+ 的搜索与 B- 树也基本相同，区别是 B+ 树只有达到叶子结点才命中（ B- 树可 以在非叶子结点命中），其性能也等价于在关键字全集做一次二分查找；</p><p>B+ 的特性：</p><ol><li>所有关键字都出现在叶子结点的链表中（稠密索引），且链表中的关键字恰好是有序的；</li><li>不可能在非叶子结点命中；</li><li>非叶子结点相当于是叶子结点的索引（稀疏索引），叶子结点相当于是存储（关键字）数据的数据层；</li><li>更适合文件索引系统；</li></ol><hr><p>Links:</p><ul><li><a href="http://www.oschina.net/question/565065_86338" target="_blank" rel="noreferrer">http://www.oschina.net/question/565065_86338</a></li></ul><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>',12)]))}const m=e(a,[["render",o]]);export{f as __pageData,m as default};
