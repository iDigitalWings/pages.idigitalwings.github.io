import{_ as i,a,af as n,o as t}from"./chunks/framework.C87LdZyP.js";const p="/assets/173312898228083.VN2maLqC.png",h="/assets/161389292888333.DsFBsyjy.png",l="/assets/161037105384500.DAsNEu2T.png",k="/assets/180304199805750.CJvOAyWK.png",e="/assets/182369078236333.C-xtTLMq.png",d="/assets/189268466521416.B705C33m.png",r="/assets/189513626245958.DUpgePTA.png",o="/assets/189654594986166.B4IxPBaj.png",g="/assets/190251132961208.iPeyf2pi.png",y="/assets/191660023325000.YYHr3svN.png",F="/assets/192612929269916.DYEoZjIb.png",A="/assets/193344520927041.BqTSSH-r.png",c="/assets/200290335219166.BXJ8V_CG.png",D="/assets/200402888302500.B2Ybg6AO.png",u="/assets/201271745723958.C5V2xh9N.png",C="/assets/201390791749458.CQ9sFYB4.png",q="/assets/210960426685666.ClSiRukf.png",P=JSON.parse('{"title":"《国产AI崛起》：价值 100,000￥的项目，我让AI帮我做了","description":"","frontmatter":{"title":"《国产AI崛起》：价值 100,000￥的项目，我让AI帮我做了","date":"2023-12-13T00:00:00.000Z","tags":["ai","llm"],"category":["ai"]},"headers":[],"relativePath":"posts/2023/12/2023-12-13-chinese-llm-translate-assistant.md","filePath":"posts/2023/12/2023-12-13-chinese-llm-translate-assistant.md","lastUpdated":1718173059000}'),B={name:"posts/2023/12/2023-12-13-chinese-llm-translate-assistant.md"};function E(m,s,b,_,v,f){return t(),a("div",null,s[0]||(s[0]=[n('<div class="admonition abstract"><p class="admonition-title">abstract</p><p>经历了一年的发展，国产 AI 已经慢慢地走向成熟。 这个系列文章和大家探讨如何用国产AI产品来解决日常工作的具体问题。 让 LLM 不仅仅存在研究学习角度，通过案例给大家日后大模型落地提供一些参考。</p></div><h2 id="事件背景" tabindex="-1">事件背景 <a class="header-anchor" href="#事件背景" aria-label="Permalink to &quot;事件背景&quot;">​</a></h2><p>事情的起因是最近销售那边忽然拉来了个日本客户， 并想以此打开日本市场，大家都很开心的准备国际化的相关事宜，然后就有个事情卡着了。</p><p>我们的资源包没有日文的版本，公司联系之前的渠道，资源文件给过去，因为时间比较紧词条比较多，按照人家的流程核算了一下， 竟然要 100,000 块（人民币），这个比我们之前别的小语种语言翻译贵了不止一倍。</p><blockquote><p>PS: 英文翻译我们产品部门自己做的，繁体中文、韩语、泰文、阿拉伯文等等语言都是和我们合作的翻译工作室做的。</p></blockquote><p>日文翻译这个事情合计来合计去，最后落回到了研发部头上。 下面我跟大家聊聊我怎么让大模型帮我把这个活干了。</p><blockquote></blockquote><h2 id="翻译的方案" tabindex="-1">翻译的方案 <a class="header-anchor" href="#翻译的方案" aria-label="Permalink to &quot;翻译的方案&quot;">​</a></h2><h3 id="方案一-机器翻译" tabindex="-1">方案一：机器翻译 <a class="header-anchor" href="#方案一-机器翻译" aria-label="Permalink to &quot;方案一：机器翻译&quot;">​</a></h3><p>提到翻译，我们首先想到的肯定是机器翻译，比如国内的百度翻译、有道翻译等，国外的谷歌翻译、DeepL翻译等。</p><p><img src="'+p+'" alt="国内外翻译服务厂商"></p><p>但是自动的机器翻译有个问题，多义词经常翻译出错，这个在专业文档里面经常出现，经常会被翻译成统一词汇。</p><p>比如： <code>Performance</code> 这个单词，在技术文档里面一般是 <code>性能</code> 的意思， 但是在机器翻译<strong>没有上下文（比如作为标题）的时候</strong>常常被翻译成<code>演出</code>。</p><p>而我们翻译软件的UI恰恰是很多没有上下文句子的单词或者短语。所以机器翻译不是很好的一个选择。</p><p>除了多义词，专业领域的词汇经常会有一些专业的叫法，或者是某个软件独有的叫法。 这种情况也和通常的翻译不一样，设置中文都要跟人解释了大家才能明白，比如<code>托盘</code>，<code>踢单</code>。 这些也是机器翻译不能处理的。</p><blockquote><p>ps: 当前机器翻译支不支持行业接口和词汇表等等设定，我还没调研过哈，暂且当不支持吧。</p></blockquote><p>!!! explain 行业术语词汇表 对于行业术语，我们一般要人工准备一个术语表， 由专人整理列出，同时提供中英两种语言，可以相互对照，后续多语言的翻译以此为基础。 !!!</p><h3 id="方案一-人工翻译" tabindex="-1">方案一：人工翻译 <a class="header-anchor" href="#方案一-人工翻译" aria-label="Permalink to &quot;方案一：人工翻译&quot;">​</a></h3><p>专业的事情交给专业的人，所以由专业人士翻译是最靠谱的，不过，也为专业人士翻译是最好的。</p><p>我们拿着这次翻译的数据给经常合作的供应商看了之后，三万左右的词语和句子要大概 10,000 块， 没错就是 10W 块，对方也觉得 10W 块翻译这点儿东西有点儿贵，但是人家的核算方法费用算下来就这么多。</p><p>在这个经济不咋好的年份，10W 搞个软件多语言，公司也不太想花这个钱。</p><h3 id="方案三-大模型翻译" tabindex="-1">方案三：大模型翻译 <a class="header-anchor" href="#方案三-大模型翻译" aria-label="Permalink to &quot;方案三：大模型翻译&quot;">​</a></h3><p>如果是之前我们可能就硬着头皮找翻译公司去翻译了。不过在 2023 年，大语言模型横空出世的年代，我们有了第三个选择：大语言模型。</p><p>前面我们说过，中文也有很多大模型，智谱、百川、百度等等。</p><p>我们还是先问问最熟悉的智谱AI，依然使用 <strong>ChatGLM-Turbo</strong> 这个模型：</p><p><img src="'+h+'" alt="ChatGLM-Turbo"></p><p>看看他能不能胜任翻译这个工作。</p><p><img src="'+l+'" alt="测试日文能力"></p><p>好的，它是懂日文的，这个就好说。时间原因，再说我也评估不出来 LLM 日文能力的好坏，就直接用智谱AI。</p><h2 id="llm-翻译方案" tabindex="-1">LLM 翻译方案 <a class="header-anchor" href="#llm-翻译方案" aria-label="Permalink to &quot;LLM 翻译方案&quot;">​</a></h2><p>翻译的整体方案大概如下：</p><p><img src="'+k+`" alt="LLM 翻译流程"></p><h3 id="资源文件" tabindex="-1">资源文件 <a class="header-anchor" href="#资源文件" aria-label="Permalink to &quot;资源文件&quot;">​</a></h3><h4 id="数据格式" tabindex="-1">数据格式 <a class="header-anchor" href="#数据格式" aria-label="Permalink to &quot;数据格式&quot;">​</a></h4><p>资源文件我这里用 <strong>csv</strong> 格式的数据，配合 <strong>Pandas</strong> 这个 Python 库的 <strong>DataFrame</strong>，能够方便的进行数据处理。</p><p>文件里面有中文、日文、英文三列，分别是 <code>简体中文,English,日本語／にほんご</code>。</p><table tabindex="0"><thead><tr><th>简体中文</th><th>English</th><th>日本語／にほんご</th></tr></thead><tbody><tr><td>规则</td><td>rules</td><td>ルール</td></tr><tr><td>参数</td><td>parameters</td><td>パラメータ</td></tr><tr><td>质检</td><td>quarantine</td><td>品質チェック</td></tr><tr><td>任务号</td><td>mission number</td><td></td></tr></tbody></table><blockquote><p>没有翻译的地方日文这个位置为空。</p></blockquote><h4 id="pandas-读取数据" tabindex="-1">Pandas 读取数据 <a class="header-anchor" href="#pandas-读取数据" aria-label="Permalink to &quot;Pandas 读取数据&quot;">​</a></h4><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pd.read_csv(csv_file_path)</span></span></code></pre></div><h4 id="pandas-保存数据为-csv-文件" tabindex="-1">Pandas 保存数据为 CSV 文件 <a class="header-anchor" href="#pandas-保存数据为-csv-文件" aria-label="Permalink to &quot;Pandas 保存数据为 CSV 文件&quot;">​</a></h4><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">df.to_csv(file_to_save, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h4 id="streamlit-显示-pandas-数据" tabindex="-1">Streamlit 显示 Pandas 数据 <a class="header-anchor" href="#streamlit-显示-pandas-数据" aria-label="Permalink to &quot;Streamlit 显示 Pandas 数据&quot;">​</a></h4><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> streamlit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">st.dataframe(st)</span></span></code></pre></div><h3 id="分批调用" tabindex="-1">分批调用 <a class="header-anchor" href="#分批调用" aria-label="Permalink to &quot;分批调用&quot;">​</a></h3><p>文案文字数量大概是 10W 这个量级的，超出了常规的 Token 数量限制，调用 LLM 接口肯定不能一次翻译完成。 就需要把资源文件拆分成一段段的进行翻译，智谱AI的 Token 限制可能是 4096（从UI上看到的，没有找到文档说明）。</p><p>每个批次的大小可以根据实际情况进行调整，比如 80 。</p><h3 id="结果保存" tabindex="-1">结果保存 <a class="header-anchor" href="#结果保存" aria-label="Permalink to &quot;结果保存&quot;">​</a></h3><p>结果我们也就保存为 CSV 文件，直接覆盖之前的文件，保证格式的统一。</p><h2 id="使用大模型" tabindex="-1">使用大模型 <a class="header-anchor" href="#使用大模型" aria-label="Permalink to &quot;使用大模型&quot;">​</a></h2><p>接下来就是用大模型进行翻译。</p><h3 id="提示工程" tabindex="-1">提示工程 <a class="header-anchor" href="#提示工程" aria-label="Permalink to &quot;提示工程&quot;">​</a></h3><p>第一步当然是编写提示语，随着大模型越来越聪明，我们编写提示语也变得越来越简单。</p><h4 id="零样本提示" tabindex="-1">零样本提示 <a class="header-anchor" href="#零样本提示" aria-label="Permalink to &quot;零样本提示&quot;">​</a></h4><div class="admonition abstract"><p class="admonition-title">abstract</p><p>你作为供应链行业日文翻译助手， 帮我进行供应链行业的专业术语从中文到日文的翻译。 输入格式是 JSON 对象， 把 Json Key 翻译成日文，输出格式是对应翻译好的 JSON 格式。</p><pre>翻译如下字段：

订单号
订单日期
订单状态
订单金额
订单商品
订单客户
订单收货人
订单支付方式
订单发货方式
订单备注
订单优惠
订单运费
订单税费
订单关税
订单退货
订单退款
订单评价
</pre></div><p>然后我们看下返回：</p><p><img src="`+e+`" alt="零样本提示测试"></p><p>效果还真不赖。</p><h4 id="llm-的一些问题" tabindex="-1">LLM 的一些问题 <a class="header-anchor" href="#llm-的一些问题" aria-label="Permalink to &quot;LLM 的一些问题&quot;">​</a></h4><p>我接连试了几次，还真好。不过当我用程序调用的时候，偶尔会出现奇怪的错误，比如Json格式不正确：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;订单号&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;注文番号&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;订单日期&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;注文日&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;订单状态&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;注文状態&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;订单金额&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;注文金额&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;订单商品&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;注文商品&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;订单客户&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;注文顧客&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span></code></pre></div><p>注意后面这个字符，它是竟然是一个 <code>]</code>，</p><blockquote><p>但是这个问题我在其网页版本的体验中心却没有重试出来这个问题。</p></blockquote><p>无奈之下我给提示语加上一个：</p><div class="admonition abstract"><p class="admonition-title">abstract</p><p>你作为供应链行业日文翻译助手， 帮我进行供应链行业的专业术语从中文到日文的翻译。 输入格式是 JSON 对象， 把 Json Key 翻译成日文，输出格式是对应翻译好的 JSON 格式。 请认真校验并确保JSON格式的正确性。</p><p>翻译如下字段：</p><p>订单号 ...</p></div><p>过了一会儿，他又出现了一个别的问题，返回的数据大概是这样：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">&quot;订单号&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;注文番号&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">&quot;订单日期&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;注文日&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">&quot;订单状态&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;注文状態&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">&quot;订单金额&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;注文金额&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">，</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;订单商品&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;注文商品&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">，</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;订单客户&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;注文顧客&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">，</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">]</span></span></code></pre></div><p>不知道你们看出问题了没，刚开始每行末尾的逗号是英文半角 <code>,</code>的，从某一行开始，他的<strong>逗号变成中文全角逗号</strong> <code>，</code> 了， 我也不知道咋回事。反正就会这样。</p><p>!!! explain 关于一觉醒来模型变聪明了</p><p>对翻译这个事儿的输出，关于JSON 格式的问题，一晚上就变聪明了， 现在不管怎么问都是按照我期望的方式回答。直接让他返回JSON也是我需要的JSON格式， 可能是玄学吧，但我还是呼吁<strong>大家多用用国产的模型，只有用的多了他才能变得更好</strong>。</p><p>!!!</p><h4 id="少样本提示" tabindex="-1">少样本提示 <a class="header-anchor" href="#少样本提示" aria-label="Permalink to &quot;少样本提示&quot;">​</a></h4><p>当然你也可以用少样本提示，主要原因是昨天我的零样本提示他根本不返回正确的数据。</p><p>比如还是那个提示语：</p><div class="admonition abstract"><p class="admonition-title">abstract</p><p>你作为供应链行业日文翻译助手， 帮我进行供应链行业的专业术语从中文到日文的翻译。 输入格式是 JSON 对象， 把 Json Key 翻译成日文，输出格式是对应翻译好的 JSON 格式。</p><p>翻译如下字段：</p><p>订单号 订单日期 订单状态 订单金额 订单商品 订单客户 订单收货人 订单支付方式</p></div><p>他会给你这样的返回：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Chinese&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;订单号&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Japanese&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;注文番号&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Chinese&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;订单日期&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Japanese&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;注文日&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Chinese&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;订单状态&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Japanese&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;注文状態&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Chinese&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;订单金额, &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Japanese</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">注文金额</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">]</span></span></code></pre></div><p>总之就是你也不能说他错，但是就主打一个随意，每次接错又不一样。</p><p>我当时的少样本提示大概是这样的，比较简单直接在 Prompt 里面写：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">你作为供应链行业日文翻译助手，帮我进行供应链行业的专业术语从中文到日文的翻译。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">输入格式是</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 对象，把</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Json</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 翻译成日文，输出格式是对应翻译好的</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 格式。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">当输入：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  &quot;车号&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  &quot;续重&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  &quot;任务号&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">返回：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  &quot;车号&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;車号&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  &quot;续重&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;続重&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">  &quot;任务号&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;タスク番号&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">请翻译一下内容。</span></span></code></pre></div><p>也基本没啥问题，效果和之前一样。</p><h4 id="使用多轮对话" tabindex="-1">使用多轮对话 <a class="header-anchor" href="#使用多轮对话" aria-label="Permalink to &quot;使用多轮对话&quot;">​</a></h4><p>上篇文章我们提过，chatglm_turbo 接口原生就支持多轮对话，我最后用多轮对话的方式来实现少样本提示：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">prompt_template </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">     &quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;&quot;你作为供应链行业日文翻译助手，帮我进行供应链行业的专业术语从中文到日文的翻译。输入格式是 JSON 对象，把 Json Key 翻译成日文，输出格式是对应翻译好的 JSON 格式。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 请一定认真校验返回数据 JSON 格式的正确性。&quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;assistant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;好的&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;&quot;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;车号&quot;: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;续重&quot;: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;任务号&quot;: &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}&quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;assistant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;&quot;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;车号&quot;: &quot;車号&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;续重&quot;: &quot;続重&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;任务号&quot;: &quot;タスク番号&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}&quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;&quot;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;签收&quot;: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;发货&quot;: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;收货&quot;: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;包裹&quot;: &quot;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;重量&quot;: &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}&quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;assistant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;&quot;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;签收&quot;: &quot;署名を受け取る&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;发货&quot;: &quot;発送&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;收货&quot;: &quot;受け取り&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;包裹&quot;: &quot;小包&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &quot;重量&quot;: &quot;重量&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}&quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span></code></pre></div><p>Prompt 的问题我们就聊到这儿，整体来说 LLM 还是很不错的。</p><h2 id="界面" tabindex="-1">界面 <a class="header-anchor" href="#界面" aria-label="Permalink to &quot;界面&quot;">​</a></h2><p>让大模型帮我们干活，界面当然少不了，我们仍然使用 <strong>Streamlit</strong> 来做界面，又简单又快速又没关。</p><h3 id="侧边栏" tabindex="-1">侧边栏 <a class="header-anchor" href="#侧边栏" aria-label="Permalink to &quot;侧边栏&quot;">​</a></h3><p>首先还是侧边栏，我们先在顶部放个图片当做应用的标题：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> streamlit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.sidebar:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    st.image(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;assets/logo-title.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">use_column_width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    st.subheader(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">divider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;rainbow&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p><img src="`+d+`" alt="侧边栏标题"></p><p>然后给个输入框可以自定义 API Key 如果没有就用系统环境变量的。 以及一个支持多选的上传文件的按钮。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">with</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> st.sidebar:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    st.text_input(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&#39;智谱API Key&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> key=&#39;api-key&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> type=&#39;password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    uploaded_files</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> st.file_uploader</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">&quot;Choose CSV files to translate&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> accept_multiple_files=True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p>效果如下：</p><p><img src="`+r+'" alt="侧边栏文件选择"></p><p>选择文件后的效果：</p><p><img src="'+o+`" alt="侧边栏文件选择"></p><p>当选择文件后，我们给出一个「翻译」按钮，用 <code>if</code> 判断只有当上传了文件才显示：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.sidebar:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    uploaded_files </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.file_uploader(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Choose CSV files to translate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">accept_multiple_files</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uploaded_files:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        st.button(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Translate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">use_container_width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;primary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p><img src="`+g+`" alt="侧边栏和翻译按钮"></p><h3 id="显示上传文件数据" tabindex="-1">显示上传文件数据 <a class="header-anchor" href="#显示上传文件数据" aria-label="Permalink to &quot;显示上传文件数据&quot;">​</a></h3><p>既然做 UI，那么尽量<strong>让数据可视</strong>，在主区域用多Tab的方式显示一下上传文件的数据。程序如下：</p><p>先定义变量。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 上传文件的目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">upload_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;/tmp/uploads/&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">os.makedirs(upload_path, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">exist_ok</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 多Tab缓存</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">st.session_state.data_containers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {}</span></span></code></pre></div><p>然后在上传之后直接用多 Tab 数据表格把数据显示出来。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uploaded_files:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # 显示上传成功的提示</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.sidebar:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        st.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Uploaded </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> csv files!&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> %</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(uploaded_files))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # 使用聊天的UI样式呈现</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.chat_message(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;assistant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        tab_names </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [f.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uploaded_files]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        tabs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.tabs(tab_names)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> index, uploaded_file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> enumerate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(uploaded_files):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 获取文件内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            bytes_data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uploaded_file.read()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            tempfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> os.path.join(upload_path, uploaded_file.name)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 保存文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            with</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(tempfile, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;wb&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> f:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                f.write(bytes_data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pd.read_csv(tempfile)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            # 用表格显示文件内容</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tabs[index]:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                empty </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.empty()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                empty.dataframe(df, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">use_container_width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                st.session_state.data_containers[index] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> empty</span></span></code></pre></div><p>效果如下：</p><p><img src="`+y+'" alt="上传文件数据浏览"></p><h4 id="token-调用的显示" tabindex="-1">Token 调用的显示 <a class="header-anchor" href="#token-调用的显示" aria-label="Permalink to &quot;Token 调用的显示&quot;">​</a></h4><p>翻译的过程中我还想看一看 Token 的使用情况，来大致估算下费用。在侧边栏增加几个 Metric 来试试更新 Token 的使用。</p><p><img src="'+F+`" alt="Token 使用指标展示"></p><p>实现上面效果，我们先定义一个 <code>ZhipuUsage</code> 类，并创建一个对象：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> ZhipuUsage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    prompt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    completion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    total </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 创建 Usage 对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">zhipu_usage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ZhipuUsage()</span></span></code></pre></div><p>在每次接口返回的时候更新下统计信息：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 获取接口返回的用量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">usage</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> response[&#39;data&#39;][&#39;usage&#39;]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 更新用量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">zhipu_usage.prompt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> +=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> usage[&#39;prompt_tokens&#39;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">zhipu_usage.completion</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> +=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> usage[&#39;completion_tokens&#39;]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">zhipu_usage.total</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> +=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> usage[&#39;total_tokens&#39;]</span></span></code></pre></div><p>然后在上传成功的提示下面增加一个容器，并调用更新方法显示 Usage 用量：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.sidebar:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        st.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Uploaded </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> csv files!&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> %</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(uploaded_files))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        st.subheader(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Token Usage&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        metrics1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.empty()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        update_metrics()</span></span></code></pre></div><p><code>update_metrics</code> 方法如下：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> update_metrics</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    col1, col2, col3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> metrics1.columns(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    col1.metric(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Prompt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, zhipu_usage.prompt)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    col2.metric(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Completion&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, zhipu_usage.completion)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    col3.metric(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Total&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, zhipu_usage.total)</span></span></code></pre></div><p>同样的方法定义一个 翻译结果的展示类：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MetricsTranslate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    success </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    fail </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    total </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span></code></pre></div><p>展示下翻译情况：</p><p><img src="`+A+`" alt="翻译结果指标展示"></p><div class="admonition note"><p class="admonition-title">为什么显示翻译结果</p><p>显示翻译结果的 Metric 最主要的原因是<strong>大模型的不确定性</strong>，有可能你给他100个单词，他只返回给90个。 或者你给他的单词是 <code>A</code>，他给你翻译了 <code>B</code>，这些异常情况都是我在调用过程中遇到的， 我们需要对这些异常进行<strong>兼容处理</strong>，记录错误，并进行异常数据重试。</p></div><h3 id="翻译进行式" tabindex="-1">翻译进行式 <a class="header-anchor" href="#翻译进行式" aria-label="Permalink to &quot;翻译进行式&quot;">​</a></h3><p>前面所有的准备工作都做好了，后面的翻译就好说了。</p><h4 id="分批翻译" tabindex="-1">分批翻译 <a class="header-anchor" href="#分批翻译" aria-label="Permalink to &quot;分批翻译&quot;">​</a></h4><p>分批翻译的主要步骤如下：</p><ul><li>依次读取所有文件</li><li>每个文件一行一行的读取</li><li>到达一个批次的时候调用 LLM 接口</li><li>解析接口数据</li><li>记录翻译结果</li><li>记录异常数据</li><li>更新翻译进度</li><li>文件读完的时候把剩余数据翻译一下</li></ul><p>先定义一下翻译方法：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> translate_by_llm_and_save</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    prompt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> make_prompt(batch_sentences)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> invoke_prompt(prompt)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        json_response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> json.loads(response)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> json_response</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    except</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {}</span></span></code></pre></div><p>然后就是实现翻译的流程，程序不复杂，但是代码缩进的层次多了点儿。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> translate_button:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.chat_message(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;assistant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.spinner(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;正在努力翻译中，别着急，马上就好 :lollipop: ... &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> index, uploaded_file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> enumerate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(uploaded_files):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                progress_text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uploaded_file.name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                progress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.progress(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">progress_text)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.session_state.data_frames[index]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                word_idx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                batch_sentences </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> []</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">                TRANSLATE_BATCH_SIZE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> idx, row </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> df.iterrows():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    progress.progress(idx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(df.index), </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">progress_text)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    chinese </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> str</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(row[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">COL_CHINESE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]).strip()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    japanese </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> str</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(row[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">COL_JAPANESE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]).strip()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> japanese </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> None</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> or</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> japanese </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;nan&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> or</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> japanese </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        word_idx[chinese] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> idx</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                        batch_sentences.append(chinese)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                        if</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(word_idx.keys()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> TRANSLATE_BATCH_SIZE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                            translate_by_llm_and_save(df)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                            word_idx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                            batch_sentences </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                            st.session_state.data_containers[index].dataframe(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                                df,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">                                use_container_width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                            )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                if</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(word_idx.keys()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    translate_by_llm_and_save(df)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                progress.progress(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">progress_text)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            st.success(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;已经全部翻译完成！&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    st.balloons()</span></span></code></pre></div><p>我大致讲一下逻辑，首先再翻译按钮点击的时候，提示一下正在翻译</p><p><img src="`+c+`" alt="翻译状态和提示"></p><p>然后循环翻译文件，并显示翻译进度：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">progress_text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uploaded_file.name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">progress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> st.progress(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">progress_text)</span></span></code></pre></div><p>并且在翻译过程中更新进度：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">progress.progress(idx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(df.index), </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">progress_text)</span></span></code></pre></div><p><img src="`+D+`" alt="翻译进度"></p><p>每次翻译成功之后把翻译成功的数据更新回 UI。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">st.session_state.data_containers[index].dataframe(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">                                    df,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                                    use_container_width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">True</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                                )</span></span></code></pre></div><p><img src="`+u+'" alt="更新翻译成功的数据回界面"></p><p>因为翻译过程比较长，我们顺便记录一下当前正在翻译的数据，以及翻译失败的数据：</p><p><img src="'+C+'" alt="翻译过程中显示下翻译中的数据和翻译失败的数据"></p><blockquote><p>PS: 文章中的数据都是虚拟数据哦</p></blockquote><p>最后给大家看看完整的效果：</p><p><img src="'+q+'" alt="视频预览"></p><h2 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记" aria-label="Permalink to &quot;后记&quot;">​</a></h2><p>这次翻译的工程还有一些东西文章中没写：</p><ul><li><strong>中文和英文加上字典一起</strong>作为 Prompt 会得到更好的效果</li><li>翻译之后还需要<strong>机器和人工校验</strong>，也可以再把日文结果翻译成中文和英文进行二次校验</li><li>实际翻译<strong>耗时</strong>还是挺久的，每次调用可能都在半分钟以上（瞎估计的，但肯定没有视频中那么快），可能换成 <strong>SSR 调用</strong>会好，</li><li>另外大规模翻译还是比较<strong>耗 Token</strong> 的，不过好在智谱送了不少 Token。</li></ul><p>这次我没有用 OpenAI 的 API 做对比，直接用上面的方案当成生成使用的，国内的大模型现阶段可能和国外的还有一些差距， 但是鉴于大模型<strong>越用越好</strong>的特性，只要大家多多使用，我相信他们能很快满足我们的生产需求的。</p>',152)]))}const S=i(B,[["render",E]]);export{P as __pageData,S as default};
