import{_ as p,a as e,af as n,o as i}from"./chunks/framework.C87LdZyP.js";const l="/assets/3679876452364208.DbYmUYzg.png",g="/assets/3679783153770708.11_nzgzF.png",c="/assets/3651399911425333.QPRVcdGj.png",h="/assets/3651457551670666.CRVIC_R5.png",a="/assets/3651363676970166.Q5sHw7iu.png",d="/assets/3651535537876583.61TdzFCt.png",m="/assets/3651596256447416.BQNlbqmi.png",u="/assets/3651645159262916.BgZzJJL8.png",b="/assets/3651799874279958.BBBvQ0JK.png",_="/assets/3651815807389375.CZSONz-5.png",q="/assets/3651925366445333.NpkjO0pk.png",k="/assets/3651904437343541.WYzDVNb8.png",f="/assets/3651975141263041.CWSKEXSN.png",t="/assets/3652307622044166.BTH8lbzR.png",x="/assets/3655919791257250.BI6yXlpe.png",P="/assets/3656920448614583.CTNJ6zuq.png",w="/assets/3655535900764250.uXKzngNp.png",B="/assets/3657963931126166.O5m-qjK_.png",v="/assets/3658827705138083.BLFKIg7c.png",z="/assets/3659229408161500.Cg3OkcqJ.png",r="/assets/3666037564675333.lpHTRTlp.png",o="/assets/3671442443579166.CzX35YbA.png",y=JSON.parse('{"title":"《构建个人知识图谱》007：知识图谱高效知识探索的研究","description":"","frontmatter":{"title":"《构建个人知识图谱》007：知识图谱高效知识探索的研究","shortTitle":"007：高效知识探索的研究","date":"2023-07-24T00:00:00.000Z","tags":["ai","ml"],"category":["AI"]},"headers":[],"relativePath":"topics/knowledge-graph/articles/2023-07-24-knowledge-graph-007-wander.md","filePath":"topics/knowledge-graph/articles/2023-07-24-knowledge-graph-007-wander.md","lastUpdated":1724039922000}'),T={name:"topics/knowledge-graph/articles/2023-07-24-knowledge-graph-007-wander.md"};function N(C,s,I,J,K,S){return i(),e("div",null,s[0]||(s[0]=[n('<div class="admonition abstract"><p class="admonition-title">abstract</p><p>这是这个系列的第七篇，从第一篇的知识图谱概念，以及第二篇的个人知识图谱选型， 一直到我们现在手动构建了一个还算像模像样的个人知识图谱工具， 这几天天我一直在思考如何把个人知识图谱高效使用起来， 今天跟大家聊聊怎么高效地进行知识探索。</p></div><h2 id="三维-vs-二维" tabindex="-1">三维 vs 二维 <a class="header-anchor" href="#三维-vs-二维" aria-label="Permalink to &quot;三维 vs 二维&quot;">​</a></h2><p>首先从图谱 UI 展示形式说起，图谱表示一般有两种表现方式：二维平面表示和三维立体表示。</p><p><img src="'+l+'" alt="二维和三维的图表示"></p><p>三维对设备要求比较高，渲染资源较大。在不考虑性能的前提下，两者仍然各有优缺点。</p><p><img src="'+g+'" alt="二维和三维图谱的优缺点"></p><h3 id="二维图谱" tabindex="-1">二维图谱 <a class="header-anchor" href="#二维图谱" aria-label="Permalink to &quot;二维图谱&quot;">​</a></h3><p>优点：</p><ul><li>更<strong>容易理解</strong>和处理。</li><li>不易导致<strong>视觉</strong>混乱。</li></ul><p>缺点：</p><ul><li>不能更直观地表示知识图谱中的<strong>复杂关系</strong>。</li><li><strong>探索</strong>知识图谱中的<strong>知识</strong>可能不如三维表示方便。</li><li>用户体验可能不如三维表示<strong>身临其境</strong>。</li></ul><h3 id="三维表示" tabindex="-1">三维表示 <a class="header-anchor" href="#三维表示" aria-label="Permalink to &quot;三维表示&quot;">​</a></h3><p>二维知识图谱的缺点正是三维图谱的优点：</p><ul><li>可以更<strong>直观地表示</strong>知识图谱中的<strong>复杂关系</strong>，例如空间关系和时间关系。</li><li>可以<strong>更容易地探索知识</strong>图谱中的知识。</li><li>可以为用户提供更<strong>身临其境的体验</strong>。</li></ul><p>而缺点同样也是二维图谱的优点：</p><ul><li>更<strong>难理解</strong>和处理。</li><li>可能会导致<strong>视觉混乱</strong>。</li></ul><h2 id="三维视觉优化" tabindex="-1">三维视觉优化 <a class="header-anchor" href="#三维视觉优化" aria-label="Permalink to &quot;三维视觉优化&quot;">​</a></h2><p>三维图谱可以有更好的用户体验，但是在视觉上更容易混乱， 如果<strong>数据量不大，展示效果不如二维的直观</strong>。</p><p>由于我们展示图谱使用了三维的形式，我们主要谈谈怎么去优化三维图谱交互来放大优点、弥补缺点。</p><p>视觉问题当然也有一定的方法去优化。</p><h3 id="调整字体大小" tabindex="-1">调整字体大小 <a class="header-anchor" href="#调整字体大小" aria-label="Permalink to &quot;调整字体大小&quot;">​</a></h3><p>我们可以在不同的场景（根据数据多少、远景）来调整字体的大小，以便让信息更容易获取。</p><p>使用默认的字体大小，字号比较小：</p><p><img src="'+c+'" alt="小字体在场景中的展示"></p><p>需要镜头拉近才能看的清楚：</p><p><img src="'+h+'" alt="小字体拉近才能看到"></p><p>调大字体字号，可以在比较远就能看清：</p><p><img src="'+a+'" alt="大号字体的展示效果"></p><h4 id="字体深度" tabindex="-1">字体深度 <a class="header-anchor" href="#字体深度" aria-label="Permalink to &quot;字体深度&quot;">​</a></h4><p>在三维场景中字体肯定也是由三维效果的，也就是近大远小：</p><p><img src="'+d+'" alt="默认3D场景中近大远小的显示效果"></p><p>如果统一字体大小，那么就可以产生类似二维图表的效果：</p><p><img src="'+m+'" alt="三维场景中统一字体大小"></p><p>关心全局数据的时候，可纵览全局数据，但是会有文字遮挡等问题。</p><p><img src="'+u+'" alt="keyi fangbian "></p><h4 id="颜色" tabindex="-1">颜色 <a class="header-anchor" href="#颜色" aria-label="Permalink to &quot;颜色&quot;">​</a></h4><p>一般我们使用固定的字体即可，因为实体球已经有颜色了：</p><p><img src="'+b+'" alt="默认的单色字体"></p><p>也可以让字体的颜色和实体的颜色统一，实体之间有更好的区分。</p><p><img src="'+_+'" alt=""></p><h3 id="隐藏多余信息" tabindex="-1">隐藏多余信息 <a class="header-anchor" href="#隐藏多余信息" aria-label="Permalink to &quot;隐藏多余信息&quot;">​</a></h3><p>三维知识图谱一般展示更多的内容，优化还有一个重要的方向就是在不损失关键信息的情况下减少额外信息的展示。</p><p>默认的展示情况：</p><p><img src="'+q+'" alt="默认场景"></p><p>隐藏实体圆球，界面内容清晰很多：</p><p><img src="'+k+'" alt="不显示球体"></p><p>把连线调成一个像素，同时使用渐变色：</p><p><img src="'+f+'" alt="降低连线的干扰"></p><p>甚至直接隐藏连线，展示出类似云此图：</p><p><img src="'+t+'" alt="不显示连线"></p><h2 id="知识探索的交互增强" tabindex="-1">知识探索的交互增强 <a class="header-anchor" href="#知识探索的交互增强" aria-label="Permalink to &quot;知识探索的交互增强&quot;">​</a></h2><p>刚才我们提到，三维展示的一个优点就是让用户更容易探索知识。 三维展示探索知识主要有几个方面的表现。</p><h4 id="镜头移动和缩放" tabindex="-1">镜头移动和缩放 <a class="header-anchor" href="#镜头移动和缩放" aria-label="Permalink to &quot;镜头移动和缩放&quot;">​</a></h4><p>我们可以在 3D 图谱场景中很容易的拖动镜头，以及拉近拉远镜头，来实现我们对于知识的探索和查看。</p><p><img src="'+t+'" alt="镜头拖动"></p><h4 id="节点的拖动" tabindex="-1">节点的拖动 <a class="header-anchor" href="#节点的拖动" aria-label="Permalink to &quot;节点的拖动&quot;">​</a></h4><p>当然节点拖动也能给我们探索知识图谱知识提供便捷。</p><p>下面视频看到，我们对某个知识感兴趣的时候，可以直接把他拖到我们想放置的地方，快速粗略的调整布局。</p><p><img src="'+t+'" alt="视频：节点拖动"></p><h4 id="节点点击自动定位" tabindex="-1">节点点击自动定位 <a class="header-anchor" href="#节点点击自动定位" aria-label="Permalink to &quot;节点点击自动定位&quot;">​</a></h4><p>还有一个常用的技术技术点击节点自动居中，定位到镜头前面。这样你的目光就会聚焦在节点以及节点周边的内容。</p><p><img src="'+a+'" alt="视频：自动定位"></p><blockquote><p>颜色较多，我把球体颜色调暗好看清聚焦（聚焦我只是换个了黄色而已，未做过多的效果）。正常来说聚焦的节点应该有不同的特效区分让其更加明显。</p></blockquote><h2 id="漫游模式" tabindex="-1">漫游模式 <a class="header-anchor" href="#漫游模式" aria-label="Permalink to &quot;漫游模式&quot;">​</a></h2><p>用其他软件脑图软件的时候，对 <strong>The Brain</strong> 这款软件的漫游功能印象深刻。</p><p>简单来说漫游功能就是随机显示节点及其对应关系， 下面我哪一个软件功能（ServiceNow） 的图谱「漫游」一下给大家看下（为了展示每个节点的停留时长设置的比较短）：</p><p><img src="'+a+'" alt="视频：TheBrain 漫游功能"></p><div class="admonition note"><p class="admonition-title">人类关于知识最大的障碍不是学习，而是遗忘</p><p>每天我们每个人都有学习新知识（现在就连刷抖音博主也会拼命在短视频里灌输一些概念给你）， 然而当我们<strong>真正的在思考</strong>某个问题，<strong>寻找某个解决方案</strong>的时候，你会发现你能使用的 知识并不多，大部分的都被你忘到九霄云外，有些甚至别人告诉你答案发现自己都已经不记得了。</p></div><h3 id="遗忘曲线" tabindex="-1">遗忘曲线 <a class="header-anchor" href="#遗忘曲线" aria-label="Permalink to &quot;遗忘曲线&quot;">​</a></h3><p>说到遗忘，就不得不说遗忘曲线了，如下图（维基百科）艾宾浩斯遗忘曲线：</p><p><img src="'+x+'" alt="遗忘曲线"></p><p>遗忘曲线揭示了人的 记忆过程：<strong>记忆的保持</strong>在<strong>时间上是不同</strong>的，有<strong>短期记忆</strong>和<strong>长期记忆</strong>两种。 平时的记忆的过程是：</p><p>输入的信息在经过人的注意过程的<strong>学习</strong>后，便成为了人的<strong>短期的记忆</strong>，再经过进一步<strong>强化</strong>后成为<strong>长期记忆</strong>。 长期记忆的<strong>保持时间有长有短</strong>，如果<strong>不经过及时的复习</strong>，这些记住过的东西就会<strong>遗忘</strong>， 而经过了及时的<strong>复习</strong>，长期记忆就会继续<strong>保持</strong>下去。</p><p><img src="'+P+'" alt=""></p><p>经过适当的复习，我们就可以用在知识没有忘记的时候快速延长记忆时间，缓解遗忘。</p><p><img src="'+w+'" alt="遗忘曲线"></p><h3 id="知识漫游是遗忘曲线的解药" tabindex="-1">知识漫游是遗忘曲线的解药 <a class="header-anchor" href="#知识漫游是遗忘曲线的解药" aria-label="Permalink to &quot;知识漫游是遗忘曲线的解药&quot;">​</a></h3><p>知识漫游功能可让您以随机但以相互关联的顺序查看想法，以一种固定间隔时间重复的进行。</p><blockquote><p>在知识图谱上，知识漫游就是遗忘曲线的解药。</p></blockquote><p>这也就是说，通过探索个人知识图谱，您可以增加记住所记录的概念和注释的机会。</p><h3 id="知识漫游提升知识连接" tabindex="-1">知识漫游提升知识连接 <a class="header-anchor" href="#知识漫游提升知识连接" aria-label="Permalink to &quot;知识漫游提升知识连接&quot;">​</a></h3><p>然而，仅仅通过观察随机想法的出现，加强你大脑的记忆，你只能获得部分价值。 知识漫游的真正价值是<strong>给你你个沉浸的环境，让知识的闪回帮助你的大脑对知识（思想）进行迭代以及产生更多的连接</strong>， 也就是我们常说的<strong>灵感</strong>。</p><p>你可以在知识漫游的时候，通过渐进式总结、更新知识类型、将该知识的想法与其他知识思考联系起来， 进而<strong>改进大脑对知识的认知</strong>。</p><p>这个此时知识漫游更具创造力的功能，就是所谓『稳固而知新』。如果没有通过「温故」得到新的想法，那么漫游知识的旅程 将变得索然无味。</p><p><img src="'+B+'" alt=""></p><h3 id="知识漫游实现" tabindex="-1">知识漫游实现 <a class="header-anchor" href="#知识漫游实现" aria-label="Permalink to &quot;知识漫游实现&quot;">​</a></h3><p>知识漫游的目的是为了<strong>加强和激发</strong>大脑对知识（思想）的连接。</p><p>将强连接好说，漫游的时候根据连接来进行漫游就好，以传统的二维图谱为例，主要分为三种动作：</p><ul><li>节点和父节点或者父节点之间的跳转；</li><li>节点和关系节点之间的跳转；</li><li>节点和兄弟节点之间的跳转。</li></ul><p>这三个基本就能满足我们漫游的需求，The Brain 主要就是这个模式， 这种漫游模式能根据『连接』这个基础进行流动，加强并一定程度激发连接。</p><blockquote><p>这个模式下连接的激发主要是在「近亲」中。</p></blockquote><p><img src="'+v+'" alt="The Brain 的漫游"></p><h3 id="智能漫游" tabindex="-1">智能漫游 <a class="header-anchor" href="#智能漫游" aria-label="Permalink to &quot;智能漫游&quot;">​</a></h3><p>上述方式解决了漫游的时候不东一榔头西一榔头这种「瞎跑」的问题，但是对于复杂图谱，比如图谱中有些独立的簇是就无法高效漫游。</p><p><img src="'+z+'" alt="有独立簇的知识图谱"></p><p>鉴于知识图谱的三个特性：</p><ul><li>节点</li><li>连接</li><li>属性</li></ul><p>前面讲的都是通过「<strong>连接</strong>」漫游。在漫游时候可以对「<strong>节点</strong>」和「<strong>属性</strong>」漫游的支持。 优化如下：</p><ul><li>漫游的时候使用一定优先级进行节点漫游（<strong>节点名称近似</strong>）</li><li>漫游的时候使用一定优先级进行属性漫游 <ul><li>同属性优先漫游（或者相反属性优先）</li><li>某一个属性在节点周围（3-5层）查找同属性值节点</li><li>某一个属性在节点周围（1-2层）查找不同属性值节点</li></ul></li></ul><p>基于上面的策略，我们大致可以实现一个「<strong>智能漫游</strong>」的功能，同时提供一个<strong>温度</strong>的选项， 类似 LLM 大模型的温度。</p><p>当温度值越大，漫游智能探索的力度越大，这个时候更容易产生创造性的想法。</p><p>当温度值越小，漫游智能探索的力度越小，这个时候更适合温故知识，加深某一领域的记忆。</p><h3 id="漫游控制面板" tabindex="-1">漫游控制面板 <a class="header-anchor" href="#漫游控制面板" aria-label="Permalink to &quot;漫游控制面板&quot;">​</a></h3><p>国外很多公司很推崇「<strong>冥想</strong>」这个方法，来提升管理人员的思维能力，简单来说就是通过「冥想」来让人变得更有精力、更聪明。</p><p>中国道家也有很多关于冥想的修炼方法和著作，扯远了。</p><p>简单来说冥想就是通过排除外接干扰，让大脑休眠然后在自己唤醒自己工作，萌生一些不可思议的效果。</p><p>如果用知识图谱来模拟的话，大概如下：</p><p><img src="'+r+'" alt="视频：从休眠到唤醒到漫游"></p><blockquote><p>而漫游功能很适合在配合着在冥想前后使用：人为去引导冥想。</p></blockquote><p>这样如果你每天都抽出来一定时间进行知识漫游，在一个超大的图谱前其实会阶段性有不同的漫游需求。 可以把影响智能漫游的因素，抽取出来做一个控制面板，以满足不同的需求，类似我们节点的控制面板。</p><p><img src="'+r+'" alt="节点的属性控制面板"></p><h3 id="随机漫游" tabindex="-1">随机漫游 <a class="header-anchor" href="#随机漫游" aria-label="Permalink to &quot;随机漫游&quot;">​</a></h3><p>当然在图谱比较小的时候，同时图谱内容都是自己维护的，我们完全没必要考虑那么多，一个随机的漫游就够了。</p><h3 id="交互实现" tabindex="-1">交互实现 <a class="header-anchor" href="#交互实现" aria-label="Permalink to &quot;交互实现&quot;">​</a></h3><p>虽然前面分析了很多，但是漫游功能在交互的实现最后很简单，就是一个漫游播放开关，以及后一个和上一个的手动漫游按钮。</p><p><img src="'+o+'" alt="漫游操作按钮"></p><h2 id="不足" tabindex="-1">不足 <a class="header-anchor" href="#不足" aria-label="Permalink to &quot;不足&quot;">​</a></h2><p>最后我们再回顾一下图谱的效果：</p><p><img src="'+o+'" alt="视频：图谱漫游模式"></p><p>可以看到漫游的功能，但是 UI 上还有有不少优化的地方。一些基本的设计原则也没有很好的满足。</p><p>比如节点高亮的效果，偏远节点的隐藏等。</p><hr><ul><li><a href="https://medium.com/@justin.cramer/wander-thebrain-software-recall-mastery-cdced39858fc" target="_blank" rel="noreferrer">https://medium.com/@justin.cramer/wander-thebrain-software-recall-mastery-cdced39858fc</a></li></ul>',123)]))}const D=p(T,[["render",N]]);export{y as __pageData,D as default};
