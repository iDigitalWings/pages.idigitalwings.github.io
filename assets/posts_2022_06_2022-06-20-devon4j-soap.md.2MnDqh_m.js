import{_ as i,a,af as e,o as n}from"./chunks/framework.C87LdZyP.js";const g=JSON.parse('{"title":"Devon4j: SOAP","description":"","frontmatter":{"title":"Devon4j: SOAP","date":"2022-06-20T00:00:00.000Z","tags":["devon4j"],"category":["架构"]},"headers":[],"relativePath":"posts/2022/06/2022-06-20-devon4j-soap.md","filePath":"posts/2022/06/2022-06-20-devon4j-soap.md","lastUpdated":1718173059000}'),t={name:"posts/2022/06/2022-06-20-devon4j-soap.md"};function l(p,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[e(`<p><a href="https://en.wikipedia.org/wiki/SOAP" target="_blank" rel="noreferrer">SOAP</a>是相当复杂和繁重服务的通用协议。 它允许构建可互操作且明确指定的服务（请参阅 WSDL）。 SOAP 是传输中立的。 我们强烈建议使用 HTTPS 传输并忽略其他复杂标准，如 WS-Security，并使用已建立的 HTTP 标准，如 RFC2617（和 RFC5280）。</p><h2 id="jax-ws" tabindex="-1">JAX-WS <a class="header-anchor" href="#jax-ws" aria-label="Permalink to &quot;JAX-WS&quot;">​</a></h2><p>为了使用 Java 构建 Web 服务，我们使用<a href="https://jcp.org/en/jsr/detail?id%3D224" target="_blank" rel="noreferrer">JAX-WS</a>标准。有两种方法：</p><ul><li>编码优先</li><li>合同优先</li></ul><p>下面是定义代码优先服务的示例。</p><h3 id="网络服务接口" tabindex="-1">网络服务接口 <a class="header-anchor" href="#网络服务接口" aria-label="Permalink to &quot;网络服务接口&quot;">​</a></h3><p>我们定义一个常规接口来定义服务的 API 并使用 JAX-WS 注释对其进行注释：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WebService</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> TablemanagmentWebService</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WebMethod</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WebResult</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  TableEto </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getTable</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WebParam</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) String </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="web-service-实现" tabindex="-1">Web-Service 实现 <a class="header-anchor" href="#web-service-实现" aria-label="Permalink to &quot;Web-Service 实现&quot;">​</a></h3><p>这是该服务的简单实现：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Named</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WebService</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">endpointInterface</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;com.devonfw.application.mtsj.tablemanagement.service.api.ws.TablemanagmentWebService&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> TablemanagementWebServiceImpl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> TablemanagmentWebService</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  private</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Tablemanagement</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tableManagement;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  public</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TableEto </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getTable</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.tableManagement.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">findTable</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(id);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span></code></pre></div><h2 id="soap-自定义映射" tabindex="-1">SOAP 自定义映射 <a class="header-anchor" href="#soap-自定义映射" aria-label="Permalink to &quot;SOAP 自定义映射&quot;">​</a></h2><p>为了映射不遵循 Java bean 约定的自定义数据类型或其他类型， 您需要为 JAXB 编写适配器（请参阅<a href="./2022-06-19-devon4j-xml">XML</a>）。</p><h2 id="soap-测试" tabindex="-1">SOAP 测试 <a class="header-anchor" href="#soap-测试" aria-label="Permalink to &quot;SOAP 测试&quot;">​</a></h2><p>对于一般测试 SOAP 服务，请参阅<a href="https://devonfw.com/website/pages/docs/asciidoc_devonfw-guide_devon4j.wiki_devon4j.asciidoc_guides.html#devonfw-guide_devon4j.wiki_guide-testing.asciidoc" target="_blank" rel="noreferrer">测试指南</a>。</p><p>对于手动测试 SOAP 服务，我们强烈推荐<a href="http://www.soapui.org/" target="_blank" rel="noreferrer">SoapUI</a>。</p>`,16)]))}const c=i(t,[["render",l]]);export{g as __pageData,c as default};
