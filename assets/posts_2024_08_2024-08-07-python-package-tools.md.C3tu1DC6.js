import{_ as s,a as i,af as a,o as e}from"./chunks/framework.C87LdZyP.js";const p="/assets/63618646723583.D1Tcl4oD.png",l="/assets/63752746232166.Du2fl8-2.png",n="/assets/67185839653541.CwowhHFC.png",h="/assets/67306668732041.DVzYbe_5.png",d="/assets/67663043201250.Xph1NF96.png",b=JSON.parse('{"title":"Python 版本和包管理工具","description":"","frontmatter":{"title":"Python 版本和包管理工具","date":"2024-08-07 10:00:00","tags":["python"],"category":["Python"]},"headers":[],"relativePath":"posts/2024/08/2024-08-07-python-package-tools.md","filePath":"posts/2024/08/2024-08-07-python-package-tools.md","lastUpdated":1726313048000}'),r={name:"posts/2024/08/2024-08-07-python-package-tools.md"};function o(k,t,c,y,g,u){return e(),i("div",null,t[0]||(t[0]=[a(`<p>直接看功能矩阵：</p><table tabindex="0"><thead><tr><th></th><th>Py版本</th><th>虚拟环境</th><th>包管理</th><th>包构建</th><th>包发布</th></tr></thead><tbody><tr><td>pip</td><td>❌</td><td>❌</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>pyenv</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>conda</td><td>✅</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td>pipx</td><td>❌</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>poetry</td><td>❌</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>pipenv</td><td>❌</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td>virtualenv</td><td>❌</td><td>✅</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>venv</td><td>❌</td><td>✅</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td>pdm</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>hatch</td><td>❌</td><td>✅</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td>rye</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>flit</td><td>❌</td><td>❌</td><td>❌</td><td>✅</td><td>✅</td></tr></tbody></table><h2 id="pip" tabindex="-1">pip <a class="header-anchor" href="#pip" aria-label="Permalink to &quot;pip&quot;">​</a></h2><ul><li>主页： <a href="https://pypi.org/project/pip/" target="_blank" rel="noreferrer">https://pypi.org/project/pip/</a></li><li>文档： <a href="https://pip.pypa.io/en/stable/installation/" target="_blank" rel="noreferrer">https://pip.pypa.io/en/stable/installation/</a></li></ul><p>Python 自带的包管理工具。</p><p>安装：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ensurepip</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --upgrade</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># python -m pip install --upgrade pip</span></span></code></pre></div><p>使用：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">packag</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> requirements.txt</span></span></code></pre></div><h2 id="venv" tabindex="-1">venv <a class="header-anchor" href="#venv" aria-label="Permalink to &quot;venv&quot;">​</a></h2><ul><li>主页： <a href="https://docs.python.org/3/library/venv.html" target="_blank" rel="noreferrer">https://docs.python.org/3/library/venv.html</a></li></ul><p>venv是Python 3.3及以上版本内置的库，无需额外安装。 它和virtualenv的功能类似，但是无法创建与系统Python解释器版本不同的虚拟环境。</p><p>特点：</p><ul><li>无需额外安装，Python 3.3及以上版本内置</li><li>不提供所有功能，例如它不能创建与系统 Python 解释器版本不同的虚拟环境</li><li>相比<code>virtualenv</code>，<code>venv</code>更为简单和轻量</li></ul><h2 id="pipx" tabindex="-1">pipx <a class="header-anchor" href="#pipx" aria-label="Permalink to &quot;pipx&quot;">​</a></h2><ul><li>主页： <a href="https://pipx.pypa.io/" target="_blank" rel="noreferrer">https://pipx.pypa.io/</a></li><li>源码： <a href="https://github.com/pypa/pipx" target="_blank" rel="noreferrer">https://github.com/pypa/pipx</a></li></ul><p><img src="`+p+'" alt=""></p><p>和 Pip 区别：</p><ul><li>pip 是一个通用的 Python 包安装程序。它可用于安装带有入口点的库或 CLI 应用程序。</li><li>pipx 是一个专门的包安装程序。它只能用于安装具有 cli 入口点的包。</li><li>pipx 和 pip 都从 PyPI（或本地）安装包</li><li>pipx 依赖于 pip（和 venv）</li><li>pipx 取代了 pip 的部分功能；它允许您安装 cli 应用程序，但不能安装您在代码中导入的库。</li></ul><p>安装：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pipx</span></span></code></pre></div><h2 id="poetry" tabindex="-1">poetry <a class="header-anchor" href="#poetry" aria-label="Permalink to &quot;poetry&quot;">​</a></h2><ul><li>主页： <a href="https://python-poetry.org/" target="_blank" rel="noreferrer">https://python-poetry.org/</a></li><li>源码：</li></ul><p><img src="'+l+`" alt=""></p><p>可能是现在最好用的包管理工具，类似于 Npm 致力于让打包和依赖管理变得简单。</p><p>安装：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pipx</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> poetry</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># pipx install poetry==1.2.0</span></span></code></pre></div><p>更新：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pipx</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> upgrade</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> poetry</span></span></code></pre></div><p>创建一个新项目：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">poetry</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> poetry-demo</span></span></code></pre></div><div class="admonition note"><p class="admonition-title">poetry init</p><p><code>poetry init</code> 可以初始化一个现有项目。</p></div><p>创建的目录结构如下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">poetry-demo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pyproject.toml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> README.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> poetry_demo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> __init__.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> tests</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    └──</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> __init__.py</span></span></code></pre></div><p><code>pyproject.toml</code> 文件看起来大致如下：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[ </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">tool.poetry</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  name = &quot;poetry-demo&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  version = &quot;0.1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  description = &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  authors = [&quot;Sébastien Eustace &lt;sebastien@eustace.io&gt;&quot;]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  readme = &quot;README.md&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  packages = [{include = &quot;poetry_demo&quot;}]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  [ </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">tool.poetry.dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  python = &quot;^3.7&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  [ </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">build-system</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  requires = [&quot;poetry-core&quot;]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  build-backend = &quot;poetry.core.masonry.api&quot;</span></span></code></pre></div><h2 id="pipenv" tabindex="-1">pipenv <a class="header-anchor" href="#pipenv" aria-label="Permalink to &quot;pipenv&quot;">​</a></h2><p>主页： <a href="https://pipenv.pypa.io/en/latest/" target="_blank" rel="noreferrer">https://pipenv.pypa.io/en/latest/</a> 源码： <a href="https://github.com/pypa/pipenv" target="_blank" rel="noreferrer">https://github.com/pypa/pipenv</a></p><p><strong>pipenv</strong> 是一个包管理和虚拟环境管理的工具，它旨在为Python应用提供一个清晰而简单的方式来管理包和虚拟环境。</p><p>安装：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pipenv</span></span></code></pre></div><p>特点：</p><ul><li>自动创建和管理虚拟环境</li><li>生成<code>Pipfile.lock</code>来锁定项目依赖，确保依赖的确定性和安全性</li><li>支持从<code>requirements.txt</code>导入依赖</li><li>提供了清晰的依赖分组，可分为默认依赖和开发依赖</li></ul><h2 id="virtualenv" tabindex="-1">virtualenv <a class="header-anchor" href="#virtualenv" aria-label="Permalink to &quot;virtualenv&quot;">​</a></h2><ul><li>主页： <a href="https://virtualenv.pypa.io/en/latest/" target="_blank" rel="noreferrer">https://virtualenv.pypa.io/en/latest/</a></li></ul><p>Virtualenv是Python的第三方库，它可以创建独立的Python环境。 它的核心优势是能够为每个项目创建独立的库和Python解释器环境，避免了不同版本库之间的冲突。</p><p>特点：</p><ul><li>可以创建独立的Python解释器环境</li><li>可以全局安装或者局部安装</li></ul><h2 id="pyenv" tabindex="-1">pyenv <a class="header-anchor" href="#pyenv" aria-label="Permalink to &quot;pyenv&quot;">​</a></h2><ul><li>源码： <a href="https://github.com/pyenv/pyenv" target="_blank" rel="noreferrer">https://github.com/pyenv/pyenv</a></li></ul><p>pyenv 主要用来对Python 解释器进行管理，可以管理系统上的多个版本的Python 解释器。 它的主要原理就是将新的解释器路径放在PATH 环境变量的前面， 这样新的python 程序就“覆盖”了老的python 程序，达到了切换解释器的目的。</p><p>安装：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pyenv</span></span></code></pre></div><h2 id="conda" tabindex="-1">conda <a class="header-anchor" href="#conda" aria-label="Permalink to &quot;conda&quot;">​</a></h2><p>主页： <a href="https://docs.conda.io/en/latest/" target="_blank" rel="noreferrer">https://docs.conda.io/en/latest/</a></p><h2 id="pdm" tabindex="-1">PDM <a class="header-anchor" href="#pdm" aria-label="Permalink to &quot;PDM&quot;">​</a></h2><ul><li>主页： <a href="https://pdm-project.org/en/latest/" target="_blank" rel="noreferrer">https://pdm-project.org/en/latest/</a></li><li>源码： <a href="https://github.com/pdm-project/pdm" target="_blank" rel="noreferrer">https://github.com/pdm-project/pdm</a></li></ul><p><img src="`+n+'" alt=""></p><h2 id="hatch" tabindex="-1">hatch <a class="header-anchor" href="#hatch" aria-label="Permalink to &quot;hatch&quot;">​</a></h2><ul><li>主页： <a href="https://hatch.pypa.io/latest/" target="_blank" rel="noreferrer">https://hatch.pypa.io/latest/</a></li><li>源码： <a href="https://github.com/pypa/hatch" target="_blank" rel="noreferrer">https://github.com/pypa/hatch</a></li></ul><p><img src="'+h+'" alt=""></p><h2 id="rye" tabindex="-1">rye <a class="header-anchor" href="#rye" aria-label="Permalink to &quot;rye&quot;">​</a></h2><ul><li>主页： <a href="https://rye.astral.sh/" target="_blank" rel="noreferrer">https://rye.astral.sh/</a></li><li>源码： <a href="https://github.com/astral-sh/rye" target="_blank" rel="noreferrer">https://github.com/astral-sh/rye</a></li></ul><p><img src="'+d+'" alt=""></p>',64)]))}const v=s(r,[["render",o]]);export{b as __pageData,v as default};
