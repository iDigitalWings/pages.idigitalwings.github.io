import{_ as i,a,af as p,o as e}from"./chunks/framework.C87LdZyP.js";const c=JSON.parse('{"title":"-bash: fork: retry: Resource temporarily unavailable","description":"","frontmatter":{"title":"-bash: fork: retry: Resource temporarily unavailable","date":"2019-02-27T00:00:00.000Z","tags":["linux"],"category":["DevOps"]},"headers":[],"relativePath":"posts/2019/02/2019-02-27-Resource-temporarily-unavailable.md","filePath":"posts/2019/02/2019-02-27-Resource-temporarily-unavailable.md","lastUpdated":1718173059000}'),l={name:"posts/2019/02/2019-02-27-Resource-temporarily-unavailable.md"};function t(n,s,h,k,d,r){return e(),a("div",null,s[0]||(s[0]=[p(`<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">-bash:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> fork:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> retry:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Resource</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> temporarily</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> unavailable</span></span></code></pre></div><p>1、总结系统限制有：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">/proc/sys/kernel/pid_max</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #查系统支持的最大线程数，一般会很大，相当于理论值</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">/proc/sys/kernel/thread-max</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">max_user_process（ulimit</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -u）</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #系统限制某用户下最多可以运行多少进程或线程</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">/proc/sys/vm/max_map_count</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">硬件内存大小</span></span></code></pre></div><p>2、Java虚拟机本身限制：</p><ul><li>-Xms #intial java heap size</li><li>-Xmx #maximum java heap size</li><li>-Xss #the stack size for each thread</li></ul><p>3、查询当前某程序的线程或进程数</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pstree</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;{print $1}&#39;\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -l</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pstree</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3660</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -l</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#或</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># pstack pid |grep LWP |wc -l</span></span></code></pre></div><p>4、查询当前整个系统已用的线程或进程数</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pstree</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -l</span></span></code></pre></div><ol><li><p><code>cat /proc/\${pid}/status</code></p></li><li><p><code>pstree -p \${pid}</code></p></li><li><p><code>top -p \${pid}</code> 再按H 或者直接输入 <code>top -bH -d 3 -p \${pid}</code></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>top -H</p><p>手册中说：<code>-H : Threads toggle</code></p><p>加上这个选项启动top，top一行显示一个线程。否则，它一行显示一个进程。</p></div></li><li><p><code>ps xH</code></p><p>手册中说：<code>H Show threads as if they were processes</code></p><p>这样可以查看所有存在的线程。</p></li><li><p><code>ps -mp &lt;PID&gt;</code></p><p>手册中说：<code>m Show threads after processes</code></p><p>这样可以查看一个进程起的线程数。</p></li></ol>`,10)]))}const F=i(l,[["render",t]]);export{c as __pageData,F as default};
