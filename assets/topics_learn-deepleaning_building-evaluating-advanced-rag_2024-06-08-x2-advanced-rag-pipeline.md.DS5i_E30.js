import{_ as i}from"./chunks/62673841770041.VrvdfVWm.js";import{_ as a,a as n,af as t,o as e}from"./chunks/framework.C87LdZyP.js";const p="/assets/71895620016000.NEY5SCXQ.png",l="/assets/75550741455791.D-oiJJS3.png",h="/assets/80269316856125.CtpmizRC.png",k="/assets/81069527901791.CALDSeuh.png",r="/assets/82573560726541.CYWb1qOY.png",d="/assets/82650644015458.0C914kIg.png",o="/assets/82691619230458.B9UtjZd0.png",g="/assets/82752699676708.Ba_uzxlV.png",c="/assets/82984884861791.D4qDjbF_.png",A="/assets/83374972483833.C5LaxNrj.png",F=JSON.parse('{"title":"《构建和评估高级RAG》002：如何评估一个 RAG 程序","description":"","frontmatter":{"title":"《构建和评估高级RAG》002：如何评估一个 RAG 程序","date":"2024-06-08 16:00:00","tags":["LearnDL","LlamaIndex","RAG"],"category":["AI"]},"headers":[],"relativePath":"topics/learn-deepleaning/building-evaluating-advanced-rag/2024-06-08-x2-advanced-rag-pipeline.md","filePath":"topics/learn-deepleaning/building-evaluating-advanced-rag/2024-06-08-x2-advanced-rag-pipeline.md","lastUpdated":1720085681000}'),y={name:"topics/learn-deepleaning/building-evaluating-advanced-rag/2024-06-08-x2-advanced-rag-pipeline.md"};function u(D,s,m,C,b,_){return e(),n("div",null,s[0]||(s[0]=[t('<div class="admonition abstract"><p class="admonition-title">abstract</p><p>所有 AI 模型和程序在投入生产之前都需要评估其性能，RAG 程序要评估哪些方面，如何做? 今天文章带您了解。</p></div><p>本文带你了解如下知识：</p><ul><li>评估RAG程序的<strong>三要素</strong>、</li><li>RAG评估的<strong>详细流程</strong>、</li><li><strong>LLM评估的方式</strong>有哪些、</li><li><strong>反馈函数</strong>的构成和使用</li></ul><p><img src="'+p+'" alt=""></p><h2 id="rag评估要素" tabindex="-1">RAG评估要素 <a class="header-anchor" href="#rag评估要素" aria-label="Permalink to &quot;RAG评估要素&quot;">​</a></h2><p>RAG 的评估围绕 RAG 的三要素展开： <strong>输入</strong>、<strong>上下文</strong>、<strong>输出</strong>。</p><p>形成了三个主要的指标：</p><ul><li>问题相关性、</li><li>上下文相关性、</li><li>事实度（<code>植地性</code>怪怪的，我翻译成事实度，表示结果是否终于上下文和提问）。</li></ul><p><img src="'+l+'" alt=""></p><p>详细信息参考「数翼」其他文章，这里不做深入。</p><h2 id="评估流程" tabindex="-1">评估流程 <a class="header-anchor" href="#评估流程" aria-label="Permalink to &quot;评估流程&quot;">​</a></h2><p>上一篇文章，我们提到了 TruLens 的评估流程，今天详细看看。</p><p><img src="'+i+'" alt="TruLens 如何工作"></p><h2 id="_1-构建-llm-程序" tabindex="-1">1. 构建 LLM 程序 <a class="header-anchor" href="#_1-构建-llm-程序" aria-label="Permalink to &quot;1. 构建 LLM 程序&quot;">​</a></h2><p>第一步当然是构建 LLM 应用程序，也是我们要评估的主体。</p><p>应用程序可以你问答程序、AI助手等等，你也可以用你任何喜欢的 API。</p><h2 id="_2-trulens-连接-llm-程序" tabindex="-1">2. TruLens 连接 LLM 程序 <a class="header-anchor" href="#_2-trulens-连接-llm-程序" aria-label="Permalink to &quot;2. TruLens 连接 LLM 程序&quot;">​</a></h2><p>第二步就是将您的 LLM 应用程序连接到 TruLens，同时记录LLM的输入和响应。</p><p>前面已经演示过，这个步骤非常简单。</p><h2 id="_3-使用反馈函数评估和记录结果" tabindex="-1">3. 使用反馈函数评估和记录结果 <a class="header-anchor" href="#_3-使用反馈函数评估和记录结果" aria-label="Permalink to &quot;3. 使用反馈函数评估和记录结果&quot;">​</a></h2><p>第三步就是通过针对应用程序的提示和响应运行<strong>反馈函数</strong>并<strong>记录结果</strong>并<strong>评估质量</strong>。</p><h3 id="为什么需要反馈函数" tabindex="-1">为什么需要反馈函数 <a class="header-anchor" href="#为什么需要反馈函数" aria-label="Permalink to &quot;为什么需要反馈函数&quot;">​</a></h3><p>衡量 LLM 应用的<strong>性能</strong>是从开发到生产过程中的关键一步。 如果没有先在代表性测试集上衡量其<strong>准确性</strong>，就不会将传统 ML 系统投入生产。</p><p>然而与传统机器学习不同的是，基本事实是稀疏的，而且通常完全不可用。</p><p>由于没有基本事实来计算我们的 LLM 应用程序的指标，因此可以使用反馈函数来计算 LLM 应用程序的指标。</p><h3 id="什么是反馈函数" tabindex="-1">什么是反馈函数 <a class="header-anchor" href="#什么是反馈函数" aria-label="Permalink to &quot;什么是反馈函数&quot;">​</a></h3><p>反馈函数提供了一种在应用程序运行时生成评估的编程方法，可以衡量<strong>应用程序在数据上的表现</strong>，以及<strong>用户的表现</strong>。</p><h3 id="评估方式" tabindex="-1">评估方式 <a class="header-anchor" href="#评估方式" aria-label="Permalink to &quot;评估方式&quot;">​</a></h3><p>评估可以有多种方式，传统NLP、人工、大模型等等，我们这里使用 LLM。</p><p><img src="'+h+'" alt="评估的方式"></p><h3 id="反馈函数的结构" tabindex="-1">反馈函数的结构 <a class="header-anchor" href="#反馈函数的结构" aria-label="Permalink to &quot;反馈函数的结构&quot;">​</a></h3><p>下图展示了反馈函数的结构。</p><p><img src="'+k+`" alt=""></p><h4 id="反馈提供者" tabindex="-1">反馈提供者 <a class="header-anchor" href="#反馈提供者" aria-label="Permalink to &quot;反馈提供者&quot;">​</a></h4><p>反馈提供者是<strong>运行给定反馈功能的后端</strong>。每个提供程序都提供<strong>多个底层模型</strong>， 例如 GPT-4 或 Llama-2。在许多情况下（但并非所有情况下）， 反馈实现是<strong>跨提供程序共享</strong>的（例如基于 LLM 的评估）。</p><h2 id="_4-创建反馈函数" tabindex="-1">4. 创建反馈函数 <a class="header-anchor" href="#_4-创建反馈函数" aria-label="Permalink to &quot;4. 创建反馈函数&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> trulens_eval </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> OpenAI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fOpenAI</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">provider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fOpenAI()</span></span></code></pre></div><h3 id="问题相关性反馈函数" tabindex="-1">问题相关性反馈函数 <a class="header-anchor" href="#问题相关性反馈函数" aria-label="Permalink to &quot;问题相关性反馈函数&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> trulens_eval </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Feedback</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">f_qa_relevance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Feedback(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    provider.relevance_with_cot_reasons,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Answer Relevance&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">).on_input_output()</span></span></code></pre></div><h3 id="上下文相关性反馈函数" tabindex="-1">上下文相关性反馈函数 <a class="header-anchor" href="#上下文相关性反馈函数" aria-label="Permalink to &quot;上下文相关性反馈函数&quot;">​</a></h3><p>使用 <code>TruLlama</code> 获取上下文，</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> trulens_eval </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TruLlama</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">context_selection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TruLlama.select_source_nodes().node.text</span></span></code></pre></div><p>创建上下文相关性评估函数：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">f_qs_relevance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Feedback(provider.qs_relevance,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">             name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Context Relevance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .on_input()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .on(context_selection)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .aggregate(np.mean)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h3 id="事实度反馈函数" tabindex="-1">事实度反馈函数 <a class="header-anchor" href="#事实度反馈函数" aria-label="Permalink to &quot;事实度反馈函数&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> trulens_eval.feedback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Groundedness</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">grounded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Groundedness(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">groundedness_provider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">provider)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">f_groundedness </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Feedback(grounded.groundedness_measure_with_cot_reasons,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">             name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Groundedness&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .on(context_selection)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .on_output()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    .aggregate(grounded.grounded_statements_aggregator)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h2 id="_5-评估应用程序" tabindex="-1">5. 评估应用程序 <a class="header-anchor" href="#_5-评估应用程序" aria-label="Permalink to &quot;5. 评估应用程序&quot;">​</a></h2><p>使用 TruLlama 创建记录器来连接应用程序，传入前面我们创建的三个反馈函数：</p><ul><li>f_qa_relevance,</li><li>f_qs_relevance,</li><li>f_groundedness</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> trulens_eval </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TruLlama</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> trulens_eval </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> FeedbackMode</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">tru_recorder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TruLlama(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    sentence_window_engine,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">    app_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;App_1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">    feedbacks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        f_qa_relevance,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        f_qs_relevance,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        f_groundedness</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p>从文件获取和手动添加要评估的问题，</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">eval_questions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">with</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;eval_questions.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;r&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> file</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> line </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> file</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        # Remove newline character and convert to integer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> line.strip()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        eval_questions.append(item)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">eval_questions.append(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;How can I be successful in AI?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p>使用查询引擎进行提问，同时使用 TruLens 进行记录，</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> question </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> eval_questions:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tru_recorder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> recording:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        sentence_window_engine.query(question)</span></span></code></pre></div><p>获取评估结果：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">records, feedback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tru.get_records_and_feedback(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">app_ids</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">records.head()</span></span></code></pre></div><p>结果的可读性并不好，</p><p><img src="`+r+`" alt=""></p><p>使用 Pandas 显示一下，</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">pd.set_option(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;display.max_colwidth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">records[[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;input&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;output&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> feedback]</span></span></code></pre></div><p><img src="`+d+'" alt=""></p><p>查看第一条记录，</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">tru.get_leaderboard(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">app_ids</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[])</span></span></code></pre></div><p><img src="'+o+'" alt=""></p><p>或者运行 Dashboard 查看，</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">tru.run_dashboard()</span></span></code></pre></div><p>从下图可以看到，问题相关性挺高，但是其他两个指标不太好。</p><p><img src="'+g+'" alt=""></p><p>查看 11 条记录的评估数据：</p><p><img src="'+c+'" alt=""></p><p>点击任意一条记录查看详细结果，可以根据上下文、输入、输出来进行诊断。</p><p><img src="'+A+'" alt=""></p><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>',74)]))}const B=a(y,[["render",u]]);export{F as __pageData,B as default};
