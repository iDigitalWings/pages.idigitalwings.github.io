import{_ as i,a,af as e,o as t}from"./chunks/framework.C87LdZyP.js";const c=JSON.parse('{"title":"Deno Js","description":"","frontmatter":{"title":"Deno Js","date":"2022-08-28T00:00:00.000Z","tags":["js","node"],"category":["其它"]},"headers":[],"relativePath":"posts/2022/08/2022-08-28-denojs.md","filePath":"posts/2022/08/2022-08-28-denojs.md","lastUpdated":1718175555000}'),l={name:"posts/2022/08/2022-08-28-denojs.md"};function n(h,s,p,d,o,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>Deno 是一个简单、先进且安全的 JavaScript 和 TypeScript 运行时环境，其基于 V8 引擎并采用 Rust 编程语言构建。</p><ol><li>默认安全设置。除非 显式开启，否则不能访问文件、网络，也不能访问运行环境。</li><li>天生支持 TypeScript。</li><li>只有一个唯一的可执行文件。</li><li>自带实用工具，例如依赖检查器 (<code>deno info</code>) 和代码格式化工具 (<code>deno fmt</code>)。</li><li>有一套经过审核（审计）的标准模块， 确保与 Deno 兼容： <a href="https://deno.land/std" target="_blank" rel="noreferrer">deno.land/std</a></li><li>有大量的 <a href="https://github.com/denoland/deno/wiki#companies-interested-in-deno" target="_blank" rel="noreferrer">企业对使用 Deno 感兴趣</a></li></ol><p>功能亮点：</p><ul><li>尽可能的兼容 Web 规范，例如使用 ES modules、支持 <code>fetch</code> 等。</li><li>默认安全。代码不能访问文件、网络、环境变量等（除非显式开启）。</li><li>支持开箱即用的 TypeScript 的环境。</li><li>只发布一个独立的可执行文件 (<code>deno</code>)。</li><li>有着内置的工具箱，比如代码格式化工具 (<code>deno fmt</code>)，a linter (<code>deno lint</code>) 和测试工具 (<code>deno test</code>)。</li><li>有一组经过审计的 <a href="https://github.com/denoland/deno_std" target="_blank" rel="noreferrer">标准模块</a>，保证能在 Deno 上工作。</li><li>脚本代码能被打包为单独的 JavaScript 文件。</li></ul><h2 id="哲学" tabindex="-1">哲学 <a class="header-anchor" href="#哲学" aria-label="Permalink to &quot;哲学&quot;">​</a></h2><p>Deno 旨在为现代程序员提供高效、安全的脚本环境。</p><p>Deno 将始终作为单个可执行文件分发。给定一个 Deno 程序的 URL，您应该能够用<a href="https://github.com/denoland/deno/releases" target="_blank" rel="noreferrer">压缩后不超过 25 MB 的 Deno 可执行文件</a>运行它。Deno 明确地承担了运行时和包管理器的角色。它使用标准的浏览器兼容协议(URL)来加载模块。</p><p>对于过去用 Bash 或 Python 编写的工具脚本来说，Deno 是一个优秀的替代品。</p><h2 id="node-js-对比" tabindex="-1">Node.js 对比 <a class="header-anchor" href="#node-js-对比" aria-label="Permalink to &quot;Node.js 对比&quot;">​</a></h2><ul><li>Deno 不使用 <code>npm</code>。 <ul><li>Deno 使用 URL 或文件路径引用模块。</li></ul></li><li>Deno 在模块解析算法中不使用 <code>package.json</code>。</li><li>Deno 中的所有异步操作返回 promise，因此 Deno 提供与 Node 不同的 API。</li><li>Deno 需要显式指定文件、网络和环境变量的访问权限。</li><li>当遇到未捕获的错误发生时，Deno 总是会异常退出。</li><li>使用 ES 模块，不支持 <code>require()</code>。第三方模块通过 URL 导入：<div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> log </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;https://deno.land/std@$STD_VERSION/log/mod.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div></li></ul><h2 id="缓存" tabindex="-1">缓存 <a class="header-anchor" href="#缓存" aria-label="Permalink to &quot;缓存&quot;">​</a></h2><ul><li>远程代码在第一次运行时获取并缓存，直到代码通过 <code>--reload</code> 选项运行。（所以 Deno 在飞行模式也能正常工作）</li><li>从远程 URL 加载的模块或文件应当是不可变且可缓存的。</li></ul><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-label="Permalink to &quot;Install&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://deno.land/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sh</span></span></code></pre></div><p>可使用 <a href="https://github.com/justjavac/dvm" target="_blank" rel="noreferrer">dvm</a> 安装多个版本（ <strong>推荐</strong> ）：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://dvm.deno.dev</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dvm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dvm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> i</span></span></code></pre></div><p>查看版本：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dvm</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">deno</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --version</span></span></code></pre></div><h2 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h2><p>运行简单程序：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">deno</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://deno.land/std/examples/welcome.ts</span></span></code></pre></div><p>运行一个 http 服务：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { serve } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;https://deno.land/std@0.161.0/http/server.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;http://127.0.0.1:8000/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">serve</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> Response</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Hello World</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">), { port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> });</span></span></code></pre></div><hr><ul><li><a href="https://deno.land/" target="_blank" rel="noreferrer">Deno 官网</a></li><li><a href="https://www.denojs.cn/" target="_blank" rel="noreferrer">Deno 中文网</a></li></ul>`,26)]))}const g=i(l,[["render",n]]);export{c as __pageData,g as default};
