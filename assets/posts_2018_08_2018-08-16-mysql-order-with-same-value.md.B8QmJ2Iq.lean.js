import{_ as i,a,af as e,o as t}from"./chunks/framework.C87LdZyP.js";const n="/assets/mysql-orderby-created.CjOEBNR6.png",p="/assets/mysql-oderby-created1desc.RcaXeUtk.png",l="/assets/mysql-orderby-created1asc.DsJa7CJY.png",m=JSON.parse('{"title":"MySQL order by with same values","description":"","frontmatter":{"title":"MySQL order by with same values","date":"2018-08-16T00:00:00.000Z","tags":["mysql"],"category":["DevOps"]},"headers":[],"relativePath":"posts/2018/08/2018-08-16-mysql-order-with-same-value.md","filePath":"posts/2018/08/2018-08-16-mysql-order-with-same-value.md","lastUpdated":1718173059000}'),h={name:"posts/2018/08/2018-08-16-mysql-order-with-same-value.md"};function r(d,s,k,o,c,y){return t(),a("div",null,s[0]||(s[0]=[e(`<p>项目遇到一个问题，分页的时候第一页和第二页数据有重复。最后经过排查发现是 <code>order by</code> 相同的timestamp引起的。</p><p>我们的查询语句为：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 默认缓存查询语句</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> id, created </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> order_header </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> created </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DESC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> 后面的查询</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> id, created </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> order_header </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> created </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DESC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">900</span></span></code></pre></div><p><code>created</code>是创建时间的<code>TIMESTAMP</code>，由于在同一时间有很多订单进来，最后的查询结果为：</p><p><img src="`+n+'" alt=""></p><p>可以发现同一时间的数据排序是随机的，这样上面两个查询的数据就可能重复。</p><p>更新sql为：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> id, created </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> order_header </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> created </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> DESC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span></span></code></pre></div><p>可以看到数据按照插入数据库的顺序倒序排列了，</p><p><img src="'+p+'" alt=""></p><p>同理使用<code> ORDER BY 1 ASC</code>可达到如下效果：</p><p><img src="'+l+`" alt=""></p><p>关于为什么同样条件的顺序是随机的，网上有如下的说法：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>I&#39;d advise against making that assumption. In standard SQL, anything not required by an explicit ORDER BY clause is implementation dependent.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>I can&#39;t speak for MySQL, but on e.g. SQL Server, the output order for rows that are &quot;equal&quot; so far as the ORDER BY is concerned may vary every time the query is run - and could be influenced by practically anything (e.g. patch/service pack level of the server, workload, which pages are currently in the buffer pool, etc).</span></span></code></pre></div><hr><ul><li><a href="https://stackoverflow.com/questions/6662837/how-mysql-order-the-rows-with-same-values" target="_blank" rel="noreferrer">How mysql order the rows with same values</a></li></ul>`,16)]))}const C=i(h,[["render",r]]);export{m as __pageData,C as default};
