import{_ as o}from"./chunks/ArticleMetadata.BIgknxGB.js";import{_ as l,m as d,a as c,u as r,B as h,aj as t,o as e,p as g,q as m}from"./chunks/framework.Ba_Ek9Jm.js";import"./chunks/theme.CTeeA9eH.js";const F=JSON.parse('{"title":"MongoDB HA use Docker","description":"","frontmatter":{"title":"MongoDB HA use Docker","date":"2017-11-21T00:00:00.000Z","tags":["docker","mongodb","ha","cluster"]},"headers":[],"relativePath":"posts/2017/11/2017-11-21-1-docker-mongodb-ha.md","filePath":"posts/2017/11/2017-11-21-1-docker-mongodb-ha.md","lastUpdated":1718173059000}'),k={name:"posts/2017/11/2017-11-21-1-docker-mongodb-ha.md"},u=t('<p>export mongo1=192.168.95.164 export mongo2=192.168.95.170 export mongo3=192.168.95.171</p><p>docker run -d <br> -p 27017:27017 <br> --name mongo <br> --add-host &quot;mongo1:192.168.95.164&quot; <br> --add-host &quot;mongo2:192.168.95.170&quot; <br> --add-host &quot;mongo3:192.168.95.171&quot; <br> mongo:3.2.4 mongod --replSet my-mongo-set</p><h1 id="mongo1" tabindex="-1">mongo1 <a class="header-anchor" href="#mongo1" aria-label="Permalink to &quot;mongo1&quot;">​</a></h1>',3),q=t(`<p>docker exec -it mongo mongo</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>root@ubuntu:/app# docker exec -it mongo mongo</span></span>
<span class="line"><span>MongoDB shell version: 3.2.4</span></span>
<span class="line"><span>connecting to: test</span></span>
<span class="line"><span>Server has startup warnings:</span></span>
<span class="line"><span>2017-11-21T07:46:53.832+0000 I CONTROL  [initandlisten]</span></span>
<span class="line"><span>2017-11-21T07:46:53.833+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is &#39;always&#39;.</span></span>
<span class="line"><span>2017-11-21T07:46:53.833+0000 I CONTROL  [initandlisten] **        We suggest setting it to &#39;never&#39;</span></span>
<span class="line"><span>2017-11-21T07:46:53.833+0000 I CONTROL  [initandlisten]</span></span>
<span class="line"><span>2017-11-21T07:46:53.833+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is &#39;always&#39;.</span></span>
<span class="line"><span>2017-11-21T07:46:53.834+0000 I CONTROL  [initandlisten] **        We suggest setting it to &#39;never&#39;</span></span>
<span class="line"><span>2017-11-21T07:46:53.834+0000 I CONTROL  [initandlisten]</span></span>
<span class="line"><span>&gt; db = (new Mongo(&#39;localhost:27017&#39;)).getDB(&#39;test&#39;)</span></span>
<span class="line"><span>test</span></span>
<span class="line"><span>&gt; rs.initiate({</span></span>
<span class="line"><span>...   &quot;_id&quot; : &quot;my-mongo-set&quot;,</span></span>
<span class="line"><span>...   &quot;members&quot; : [</span></span>
<span class="line"><span>...         {&quot;_id&quot; : 0, &quot;host&quot; : &quot;mongo1:27017&quot;},</span></span>
<span class="line"><span>...         {&quot;_id&quot; : 1, &quot;host&quot; : &quot;mongo2:27017&quot;},</span></span>
<span class="line"><span>...         {&quot;_id&quot; : 2, &quot;host&quot; : &quot;mongo3:27017&quot;}</span></span>
<span class="line"><span>...     ]})</span></span>
<span class="line"><span>{ &quot;ok&quot; : 1 }</span></span></code></pre></div><p>如果出现错误：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    &quot;ok&quot; : 0,</span></span>
<span class="line"><span>    &quot;errmsg&quot; : &quot;No host described in new configuration 1 for replica set my-mongo-set maps to this node&quot;,</span></span>
<span class="line"><span>    &quot;code&quot; : 93</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>表示host地址不存在，<code>ping</code>以下测试看看。</p><p>参数：</p><ul><li><code>&quot;_id&quot; : &quot;my-mongo-set&quot;,</code>的值要和启动参数的<code>--replSet</code>一样，</li><li><code>members</code>配置项列出所有参与replica set的机器</li></ul><p>此时我们发现 shell prompt变成</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>my-mongo-set:OTHER&gt;</span></span></code></pre></div><p>表名我们现在位于 replset 中的 OTHER。</p><p>执行插入和查询，注意提示的变化：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>my-mongo-set:OTHER&gt; db.mycollection.insert({name : &#39;sample&#39;})</span></span>
<span class="line"><span>WriteResult({ &quot;nInserted&quot; : 1 })</span></span>
<span class="line"><span>my-mongo-set:PRIMARY&gt; db.mycollection.find()</span></span>
<span class="line"><span>{ &quot;_id&quot; : ObjectId(&quot;5a13e02737765db5bc7e37d8&quot;), &quot;name&quot; : &quot;sample&quot; }</span></span></code></pre></div><p>我们连接 mongo2 的数据库：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>my-mongo-set:PRIMARY&gt; db2 = (new Mongo(&#39;mongo2:27017&#39;)).getDB(&#39;test&#39;)</span></span>
<span class="line"><span>test</span></span>
<span class="line"><span>my-mongo-set:PRIMARY&gt; db2.setSlaveOk()</span></span>
<span class="line"><span>my-mongo-set:PRIMARY&gt; db2.mycollection.find()</span></span>
<span class="line"><span>{ &quot;_id&quot; : ObjectId(&quot;5a13e02737765db5bc7e37d8&quot;), &quot;name&quot; : &quot;sample&quot; }</span></span></code></pre></div><p><code>setSlaveOk()</code> 命令告诉控制台我们不希望在 primary 数据库里面查询。</p><p>连接 mongo3，看到如果不设置<code>setSlaveOk</code>则报错：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>my-mongo-set:PRIMARY&gt;</span></span>
<span class="line"><span>test</span></span>
<span class="line"><span>my-mongo-set:PRIMARY&gt; db3.mycollection.find()</span></span>
<span class="line"><span>Error: error: { &quot;ok&quot; : 0, &quot;errmsg&quot; : &quot;not master and slaveOk=false&quot;, &quot;code&quot; : 13435 }</span></span>
<span class="line"><span>my-mongo-set:PRIMARY&gt; db3.setSlaveOk()</span></span>
<span class="line"><span>my-mongo-set:PRIMARY&gt; db3.mycollection.find()</span></span>
<span class="line"><span>{ &quot;_id&quot; : ObjectId(&quot;5a13e02737765db5bc7e37d8&quot;), &quot;name&quot; : &quot;sample&quot; }</span></span>
<span class="line"><span>my-mongo-set:PRIMARY&gt;</span></span></code></pre></div><h2 id="生产环境需要注意的问题" tabindex="-1">生产环境需要注意的问题 <a class="header-anchor" href="#生产环境需要注意的问题" aria-label="Permalink to &quot;生产环境需要注意的问题&quot;">​</a></h2><ul><li>创建用户密码</li><li>使用 volume 存储数据</li></ul><h2 id="docker-compose" tabindex="-1">docker-compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;docker-compose&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  mongo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">mongo:3.2.4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">mongo</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">mongod --replSet my-mongo-set</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;27017:27017/tcp&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/etc/timezone:/etc/timezone</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/root/app/docker/container_data/mongo:/data/db</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    extra_hosts</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;mongo1:192.168.95.164&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;mongo2:192.168.95.170&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">     - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;mongo3:192.168.95.171&quot;</span></span></code></pre></div><ul><li><a href="https://docs.mongodb.com/manual/replication/" target="_blank" rel="noreferrer">Docs / Replication</a></li><li><a href="http://www.sohamkamani.com/blog/2016/06/30/docker-mongo-replica-set/" target="_blank" rel="noreferrer">Creating a MongoDB replica set using Docker </a></li><li><a href="https://medium.com/@gargar454/deploy-a-mongodb-cluster-in-steps-9-using-docker-49205e231319" target="_blank" rel="noreferrer">Deploy a MongoDB Cluster in 9 steps Using Docker</a></li></ul>`,22);function y(s,b,D,A,_,C){const i=o,p=d("ClientOnly");return e(),c("div",null,[u,r(p,null,{default:h(()=>{var a,n;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=s.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(e(),g(i,{key:0,article:s.$frontmatter},null,8,["article"])):m("",!0)]}),_:1}),q])}const f=l(k,[["render",y]]);export{F as __pageData,f as default};
