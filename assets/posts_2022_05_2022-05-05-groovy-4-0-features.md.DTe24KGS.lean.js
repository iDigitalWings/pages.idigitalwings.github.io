import{_ as i,a,af as n,o as h}from"./chunks/framework.C87LdZyP.js";const y=JSON.parse('{"title":"Groovy 4.0 新特性","description":"","frontmatter":{"title":"Groovy 4.0 新特性","date":"2022-05-05T00:00:00.000Z","tags":["java","groovy"],"category":["java"]},"headers":[],"relativePath":"posts/2022/05/2022-05-05-groovy-4-0-features.md","filePath":"posts/2022/05/2022-05-05-groovy-4-0-features.md","lastUpdated":1718173059000}'),k={name:"posts/2022/05/2022-05-05-groovy-4-0-features.md"};function l(t,s,p,e,r,d){return h(),a("div",null,s[0]||(s[0]=[n(`<h2 id="switch-表达式" tabindex="-1">Switch 表达式 <a class="header-anchor" href="#switch-表达式" aria-label="Permalink to &quot;Switch 表达式&quot;">​</a></h2><p>可以使用表达式进行 Switch：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">switch</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (value) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    case</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;just a null&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    case</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;zero&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    case</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;one&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    case</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { it </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">instanceof</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> it</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">empty } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;an empty list&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;a list&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    case</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;007&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;James Bond&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    case</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ~</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">+/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;a number&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;unknown&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>还可以根据类型进行 Switch，这个和 Scala 的用法一样：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.transform.Immutable</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Expr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@Immutable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> IntExpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> Expr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> value }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@Immutable</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">knownImmutableClasses</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Expr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> NegExpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> Expr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Expr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> expr }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@Immutable</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">knownImmutableClasses</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Expr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> AddExpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> Expr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Expr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> left, right }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@Immutable</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">knownImmutableClasses</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Expr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MulExpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> Expr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Expr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> left, right }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> eval</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Expr</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> switch</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (e) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IntExpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">value</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NegExpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">eval(e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">expr)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> AddExpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> eval(e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">left) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> eval(e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">right)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        case</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> MulExpr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> eval(e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">left) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> eval(e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">right)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@Newify</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">pattern</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /.*Expr/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> main(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[] args) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> eval(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IntExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> eval(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NegExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IntExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -10</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> eval(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AddExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IntExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IntExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 24</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> eval(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">MulExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IntExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AddExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IntExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IntExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)))) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 32</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> eval(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NegExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AddExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IntExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">IntExpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)))) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="records" tabindex="-1">Records <a class="header-anchor" href="#records" aria-label="Permalink to &quot;Records&quot;">​</a></h2><p>类似 Scala 的 case class，Records 作为一个不可变的数据载体类型，在 Java16中引入。</p><p>除了 Groovy 原生语法，Groovy 同样引入了一个 <code>@RecordType</code> 注解。</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">record </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Point</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> x, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> y) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> p1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> Point</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> p2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> Point</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> p3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> Point</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> p1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">x() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> p1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">y() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> p2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">x() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> p2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">y() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> p1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">toString() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Point[x=0, y=0]&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> p2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">toString() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Point[x=2, y=4]&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> p1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> p3</span></span></code></pre></div><h2 id="sealed-types-封闭类型" tabindex="-1">Sealed Types(封闭类型) <a class="header-anchor" href="#sealed-types-封闭类型" aria-label="Permalink to &quot;Sealed Types(封闭类型)&quot;">​</a></h2><p>也是受 Java 影响引入的功能。同样也提供了 <code>@Sealed</code> 注解。</p><p>注意：</p><ul><li>限定累必须在同一个 package 下</li><li>限定类型如果在同一个文件内，可以不用指定指定累</li></ul><p>不声明 <code>permits</code>：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.transform.ToString</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">sealed</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> interface</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Tree&lt;T&gt; { }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@Singleton</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">final</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Empty </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">implements</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Tree {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String toString() { &quot;Empty&quot; }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">@ToString</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">final</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Node&lt;T&gt; </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">implements</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Tree&lt;T&gt; {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> T value</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Tree&lt;T&gt; left, right</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Node(T value, Tree&lt;T&gt; left, Tree&lt;T&gt; right) {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.value = value</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.left = left</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.right = right</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>使用注解：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">@Sealed(permittedSubclasses</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [Dog, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Cat]</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) interface Animal {}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">@Singleton</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> final</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> class</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Dog</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> implements</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Animal</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    String</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Dog&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">@Singleton</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> final</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> class</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> implements</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Animal</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    String</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Cat&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>使用关键字：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">sealed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Animal</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> permits Dog, Cat {}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@Singleton</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> final</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Dog</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> Animal</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() { </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Dog&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@Singleton</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> final</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> Animal</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() { </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Cat&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="type-checkers" tabindex="-1">Type Checkers <a class="header-anchor" href="#type-checkers" aria-label="Permalink to &quot;Type Checkers&quot;">​</a></h2><p>TypeChecker 可以实现比 Java 更严格的语法类型检查。该功能通过可选的<code>groovy-typecheckers</code>模块来实现。</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.transform.TypeChecked</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@TypeChecked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">extensions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;groovy.typecheckers.RegexChecker&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> testRegexChecker</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    def</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;2022-04-03&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==~</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /(</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">{4})-(</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">{1,2})-(</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">{1,2}/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="built-in-macro-methods" tabindex="-1">Built-in Macro Methods <a class="header-anchor" href="#built-in-macro-methods" aria-label="Permalink to &quot;Built-in Macro Methods&quot;">​</a></h2><p>宏方法允许你访问和操作编译器 AST 数据结构。通过引入可选的<code>groovy-macro-library</code>包来使用。</p><p>宏方法看起来和普通方法一样调用，实际上会在编译时被替换成生成的代码。</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 42</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> ,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> string </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;foo&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> SV</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(num, list, range, string) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;num=42, list=[1, 2, 3], range=[0, 1, 2, 3, 4, 5], string=foo&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> SVI</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(range) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;range=0..5&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> NV</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(range) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">instanceof</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NamedValue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> NV</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(string)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;string&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;&amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> NV</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(string)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;foo&#39;</span></span></code></pre></div><h2 id="pojo-注解" tabindex="-1"><code>@POJO</code> 注解 <a class="header-anchor" href="#pojo-注解" aria-label="Permalink to &quot;\`@POJO\` 注解&quot;">​</a></h2><p>众所周知，所有的 Groovy 类都实现了<code>GroovyObject</code>接口。但是如果你想写一个 给纯 Java 调用的类库的时候，你就可以是使用 <code>@POJO</code> 注解。</p><p><code>@POJO</code> 注解让类在运行时不在加上 Groovy 支持。</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.transform.CompileStatic</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.transform.Immutable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.transform.stc.POJO</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@POJO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@Immutable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@CompileStatic</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> PojoPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> x, y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        PojoPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> point </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PojoPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        System.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(point</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">toString())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="groovy-contracts-groovy-契约" tabindex="-1">Groovy Contracts (Groovy 契约) <a class="header-anchor" href="#groovy-contracts-groovy-契约" aria-label="Permalink to &quot;Groovy Contracts (Groovy 契约)&quot;">​</a></h2><p>Groovy契约有助于编写防御性代码。</p><ul><li><code>@Invariant</code> 类注解会对象的声明周期做检查。 <ul><li>在构造器被调用，方法执行前后去执行定义的断言</li></ul></li><li><code>@Requires</code> 在方法执行前进行断言</li><li><code>@Ensures</code> 在方法执行后进行断言</li></ul><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.contracts.Ensures</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.contracts.Invariant</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.contracts.Requires</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@Invariant</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({ speed &gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Rocket</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> speed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> started </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    @Requires</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({ !started })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    Rocket</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> startEngine</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() { tap {started </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> }}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    @Requires</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({ started })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    Rocket</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> stopEngine</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() { tap { started </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> }}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    @Requires</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({ started })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    @Ensures</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({ old.speed &lt; speed })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    Rocket</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> accelerate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) { tap { speed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> value }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="ginq-groovy-integrated-query-language" tabindex="-1">GINQ(Groovy-Integrated Query language) <a class="header-anchor" href="#ginq-groovy-integrated-query-language" aria-label="Permalink to &quot;GINQ(Groovy-Integrated Query language)&quot;">​</a></h3><p>GINQ 可以让你使用 SQL 易用的语法查询集合。</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.json.JsonSlurper</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> json </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> JsonSlurper</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">parseText </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &quot;people&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            {&quot;name&quot;: &quot;Alan&quot;, &quot;age&quot;: 11},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            {&quot;name&quot;: &quot;Mary&quot;, &quot;age&quot;: 26},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            {&quot;name&quot;: &quot;Eric&quot;, &quot;age&quot;: 34},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            {&quot;name&quot;: &quot;Elisabeth&quot;, &quot;age&quot;: 14},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            {&quot;name&quot;: &quot;Marc&quot;, &quot;age&quot;: 2},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            {&quot;name&quot;: &quot;Robert&quot;, &quot;age&quot;: 52},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            {&quot;name&quot;: &quot;Veronica&quot;, &quot;age&quot;: 32},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">            {&quot;name&quot;: &quot;Alex&quot;, &quot;age&quot;: 17}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    &#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> GQ</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    from f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">people</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    where f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 18</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    orderby f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> desc</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    limit </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    select f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">toUpperCase()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">take(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">toList() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;RO&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;ER&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;VE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span></code></pre></div><h2 id="toml-support" tabindex="-1">TOML Support <a class="header-anchor" href="#toml-support" aria-label="Permalink to &quot;TOML Support&quot;">​</a></h2><p>Groovy3 引入了 YAML 的支持，Groovy 4 增加 TOML 格式的支持。</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.toml.TomlBuilder</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> groovy.toml.TomlSlurper</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> input </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"># This is a TOML document (taken from https://toml.io)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">title = &quot;TOML Example&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">[owner]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">name = &quot;Tom Preston-Werner&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">dob = 1979-05-27T07:32:00-08:00</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">[database]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">enabled = true</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">ports = [ 8000, 8001, 8002 ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">data = [ [&quot;delta&quot;, &quot;phi&quot;], [3.14] ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">temp_targets = { cpu = 79.5, case = 72.0 }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">[servers]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">[servers.alpha]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">ip = &quot;10.0.0.1&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">role = &quot;frontend&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">[servers.beta]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">ip = &quot;10.0.0.2&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">role = &quot;backend&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> toml </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TomlSlurper</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">parseText(input)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> toml</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;TOML Example&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> toml</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">owner</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Tom Preston-Werner&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> toml</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">database</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ports </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8001</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8002</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> toml</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">servers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">alpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;10.0.0.1&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> toml</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">servers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">beta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;10.0.0.2&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">TomlBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> builder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TomlBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">builder {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    title </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;This is TOML document&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    servers {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        alpha {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            ip </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;10.0.0.1&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        beta {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            ip </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;10.0.0.2&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">toString() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;&#39;&#39;title = &#39;This is TOML document&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">servers.alpha.ip = &#39;10.0.0.1&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">servers.beta.ip = &#39;10.0.0.2&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;&#39;&#39;</span></span></code></pre></div><h2 id="gstring-性能提升" tabindex="-1">GString 性能提升 <a class="header-anchor" href="#gstring-性能提升" aria-label="Permalink to &quot;GString 性能提升&quot;">​</a></h2><p>下面代码，Groovy3 需要 10s，Groovy4 只需要 0.1s。</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> now </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> java.time.LocalDateTime.</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">now()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> gs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;integer: </span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">\${</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">, double: </span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">\${</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">1.2d</span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">, string: </span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">\${</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;x&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">, class: </span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">\${</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Map.class</span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">, boolean: </span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">\${</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">true</span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">, date: </span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">\${</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">now</span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">long</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> System.</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">currentTimeMillis()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 10000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    gs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">toString()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">long</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> System.</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">currentTimeMillis()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">println</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">\${</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">e - b</span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">ms&quot;</span></span></code></pre></div><h2 id="增减的-range" tabindex="-1">增减的 Range <a class="header-anchor" href="#增减的-range" aria-label="Permalink to &quot;增减的 Range&quot;">​</a></h2><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> half </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> otherHalf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0.5</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // leading zero remains supported</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> third </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">333d</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> quarter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">25f</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> fractions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">, .</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">, .</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// can be used for ranges too (with a rare edge case you might want to avoid)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> range1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -1.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">..&lt;.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // okay here</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> range2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -1.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // space is okay but harder for humans (1)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;"> range3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -1.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.5</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // leading zero edge case (1)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> range3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">-1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, .</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span></code></pre></div><hr><ul><li><a href="https://groovy-lang.org/releasenotes/groovy-4.0.html" target="_blank" rel="noreferrer">https://groovy-lang.org/releasenotes/groovy-4.0.html</a></li></ul>`,47)]))}const F=i(k,[["render",l]]);export{y as __pageData,F as default};
