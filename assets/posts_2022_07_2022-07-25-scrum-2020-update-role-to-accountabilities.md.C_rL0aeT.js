import{_ as r,a,af as e,o as c}from"./chunks/framework.C87LdZyP.js";const d=JSON.parse('{"title":"Scrum 指南 2020 更新 - 责任角色","description":"","frontmatter":{"title":"Scrum 指南 2020 更新 - 责任角色","date":"2022-07-25T00:00:00.000Z","tags":["scrum"],"category":["Scrum"]},"headers":[],"relativePath":"posts/2022/07/2022-07-25-scrum-2020-update-role-to-accountabilities.md","filePath":"posts/2022/07/2022-07-25-scrum-2020-update-role-to-accountabilities.md","lastUpdated":1718173059000}'),s={name:"posts/2022/07/2022-07-25-scrum-2020-update-role-to-accountabilities.md"};function u(o,t,m,i,l,p){return c(),a("div",null,t[0]||(t[0]=[e('<p>随着 2020 年 Scrum 指南的发布，术语角色被替换为责任。这一变化的目的是特别强调这不是一份工作描述，而是执行 Scrum 所需的最低限度的职责集。责任分为 3 组：</p><ul><li>Scrum 大师</li><li>产品拥有者</li><li>开发商</li></ul><p>开发人员一词是基于 2017 Scrum 指南中开发团队角色的新责任。这种术语的改变最终不会改变 Scrum，因为角色总是描述一组责任。但是，删除角色简化了 Scrum 指南，并有助于减少人们通常认为角色是职位并提供额外上下文而造成的混淆。</p><p>以下是讨论此更改时出现的一些有趣问题：</p><h3 id="很多地方都在谈论-scrum-中的角色-现在错了吗" tabindex="-1">很多地方都在谈论 Scrum 中的角色，现在错了吗？ <a class="header-anchor" href="#很多地方都在谈论-scrum-中的角色-现在错了吗" aria-label="Permalink to &quot;很多地方都在谈论 Scrum 中的角色，现在错了吗？&quot;">​</a></h3><p>不，这些更改提供了清晰性并尽量避免混淆。使用术语角色的现有内容仍然有效，因为人们将承担角色或角色作为承担责任的一部分。我希望这一变化提醒人们，角色不是职位描述。</p><h3 id="如果我的工作头衔是-scrum-master-那现在错了吗" tabindex="-1">如果我的工作头衔是 Scrum Master，那现在错了吗？ <a class="header-anchor" href="#如果我的工作头衔是-scrum-master-那现在错了吗" aria-label="Permalink to &quot;如果我的工作头衔是 Scrum Master，那现在错了吗？&quot;">​</a></h3><p>不，Scrum Master 仍然是一个很好的职位，但职位可能包含比 Scrum 指南中描述的责任更大的职位描述。Scrum 指南中对责任的描述提供了基础，每个组织和上下文都将扩展这些责任，并使这些责任更具体地针对他们的情况。例如，Scrum Master 通过帮助规划 Scrum 实施来为组织服务。在职位描述中，这将描述如何适应更广泛的敏捷计划。</p>',8)]))}const S=r(s,[["render",u]]);export{d as __pageData,S as default};
