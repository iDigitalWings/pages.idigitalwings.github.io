import{_ as i,a,af as t,o as e}from"./chunks/framework.C87LdZyP.js";const n="/assets/ecosystem.BK9J9VqS.png",l="/assets/login.BWnTjCGu.png",p="/assets/new-project.CKCywnFl.png",h="/assets/sbom-formats.BdM41PNU.png",r="/assets/api-key.1dAL0Yfr.png",k="/assets/upload-bom.LcB29Kmf.png",o="/assets/project-list.B81U7-0L.png",d="/assets/project-rocerod.i4ixaZMb.png",c="/assets/prject-components.BfG1KBAz.png",F="/assets/project-vulnerablities.DLXs1ghm.png",g="/assets/project-vulnerability.OKavuboI.png",q=JSON.parse('{"title":"DependencyTrack SBOM 持续分析平台","description":"","frontmatter":{"title":"DependencyTrack SBOM 持续分析平台","date":"2022-05-16T00:00:00.000Z","tags":["sbom","security"],"category":["其它"]},"headers":[],"relativePath":"posts/2022/05/2022-05-16-dependencytrack.md","filePath":"posts/2022/05/2022-05-16-dependencytrack.md","lastUpdated":1718175555000}'),y={name:"posts/2022/05/2022-05-16-dependencytrack.md"};function C(m,s,u,b,D,B){return e(),a("div",null,s[0]||(s[0]=[t('<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p><a href="https://dependencytrack.org/" target="_blank" rel="noreferrer">Dependency Track</a> 是一个 SBOM 持续分析 平台，可以让我们减少软件供应链的风险。</p><p>Dependency Track 支持丰富的特性：</p><ul><li>Dependency Track 支持管理的类型： <ul><li>Applications</li><li>Libraries</li><li>Frameworks</li><li>Operating systems</li><li>Containers</li><li>Firmware</li><li>Files</li><li>Hardware</li></ul></li><li>跨应用管理和最终组件</li><li>管理多种类型的风险 <ul><li>组件已知的漏洞</li><li>过期的组件</li><li>被修改的组件</li><li>License 的风险</li></ul></li><li>支持全局和项目级的策略设置 <ul><li>安全风险与合规</li><li>授权风险与合规</li><li>操作风险与合规</li></ul></li><li>OAuth 2.0 + OpenID Connect (OIDC) 的单点登录支持 (authN/authZ)</li><li>内置用户管理，Active Directory/LDAP 和 API Keys 管理</li></ul><p>更多特性可参考下面的生态介绍。</p><div class="tip custom-block"><p class="custom-block-title">SBOM</p><p>SBOM: <a href="https://owasp.org/www-community/Component_Analysis#software-bill-of-materials-sbom" target="_blank" rel="noreferrer">Software Bill of Materials</a> 软件物料清单。</p></div><h3 id="生态" tabindex="-1">生态 <a class="header-anchor" href="#生态" aria-label="Permalink to &quot;生态&quot;">​</a></h3><p><img src="'+n+`" alt=""></p><ul><li>支持 CycloneDX 格式 SBOM；</li><li>支持 NVD，NPM，GitHub Advisories，OSS Index，VulnDB 等数据源； <ul><li>也支持自定义私有库</li></ul></li><li>支持 Maven、NPM、PyPi、hex、Golang、RubyGems等仓库；</li><li>支持 Slack、Teams、WebEx、Webhook、Email 等方式进行自动通知；</li><li>支持 Jenkins、Gitlab、OpenAPI 等方式持续集成</li><li>支持和 ThreadFix、Fortity、SecurityCompass、CodeDx 等安全工具集合。</li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>选择您最合适的安装方式，Dependency Track 包含 API Server 和 Frontend 两个项目， 可以使用 War 包或者 Docker 安装。</p><p>这里使用 Docker 安装：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Downloads the latest Docker Compose file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -LO</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://dependencytrack.org/docker-compose.yml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Starts the stack using Docker Compose</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -d</span></span></code></pre></div><p>安装后访问：<a href="http://127.0.0.1:8080" target="_blank" rel="noreferrer">http://127.0.0.1:8080</a>， 使用默认初始账户密码<code>admin:admin</code>登录。</p><p><img src="`+l+'" alt=""></p><h2 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h2><p>创建一个 test-java 项目：</p><p><img src="'+p+'" alt=""></p><h2 id="设置-sbom-格式" tabindex="-1">设置 SBOM 格式 <a class="header-anchor" href="#设置-sbom-格式" aria-label="Permalink to &quot;设置 SBOM 格式&quot;">​</a></h2><p>在 <code>Administration-&gt;General-&gt;BOM Formats</code>设置支持的 SBOM 格式：</p><p><img src="'+h+'" alt=""></p><h2 id="查看-apikey" tabindex="-1">查看 ApiKey <a class="header-anchor" href="#查看-apikey" aria-label="Permalink to &quot;查看 ApiKey&quot;">​</a></h2><p>默认每个 Team 自动生成一个 ApiKey，我们使用系统自动创建的 <code>Automation</code> Team 的 ApiKey。通过 <code>Adiminstartion-&gt;Access Management-&gt; Teams</code> 来查看：</p><p><img src="'+r+'" alt=""></p><h2 id="生成-sbom" tabindex="-1">生成 SBOM <a class="header-anchor" href="#生成-sbom" aria-label="Permalink to &quot;生成 SBOM&quot;">​</a></h2><p>使用 Syft 工具对我们的测试镜像生成 CycloneDX 格式的 SBOM 文件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">syft</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> myimage:test</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cyclonedx-xml</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> payload.xml</span></span></code></pre></div><h2 id="上传-sbom" tabindex="-1">上传 SBOM <a class="header-anchor" href="#上传-sbom" aria-label="Permalink to &quot;上传 SBOM&quot;">​</a></h2><p>支持多种方式上传 SBOM，比如 RestAPI、CI 工具、第三方工具等。 如果您正在使用 Jenkins 等 CI 工具， 可以使用对应的插件上传。</p><h3 id="手动上传" tabindex="-1">手动上传 <a class="header-anchor" href="#手动上传" aria-label="Permalink to &quot;手动上传&quot;">​</a></h3><p>可以在项目详情的 <code>Components</code> Tab 页下手动上传 Bom 文件，和管理组件：</p><p><img src="'+k+`" alt=""></p><h3 id="dtrack-auditor" tabindex="-1">dtrack-auditor <a class="header-anchor" href="#dtrack-auditor" aria-label="Permalink to &quot;dtrack-auditor&quot;">​</a></h3><p>参考 <a href="https://docs.dependencytrack.org/integrations/community-integrations/" target="_blank" rel="noreferrer">Community Integrations</a> 选择 <a href="https://github.com/thinksabin/DTrackAuditor" target="_blank" rel="noreferrer">dtrack-auditor</a> 上传 BOM。</p><p>使用 Docker 上传：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -v</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> $PWD</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">:/tmp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> thinksabin/dtrackauditor</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-u </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;https://dependencytrack.loghub.com/api/v1/bom&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-k </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;your-api-key&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-p </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">cybercloud-backend</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -v</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0.0.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-f </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/tmp/bom.xml</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-a</span></span></code></pre></div><h3 id="restapi" tabindex="-1">RestAPI <a class="header-anchor" href="#restapi" aria-label="Permalink to &quot;RestAPI&quot;">​</a></h3><p>使用 <a href="https://docs.dependencytrack.org/usage/cicd/" target="_blank" rel="noreferrer">RestAPI 方式</a>进行 CICD， 可使用如下命令上传：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;PUT&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;http://dtrack.example.com/api/v1/bom&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;X-API-Key: LPojpCDSsEd4V9Zi6qCWr4KsiF3Konze&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">     -d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> $&#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;project&quot;: &quot;f90934f5-cb88-47ce-81cb-db06fc67d4b4&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  &quot;bom&quot;: &quot;PD94bWwgdm...&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  }&#39;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">BOM 内容</p><p>首先将 BOM 内容进行 Base64 编码。</p></div><p>如果不想用 Base64 编码，可以使用 POST 方式：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;POST&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;http://dtrack.example.com/api/v1/bom&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Content-Type: multipart/form-data&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;X-Api-Key: LPojpCDSsEd4V9Zi6qCWr4KsiF3Konze&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">     -F</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;project=f90934f5-cb88-47ce-81cb-db06fc67d4b4&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">     -F</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;bom=&lt;?xml version=</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">1.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> encoding=</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">UTF-8</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">?&gt;...&quot;</span></span></code></pre></div><p>或者利用 cURL 等功能使用文件上传：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;PUT&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;http://dtrack.example.com/api/v1/bom&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">     -H</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;X-API-Key: LPojpCDSsEd4V9Zi6qCWr4KsiF3Konze&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">     -d</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> @payload.json</span></span></code></pre></div><h2 id="查看漏洞" tabindex="-1">查看漏洞 <a class="header-anchor" href="#查看漏洞" aria-label="Permalink to &quot;查看漏洞&quot;">​</a></h2><p>查看项目列表：</p><p><img src="`+o+'" alt=""></p><p>查看项目 Overview：</p><p><img src="'+d+'" alt=""></p><p>查看 Components：</p><p><img src="'+c+'" alt=""></p><p>查看已知漏洞：</p><p><img src="'+F+'" alt=""></p><p>查看漏洞详情：</p><p><img src="'+g+'" alt=""></p><hr><ul><li><a href="https://dependencytrack.org/" target="_blank" rel="noreferrer">https://dependencytrack.org/</a></li><li><a href="https://cyclonedx.org/" target="_blank" rel="noreferrer">https://cyclonedx.org/</a></li></ul>',57)]))}const v=i(y,[["render",C]]);export{q as __pageData,v as default};
