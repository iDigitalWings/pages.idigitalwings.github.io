import{_ as i,a,af as n,o as l}from"./chunks/framework.C87LdZyP.js";const h="/assets/img.DNjjcHKI.png",p="/assets/img_1.BlnNqLtM.png",D=JSON.parse('{"title":"Gradle 集成 Dependency 管理 SBOM","description":"","frontmatter":{"title":"Gradle 集成 Dependency 管理 SBOM","date":"2022-05-25T00:00:00.000Z","tags":["sbom","gradle"],"category":["其它"]},"headers":[],"relativePath":"posts/2022/05/2022-05-25-dependency-track-gradle.md","filePath":"posts/2022/05/2022-05-25-dependency-track-gradle.md","lastUpdated":1718175555000}'),k={name:"posts/2022/05/2022-05-25-dependency-track-gradle.md"};function t(e,s,r,d,g,y){return l(),a("div",null,s[0]||(s[0]=[n(`<p>使用插件 <a href="https://plugins.gradle.org/plugin/com.trileuco.dependency-track-gradle" target="_blank" rel="noreferrer">com.trileuco.dependency-track-gradle</a>， 插件 <a href="https://github.com/trileuco/dependency-track-gradle" target="_blank" rel="noreferrer">Github 地址</a>。</p><p>插件本身不生成 bom，需要依赖 <a href="https://github.com/CycloneDX/cyclonedx-gradle-plugin" target="_blank" rel="noreferrer">cycloneDx plugin</a>， 配置如下：</p><p>引入插件：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    id </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;org.cyclonedx.bom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> version </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;1.4.1&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    id </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;dependency-track&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> version </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;0.1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    id </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;com.trileuco.dependency-track-gradle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> version </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;0.1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>配置 dtrack 信息：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">dependencyTrack {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    host </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;your-dtrack-server-host&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    apiKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;your-dtrack-api-key&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    projectId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;your-dtrack-project-identifier&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">tasks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">named(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;dependencyTrack&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    dependsOn cyclonedxBom</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>然后执行发布命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dependencyTrack</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -i</span></span></code></pre></div><p>完整的配置信息如下：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">dependencyTrack {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    host </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;http://127.0.0.1:8081&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    realm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;/api/v1/bom&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    bomFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> file(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">\${</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">buildDir.path</span><span style="--shiki-light:#032F62;--shiki-dark:#F47067;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/reports/bom.xml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    projectId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    apiKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">tasks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">named(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;dependencyTrack&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    dependsOn cyclonedxBom</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>如果出现错误：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[ERROR] [org.gradle.api.Task] An error occurred attempting to read POM</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">org.codehaus.plexus.util.xml.pull.XmlPullParserException:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> UTF-8</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> BOM</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> plus</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> xml</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> decl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ISO-8859-1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> incompatible</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (position: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">START_DOCUMENT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> seen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">?xml</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> version=&quot;1.0&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> encoding=&quot;ISO-8859-1&quot;...</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> @1:41</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.codehaus.plexus.util.xml.pull.MXParser.parseXmlDeclWithVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MXParser.java:3366</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.codehaus.plexus.util.xml.pull.MXParser.parseXmlDecl</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MXParser.java:3288</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.codehaus.plexus.util.xml.pull.MXParser.parsePI</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MXParser.java:3140</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.codehaus.plexus.util.xml.pull.MXParser.parseProlog</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MXParser.java:1828</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.codehaus.plexus.util.xml.pull.MXParser.nextImpl</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MXParser.java:1757</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.codehaus.plexus.util.xml.pull.MXParser.next</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MXParser.java:1375</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.apache.maven.model.io.xpp3.MavenXpp3Reader.read</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MavenXpp3Reader.java:3876</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.apache.maven.model.io.xpp3.MavenXpp3Reader.read</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MavenXpp3Reader.java:595</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.apache.maven.model.io.xpp3.MavenXpp3Reader.read</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MavenXpp3Reader.java:609</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.cyclonedx.gradle.MavenHelper.readPom</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MavenHelper.java:292</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.cyclonedx.gradle.MavenHelper.retrieveParentProject</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MavenHelper.java:247</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.cyclonedx.gradle.MavenHelper.getClosestMetadata</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MavenHelper.java:79</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.cyclonedx.gradle.CycloneDxTask.convertArtifact</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CycloneDxTask.java:383</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.cyclonedx.gradle.CycloneDxTask.lambda</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$null</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">$3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CycloneDxTask.java:218</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.cyclonedx.gradle.CycloneDxTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$$Lambda$1110</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/0x00000000fbee0220.accept</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Unknown</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Source</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java.base/java.lang.Iterable.forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Iterable.java:75</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.cyclonedx.gradle.CycloneDxTask.lambda</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$createBom</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">$4</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CycloneDxTask.java:208</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.cyclonedx.gradle.CycloneDxTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$$Lambda$1108</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/0x000000000300f220.apply</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Unknown</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Source</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java.base/java.util.stream.ReferencePipeline</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">$7$1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.accept</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ReferencePipeline.java:271</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java.base/java.util.HashMap</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$KeySpliterator</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.forEachRemaining</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">HashMap.java:1603</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java.base/java.util.stream.AbstractPipeline.copyInto</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">AbstractPipeline.java:497</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">AbstractPipeline.java:487</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java.base/java.util.stream.ReduceOps</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$ReduceOp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.evaluateSequential</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ReduceOps.java:913</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java.base/java.util.stream.AbstractPipeline.evaluate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">AbstractPipeline.java:239</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java.base/java.util.stream.ReferencePipeline.collect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ReferencePipeline.java:578</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> org.cyclonedx.gradle.CycloneDxTask.createBom</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CycloneDxTask.java:226</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Native</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Method</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p>查看源码之后发现是 MXParser 在处理 pom.xml 时，如果文件编码和 XML 的 charset 声明不一致，就会报错。</p><h2 id="修改-cyclonedx-gradle-plugin" tabindex="-1">修改 cyclonedx-gradle-plugin <a class="header-anchor" href="#修改-cyclonedx-gradle-plugin" aria-label="Permalink to &quot;修改 cyclonedx-gradle-plugin&quot;">​</a></h2><p>事实上很多 POM 文件声明了 ISO-8859-1 的编码，我本机存储文件时总是使用 UTF-8 格式。插件也没有 对应配置处理这个问题，于是我 fork 了 cyclonedx-dom 插件，进行了修改。</p><p>修改思路就是预读 pom 文件，如果XML编码和文件编码不一致，去掉 xml 编码，</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> private</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> File </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">removeEncodingDeclare</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(File file) throws IOException, XMLStreamException {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    final</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> XMLStreamReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> xmlStreamReader</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> XMLInputFactory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">newInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">createXMLStreamReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> FileReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(file));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fileEncoding</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> xmlStreamReader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getEncoding</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> encodingFromXMLDeclaration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> xmlStreamReader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getCharacterEncodingScheme</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (encodingFromXMLDeclaration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;&amp;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        !</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">encodingFromXMLDeclaration.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">replaceAll</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;-&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">replaceAll</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;_&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(fileEncoding.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">replaceAll</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;-&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">replaceAll</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;_&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        Path</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> tempFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Files.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">createTempFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        File</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> newFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(tempFile.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;.xml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> removeEncodingDeclare</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Files.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">readString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(file.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toPath</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">writeStringToFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(newFile, content, Charset.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">forName</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(encodingFromXMLDeclaration));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;UseNoEncodingFile:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(file.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(newFile.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> newFile;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> file;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">private</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">removeEncodingDeclare</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(String string) throws IOException {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Pattern.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;encoding=</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">w-</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">d]*</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, Pattern.DOTALL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Pattern.CASE_INSENSITIVE);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> p.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">matcher</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(string).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">replaceFirst</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">private</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> InputStream </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">removeEncodingDeclare</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(InputStream is) throws IOException {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(is.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">readAllBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), StandardCharsets.UTF_8);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> ByteArrayInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">removeEncodingDeclare</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(text).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>将插件命名为<code>com.github.alanland.bom</code>。</p><p>打包插件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">gradle</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> build</span></span></code></pre></div><p>插件发布到本地：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">gradle</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> build</span></span></code></pre></div><p>项目中测试：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">gradle</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cyclonedxBom</span></span></code></pre></div><p>可以看到 <code>build/reports/bom.xml</code> 文件成功生成。</p><h2 id="修改-dependency-track-插件" tabindex="-1">修改 Dependency-track 插件 <a class="header-anchor" href="#修改-dependency-track-插件" aria-label="Permalink to &quot;修改 Dependency-track 插件&quot;">​</a></h2><p>Dependency-track gradle 插件支持使用 projectId 来上传 BOM 信息， 如果是新项目或者新版本发布，那么还需要去 Dependency-track 创建项目， 对于 CI 来说还不是很顺畅。</p><p>现在我们改造 Dependency-track 插件，来集成自动创建项目功能（API 参考 Dependency-track 文档）。</p><p>修改过程很简单，文章里不再赘述，有兴趣可以参考<a href="https://github.com/alanland/dependency-track-gradle" target="_blank" rel="noreferrer">修改后的项目源码</a>。</p><p>指定项目编码：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">dependencyTrack {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    host </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;your-dtrack-server-host&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    apiKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;your-dtrack-api-key&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    projectId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;your-dtrack-project-identifier&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">tasks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">named(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;dependencyTrack&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    dependsOn cyclonedxBom</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>也可以指定项目名称和版本：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">dependencyTrack {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    host </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;your-dtrack-server-host&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    apiKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;your-dtrack-api-key&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    projectId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> // leave as empty string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    projectName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;your-project-name&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    projectVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;your-project-version&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">tasks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">named</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;dependencyTrack&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    dependsOn cyclonedxBom</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="最终测试" tabindex="-1">最终测试 <a class="header-anchor" href="#最终测试" aria-label="Permalink to &quot;最终测试&quot;">​</a></h2><p>新建一个 Gradle 项目，引入一些有漏洞的依赖进行测试，</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    id </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;com.github.alanland.bom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> version </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;1.6.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    id </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;com.github.alanland.dependency-track-gradle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> version </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;0.1.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">group </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;com.example&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;6.0.8&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    implementation </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;org.apache.logging.log4j:log4j-core:2.11.2&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    implementation </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;org.codehaus.groovy:groovy:2.5.13&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    implementation </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;org.springframework:spring-core:4.3.4.RELEASE&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">dependencyTrack {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    host </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;https://your.dependencytrack.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    apiKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;UOsFcRx9iNs&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    projectId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    projectName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;test-gradle&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    projectVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">tasks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">named(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;dependencyTrack&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    dependsOn cyclonedxBom</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>执行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">gradle</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dependencyTrack</span></span></code></pre></div><p>在 Dependency Track 查看 Components：</p><p><img src="`+h+'" alt=""></p><p>查看漏洞：</p><p><img src="'+p+'" alt=""></p>',42)]))}const A=i(k,[["render",t]]);export{D as __pageData,A as default};
