import{_ as a,a as r,af as t,o}from"./chunks/framework.C87LdZyP.js";const m=JSON.parse('{"title":"Devon4j: XML","description":"","frontmatter":{"title":"Devon4j: XML","date":"2022-06-19T00:00:00.000Z","tags":["devon4j"],"category":["架构"]},"headers":[],"relativePath":"posts/2022/06/2022-06-19-devon4j-xml.md","filePath":"posts/2022/06/2022-06-19-devon4j-xml.md","lastUpdated":1718173059000}'),n={name:"posts/2022/06/2022-06-19-devon4j-xml.md"};function l(i,e,s,c,d,p){return o(),r("div",null,e[0]||(e[0]=[t('<p><a href="http://en.wikipedia.org/wiki/XML" target="_blank" rel="noreferrer">XML</a>（可扩展标记语言）是结构化信息的 W3C 标准格式。 它拥有一个由附加标准和工具组成的庞大生态系统。</p><p>在 Java 中，有许多不同的 API 和框架用于访问、生成和处理 XML。 对于 devonfw，我们建议使用 <strong>JAXB</strong> 将 Java 对象映射到 XML，反之亦然。 此外，还有流行的<a href="http://docs.oracle.com/javase/7/docs/api/org/w3c/dom/package-summary.html" target="_blank" rel="noreferrer">DOM API</a>， 用于直接读取和写入较小的 XML 文档。 在处理大型 XML 文档时，<a href="http://en.wikipedia.org/wiki/StAX" target="_blank" rel="noreferrer">StAX</a>是正确的选择。</p><h2 id="jaxb" tabindex="-1">JAXB <a class="header-anchor" href="#jaxb" aria-label="Permalink to &quot;JAXB&quot;">​</a></h2><p>我们使用<a href="http://en.wikipedia.org/wiki/Java_Architecture_for_XML_Binding" target="_blank" rel="noreferrer">JAXB</a>将 Java 对象序列化为 XML，反之亦然。</p><h3 id="jaxb-和继承" tabindex="-1">JAXB 和继承 <a class="header-anchor" href="#jaxb-和继承" aria-label="Permalink to &quot;JAXB 和继承&quot;">​</a></h3><p>使用<code>@XmlSeeAlso</code>注解来提供子类。<a href="https://dzone.com/articles/java-and-xml-part-3-jaxb" target="_blank" rel="noreferrer">请参阅此处</a>描述的「集体多态性(Collective Polymorphism)」部分。</p><h3 id="jaxb-自定义映射" tabindex="-1">JAXB 自定义映射 <a class="header-anchor" href="#jaxb-自定义映射" aria-label="Permalink to &quot;JAXB 自定义映射&quot;">​</a></h3><p>为了映射不遵循 Java bean 约定的自定义数据类型或其他类型，您需要定义自定义映射。 如果您为 XML 映射创建专用对象，则可以轻松避免这种情况。 当这不适合使用 <code>@XmlJavaTypeAdapter</code> 并提供 <code>XmlAdapter</code> 处理映射的实现时。 有关详细信息，请参见<a href="https://www.eclipse.org/eclipselink/documentation/2.6/moxy/advanced_concepts006.htm" target="_blank" rel="noreferrer">此处</a>。</p><h2 id="安全" tabindex="-1">安全 <a class="header-anchor" href="#安全" aria-label="Permalink to &quot;安全&quot;">​</a></h2><p>要防止 XML 外部实体攻击，请遵循<a href="https://docs.oracle.com/en/java/javase/11/security/java-api-xml-processing-jaxp-security-guide.html" target="_blank" rel="noreferrer">JAXP 安全指南</a> 并启用<a href="https://docs.oracle.com/en/java/javase/11/security/java-api-xml-processing-jaxp-security-guide.html%23GUID-88B04BE2-35EF-4F61-B4FA-57A0E9102342" target="_blank" rel="noreferrer">FSP</a>。</p>',10)]))}const f=a(n,[["render",l]]);export{m as __pageData,f as default};
