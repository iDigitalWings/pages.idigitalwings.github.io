import{_ as i,a,af as n,o as p}from"./chunks/framework.C87LdZyP.js";const o=JSON.parse('{"title":"Springfox, Swagger, Asciidoc","description":"","frontmatter":{"title":"Springfox, Swagger, Asciidoc","date":"2019-10-09T15:23:34.498Z","tags":["java","gradle","swagger"],"category":["Java"]},"headers":[],"relativePath":"posts/2019/10/2019-10-09-springfox-swagger-markdown-asciidoc.md","filePath":"posts/2019/10/2019-10-09-springfox-swagger-markdown-asciidoc.md","lastUpdated":1718175555000}'),t={name:"posts/2019/10/2019-10-09-springfox-swagger-markdown-asciidoc.md"};function h(l,s,k,e,r,g){return p(),a("div",null,s[0]||(s[0]=[n(`<p>重新把文档纳入到 CI 里面，方案还是 Swagger 做注解， 用 Springfox 做集成，使用 Swagger2Markdown 插件转换成 Adoc，最后通过 Asciidoc 插件发不成 html 和 pdf 等格式。</p><h2 id="添加-springfox-依赖" tabindex="-1">添加 Springfox 依赖 <a class="header-anchor" href="#添加-springfox-依赖" aria-label="Permalink to &quot;添加 Springfox 依赖&quot;">​</a></h2><p>我们这里使用 Snapshot 版本：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    compile </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    compile </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;org.springframework.boot:spring-boot-starter-integration&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    compile(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;org.springframework.integration:spring-integration-http&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        exclude(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;commons-logging&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        exclude(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;commons-logging-api&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    compile </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">group</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;io.springfox&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;springfox-swagger2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3.0.0-SNAPSHOT&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    compile </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">group</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;io.springfox&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;springfox-spring-webmvc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3.0.0-SNAPSHOT&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    compile </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">group</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;io.springfox&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;springfox-spring-integration-webmvc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3.0.0-SNAPSHOT&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    compile </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">group</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;io.springfox&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;springfox-swagger-ui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3.0.0-SNAPSHOT&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    testCompile </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;org.springframework.boot:spring-boot-starter-test&quot;</span></span></code></pre></div><p>此时访问 <code>/swagger-ui.html</code> 就可以访问到界面了。</p><p>ps：swagger-ui 界面加载比较慢，如果服务启动好了，还不能访问，请耐心等待。</p><h2 id="使用-swagger2markdown-转换成-adoc" tabindex="-1">使用 Swagger2Markdown 转换成 adoc <a class="header-anchor" href="#使用-swagger2markdown-转换成-adoc" aria-label="Permalink to &quot;使用 Swagger2Markdown 转换成 adoc&quot;">​</a></h2><p>为了自动化，我们使用 SpringBoot 单元测试的形式</p><p>添加依赖</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    testCompile </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;io.github.swagger2markup:swagger2markup:1.3.3</span></span></code></pre></div><p>编写测试类 <code>Swagger2MarkupTest</code></p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> io.github.swagger2markup.Swagger2MarkupConverter</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.junit.Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.junit.runner.RunWith</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.springframework.boot.test.context.SpringBootTest</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.springframework.context.annotation.Import</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.springframework.test.context.junit4.SpringRunner</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> java.nio.file.Paths</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@RunWith</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SpringRunner</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.class)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@SpringBootTest</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@Import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SwaggerConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Application</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Swagger2MarkupTest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    @Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> convertRemoteSwaggerToAsciiDoc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // Remote Swagger source</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        Swagger2MarkupConverter.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">from(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;http://127.0.0.1:8080/v2/api-docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">build()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            .toFolder(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Paths.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">get(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;src/docs/asciidoc/generated&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>当然也可以用 MockMvc 而不是直接指定端口号：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.junit.Before</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.junit.Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.junit.runner.RunWith</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.springframework.beans.factory.annotation.Autowired</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.springframework.boot.test.context.SpringBootTest</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.springframework.context.annotation.Import</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.springframework.test.context.junit4.SpringJUnit4ClassRunner</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.springframework.test.web.servlet.MockMvc</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.springframework.test.web.servlet.setup.MockMvcBuilders</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> org.springframework.web.context.WebApplicationContext</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@RunWith</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> SpringJUnit4ClassRunner</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@SpringBootTest</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">@Import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SwaggerConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Application</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Swagger2MarkupTest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    @Autowired</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> WebApplicationContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> context;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> MockMvc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> mockMvc;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    @Before</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> setUp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mockMvc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> MockMvcBuilders.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">webAppContextSetup(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">context)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">build();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    @Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> convertSwaggerToAsciiDoc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">throws</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> Exception</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">        this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mockMvc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">perform(get(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;/documentation/v2/api-docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            .accept(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">MediaType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">APPLICATION_JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            .andDo(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Swagger2MarkupResultHandler</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                .outputDirectory(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;src/docs/asciidoc/generated&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">build())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            .andExpect(status()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">isOk());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>如此生成了 adoc</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h2 id="使用-asciidoctor-插件生成文档" tabindex="-1">使用 asciidoctor 插件生成文档 <a class="header-anchor" href="#使用-asciidoctor-插件生成文档" aria-label="Permalink to &quot;使用 asciidoctor 插件生成文档&quot;">​</a></h2><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    id </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;org.asciidoctor.jvm.convert&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> version </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2.3.0&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    id </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;org.asciidoctor.jvm.pdf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> version </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2.3.0&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">asciidoctor {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    sourceDir file(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;src/docs/asciidoc/generated&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    sources {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        include </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;*.adoc&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    outputDir file(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;build/docs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>命令行执行</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">gradle</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> asciidoctor</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">gradle</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> asciidoctorPdf</span></span></code></pre></div><p>就生成了文档。</p><p>现在生成的文档是默认的几个，我们可以根据生辰改的 adoc 进行定制。</p><hr><ul><li><a href="http://swagger2markup.github.io/swagger2markup/1.3.3" target="_blank" rel="noreferrer">Swagger2Markup</a></li><li><a href="https://springfox.github.io/springfox/docs/snapshot/" target="_blank" rel="noreferrer">Springfox Doc</a></li><li><a href="http://springfox.github.io/springfox/" target="_blank" rel="noreferrer">Springfox Home</a></li><li><a href="https://github.com/springfox/springfox-demos" target="_blank" rel="noreferrer">Springfox Demo</a></li><li><a href="https://github.com/asciidoctor/asciidoctor-gradle-examples" target="_blank" rel="noreferrer">GitHub asciidoctor-gradle-examples</a></li><li><a href="https://asciidoctor.org/docs/asciidoctor-gradle-plugin/" target="_blank" rel="noreferrer">asciidoctor-gradle-plugin</a></li></ul>`,24)]))}const A=i(t,[["render",h]]);export{o as __pageData,A as default};
