import{_ as s,a as i,af as e,o as l}from"./chunks/framework.C87LdZyP.js";const t="/assets/870996661078666.CUdDWfAH.png",n="/assets/870991125335666.C_wTlNqz.png",p="/assets/871562353321000.jyH_r6c8.png",r="/assets/871510708756041.uSOf-DY1.png",h="/assets/871616388948916.BVf6e4uk.png",o="/assets/871760495731791.D1iPfWfV.png",d="/assets/871896533609250.BjK4CV-J.png",c="/assets/871904680859541.Btb1EppN.png",k="/assets/872027029295958.DT2-0N1U.png",_=JSON.parse('{"title":"Databerry: 用于构建自定义 LLM 代理的无代码平台","description":"","frontmatter":{"title":"Databerry: 用于构建自定义 LLM 代理的无代码平台","date":"2023-03-27T00:00:00.000Z","tags":["ai","ml"],"category":["AI"]},"headers":[],"relativePath":"posts/2023/03/2023-03-27-databerry.md","filePath":"posts/2023/03/2023-03-27-databerry.md","lastUpdated":1718175555000}'),g={name:"posts/2023/03/2023-03-27-databerry.md"};function u(b,a,m,y,F,D){return l(),i("div",null,a[0]||(a[0]=[e('<blockquote><p>还是基于 LangChain 和 ChatGPT 的知识库的开源解决方案，而且界面可用性和商业化程度越来越高。 开源的同时，Databerry 也提供了 SaaS 服务。</p></blockquote><p><img src="'+t+'" alt="Databerry Logo"></p><p>Databerry提供了一个用户友好的解决方案，无需任何技术知识即可在您的个人数据上快速设置语义搜索系统。</p><p><img src="'+n+'" alt=""></p><p>首先先看预览：</p><p>同样是找了几篇国务院新闻报道，作为本地知识库进行提问：</p><p><img src="'+p+'" alt=""></p><p>提问效果还是很不错的：</p><p><img src="'+r+'" alt=""></p><p>还支持生成机器人代码，嵌入到你的网站里面：</p><p><img src="'+h+'" alt=""></p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p>SaaS 服务的版本支持多种客户端集成：</p><p><img src="'+o+`" alt=""></p><p>当然就是刚才展示的嵌入到网站之中的聊天对话框。</p><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li>从任何地方加载数据： <ul><li>文本</li><li>网页</li><li>文件 <ul><li>Word</li><li>Excel</li><li>Powerpoint</li><li>PDF</li><li>Markdown</li><li>Plain Text</li></ul></li><li>网站（即将推出）</li><li>Notion（即将推出）</li><li>Airtable（即将推出）</li></ul></li><li>无代码：用于管理数据存储和与数据聊天的用户友好界面</li><li>用于查询数据的安全 API</li><li>自动同步数据源（即将推出）</li><li>自动为每个数据存储生成一个 ChatGPT 插件</li></ul><h2 id="语义搜索规范" tabindex="-1">语义搜索规范 <a class="header-anchor" href="#语义搜索规范" aria-label="Permalink to &quot;语义搜索规范&quot;">​</a></h2><ul><li>矢量数据库：<code>Qdrant</code></li><li>Embedding：Openai 的 <code>text-embedding-ada-002</code></li><li>块大小：256 个令牌</li></ul><h2 id="技术栈" tabindex="-1">技术栈 <a class="header-anchor" href="#技术栈" aria-label="Permalink to &quot;技术栈&quot;">​</a></h2><ul><li>Next.js</li><li>Joy UI</li><li>LangchainJS</li><li>PostgreSQL</li><li>Prisma</li><li>Qdrant</li></ul><h2 id="本地运行" tabindex="-1">本地运行 <a class="header-anchor" href="#本地运行" aria-label="Permalink to &quot;本地运行&quot;">​</a></h2><p>本地运行项目的最小依赖：</p><ul><li>Node.js v18</li><li>Postgres Database</li><li>Redis</li><li>Qdrant</li><li>GitHub App (NextAuth)</li><li>Email Provider (NextAuth)</li><li>OpenAI API Key</li><li>AWS S3 Credentials</li></ul><p>可通过下面命令运行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Create .env.local</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> .env.example</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> .env.local</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Generate DB tables</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> prisma:migrate:dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Run server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Run worker process</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> worker:datasource-loader</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># or pnpm dev:all</span></span></code></pre></div><h2 id="容器运行" tabindex="-1">容器运行 <a class="header-anchor" href="#容器运行" aria-label="Permalink to &quot;容器运行&quot;">​</a></h2><p>如果想快速体验，可以使用容器：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> .dev/databerry</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker:compose</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># create .dev/databerry/app.env</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> .dev/databerry/app.env.example</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> .dev/databerry/app.env</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># create s3 dev bucker</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># go to http://127.0.0.1:9090 and create bucket databerry-dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># set bucket access policy to public</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># might need to add 127.0.0.1 minio to /etc/hosts in order to access public s3 files through http://minio...</span></span></code></pre></div><h2 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-label="Permalink to &quot;如何使用&quot;">​</a></h2><h3 id="创建数据库" tabindex="-1">创建数据库 <a class="header-anchor" href="#创建数据库" aria-label="Permalink to &quot;创建数据库&quot;">​</a></h3><p><img src="`+d+'" alt=""></p><h3 id="创建-agent" tabindex="-1">创建 Agent <a class="header-anchor" href="#创建-agent" aria-label="Permalink to &quot;创建 Agent&quot;">​</a></h3><p><img src="'+c+'" alt=""></p><h2 id="架构分析" tabindex="-1">架构分析 <a class="header-anchor" href="#架构分析" aria-label="Permalink to &quot;架构分析&quot;">​</a></h2><p>Databerry 同样也是基于 LangChain + LLM + Vector Store 的应用。</p><p><img src="'+k+'" alt=""></p><h2 id="项目地址" tabindex="-1">项目地址 <a class="header-anchor" href="#项目地址" aria-label="Permalink to &quot;项目地址&quot;">​</a></h2><p>Github 地址：</p><ul><li><a href="https://github.com/gmpetrov/databerry" target="_blank" rel="noreferrer">https://github.com/gmpetrov/databerry</a></li></ul><p>官网：</p><ul><li><a href="https://app.databerry.ai/" target="_blank" rel="noreferrer">https://app.databerry.ai/</a></li></ul><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>',44)]))}const f=s(g,[["render",u]]);export{_ as __pageData,f as default};
