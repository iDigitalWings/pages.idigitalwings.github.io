import{_ as p,a as t,af as a,o}from"./chunks/framework.C87LdZyP.js";const i="/assets/137470443484541.DL1rhePJ.png",e="/assets/137564044458750.Dgj6pWs1.png",r="/assets/70466713406875.cfu_nfju.png",c="/assets/138958304351041.CykcjRJr.png",n="/assets/138700814763375.DOJ0jjQp.png",l="/assets/70551941576125.DP-z5dqX.png",m="/assets/70639093420333.DROJcrlq.png",g="/assets/70588028076041.D80NIMrJ.png",d="/assets/70616804067541.U1GLKHTv.png",_="/assets/70759155311916.DVmXmYfV.png",h="/assets/70864823773750.CmO3ykpI.png",u="/assets/70901540534958.Cw2L1YER.png",q="/assets/139689295516416.D4lzuwmZ.png",b="/assets/71024611540041.CD5H68uM.png",f="/assets/71078026425250.e04LgUpE.png",k="/assets/71094324443625.BfcvJQtG.png",A="/assets/71159306739166.Dfq4Hv3b.png",I="/assets/71225075561250.O9RoROsl.png",P="/assets/71305675950666.BasNY6_q.png",D="/assets/71356710809416.B47pFJhh.png",x="/assets/71411606086250.DVqEYkjI.png",C="/assets/71703293160875.C1wp8B47.png",B="/assets/71731893784583.CSUHSL7X.png",v="/assets/71789166963250.C8uQWpEN.png",y="/assets/71823796716916.B4haPgZ9.png",N="/assets/71932912474708.CuGfBk8h.png",E="/assets/72027029777208.CNHNuJE6.png",H="/assets/72109488963791.Dcfpotki.png",J="/assets/72166260385875.cfDE33mU.png",O="/assets/72292029178291.BkqgvtOK.png",R="/assets/72466730842958.BPiSmTNl.png",T="/assets/72691987541875.BpRD4f49.png",j="/assets/72760020492166.D3hik_7i.png",S="/assets/72853823138250.4D-HyqTo.png",G="/assets/73019995309833.6-Tih-Hu.png",F="/assets/73306741712750.K712thX0.png",L="/assets/73473840027041.CPVjR4dH.png",U="/assets/74324844629833.CS1ovCrz.png",Q=JSON.parse('{"title":"人工智能案例研究：飞书多维表格对AIGC的集成","description":"","frontmatter":{"title":"人工智能案例研究：飞书多维表格对AIGC的集成","date":"2024-06-04T00:00:00.000Z","isTop":true,"tags":["ai","llm"],"category":["ai"]},"headers":[],"relativePath":"topics/aigc-cases/articles/2024-06-04-feishu-dashboard-ai.md","filePath":"topics/aigc-cases/articles/2024-06-04-feishu-dashboard-ai.md","lastUpdated":1721793862000}'),V={name:"topics/aigc-cases/articles/2024-06-04-feishu-dashboard-ai.md"};function w(z,s,K,M,X,Y){return o(),t("div",null,s[0]||(s[0]=[a('<div class="admonition abstract"><p class="admonition-title">abstract</p><p>越来越多的应用都接入了大模型，并且和自己的生态场景进行了融合，而不仅仅是停留在大语言的<code>「说」</code>， 慢慢的让大模型在软件上有了更多的<code>「做」</code>。</p></div><p>今天以飞书为例，看看多维表格怎么和 AI 结合起来。</p><h2 id="关于飞书" tabindex="-1">关于飞书 <a class="header-anchor" href="#关于飞书" aria-label="Permalink to &quot;关于飞书&quot;">​</a></h2><p>飞书是字节跳动下的一款企业写作和管理平台。整合了企业内部通用的很多功能，包含：</p><ul><li>即时沟通</li><li>日历</li><li>音视频会议</li><li>文档</li><li>云盘 等。</li></ul><p>同时还做了低代码平台的应用生态，上面有ORK、招聘等各种应用。</p><p>飞书是一款 2B 的产品，也就是面向企业而非个人，他的同类产品是<code>钉钉</code>和<code>企业微信</code>。 前两年飞书做了很多的广告，但是好像效果并不到，很多人吐槽飞书团队用 2C 的方式打造 2B 的产品， 但无论如何，他的文档功能在同类产品中还是好评多与差评。</p><h2 id="多维表格" tabindex="-1">多维表格 <a class="header-anchor" href="#多维表格" aria-label="Permalink to &quot;多维表格&quot;">​</a></h2><p>和钉钉、企业微信一样，飞书文档支持常见的 Office 格式，当然也少不了我们今天介绍的主角：多维表格。</p><p>多维表格比较典型的产品诸如 AirTable、Monday、Asana、Notion 等，算是无代码的一个领域了。</p><p><img src="'+i+'" alt="Monday 多维表格"></p><p>简单来说，多维表格就是 <strong>Excel 和 数据库表的结合</strong>，有数据表表的类型约束，又能快速维护和统计数据。</p><p><img src="'+e+'" alt="飞书多维表格"></p><h2 id="ai-和多维表格" tabindex="-1">AI 和多维表格 <a class="header-anchor" href="#ai-和多维表格" aria-label="Permalink to &quot;AI 和多维表格&quot;">​</a></h2><p>下面我们以飞书为例，一步步的看看大语言模型如何和多维表格结合起来。</p><h3 id="创建表格" tabindex="-1">创建表格 <a class="header-anchor" href="#创建表格" aria-label="Permalink to &quot;创建表格&quot;">​</a></h3><p>第一步就是创建表格，在创建表格的时候，我们就能看到 AI 的影子：</p><ul><li>一个 <code>Build the base with Faye</code> 的超链接按钮。</li></ul><p><img src="'+r+'" alt="创建表格"></p><div class="tip custom-block"><p class="custom-block-title">视觉钩子</p><p>我们再设计产品的时候不要忽视视觉对用户操作的影响。 几乎所有的公司都用了蓝、紫等炫酷的色彩，和简单独立设计的形状来区别人工智能，这样在传统应用中嵌入AI能力的时候，可以让用户一下子识别到。</p></div><p>下面我接单罗列几个细节：</p><p><img src="'+c+'" alt="软件中AI的视觉-细节"></p><p>以 某 PDF 阅读器为例，看下整体效果：</p><p><img src="'+n+'" alt=""></p><h3 id="提示词" tabindex="-1">提示词 <a class="header-anchor" href="#提示词" aria-label="Permalink to &quot;提示词&quot;">​</a></h3><p>好了，回到我们的主题，放 Faye AI 帮我们创建多维表格的下一步，就是我们熟悉的提示词（Prompt）， 鉴于现在的大模型越来越「聪明」，我们也不用考虑各种提示词技巧，直接把你想说的告诉他就行。</p><p>比如我想做一个表格，统计所有人的假期情况，什么时候请假、加班、调休，还有多少天年假等？</p><p>直接告诉他我想要的列，就让他自由发挥了。</p><p><img src="'+l+'" alt="数据描述"></p><p>经过漫长（也不算很漫长）的等待，看到表格自动生成了，还填成了几个数据。</p><p><img src="'+m+'" alt="生成表结构"></p><p>接着趁我没反应过来，它又自动的给这个表格生成了仪表盘，</p><p><img src="'+g+'" alt="生成仪表盘"></p><p>效果还行，点击 <code>Apply</code> 确认 AI 帮我生成的表格和仪表盘。</p><p><img src="'+d+'" alt="Apply"></p><h3 id="生成字段选项" tabindex="-1">生成字段选项 <a class="header-anchor" href="#生成字段选项" aria-label="Permalink to &quot;生成字段选项&quot;">​</a></h3><p>我们发现<code>类型</code> 这一列是节假日名称，我们想让它记录请假或者加班类型。</p><p><img src="'+_+'" alt="类型调整"></p><p>编写提示语如下：</p><blockquote><p>生成假期的类型：年假、加班为绿色，请假、调休为黄色</p></blockquote><p><img src="'+h+'" alt=""></p><p>等待生成 ...</p><p><img src="'+u+'" alt=""></p><p>好不容易等进度到了 100%，但是结果大跌眼镜，它把所有的选型都清空了。简单更换提示语，连续试了好几次都是同样的结果。</p><p><img src="'+q+'" alt=""></p><p>好在内容不多，我手动编辑也很方便：</p><p><img src="'+b+'" alt=""></p><h3 id="填充数据" tabindex="-1">填充数据 <a class="header-anchor" href="#填充数据" aria-label="Permalink to &quot;填充数据&quot;">​</a></h3><p>接着为了做测试，我让 AI 帮我填充一下数据：</p><p><img src="'+f+'" alt=""></p><p>AI ing，继续等待：</p><p><img src="'+k+'" alt=""></p><p>跑完了，但是行数没变，没有填充新数据，老的数据也填充的不对。</p><p><img src="'+A+'" alt=""></p><p>手动创建行，修改提示语，继续：</p><p><img src="'+I+'" alt=""></p><p>还是不对：</p><p><img src="'+P+'" alt=""></p><p>难道是因为第一列是固定列的原因？新增一列试试：</p><p><img src="'+D+'" alt=""></p><p>结果还是不对，</p><p><img src="'+x+'" alt=""></p><p>提示语更加明确一点儿：</p><p><img src="'+C+'" alt=""></p><p>这个随机的能力有点儿差：</p><p><img src="'+B+'" alt=""></p><h3 id="新建人物表" tabindex="-1">新建人物表 <a class="header-anchor" href="#新建人物表" aria-label="Permalink to &quot;新建人物表&quot;">​</a></h3><p>上面填充行数据的方法有点行不通，我新创建一张表：</p><p><img src="'+v+'" alt=""></p><p>创建是创建成功了，</p><p><img src="'+y+'" alt=""></p><p>但是只有九条数据：</p><p><img src="'+N+'" alt=""></p><p>尝试补充数据，已然效果不好。</p><p><img src="'+E+'" alt=""></p><p>在数据点一个的 AI 入口试试：</p><p><img src="'+H+'" alt=""></p><p><img src="'+J+'" alt=""></p><p>虽然只生成了十来条数据，但是也证明了方式可用。</p><p><img src="'+O+'" alt=""></p><h3 id="ai填充日期" tabindex="-1">AI填充日期 <a class="header-anchor" href="#ai填充日期" aria-label="Permalink to &quot;AI填充日期&quot;">​</a></h3><p>让 AI 填充日期：</p><p><img src="'+R+'" alt=""></p><h3 id="填充引用列" tabindex="-1">填充引用列 <a class="header-anchor" href="#填充引用列" aria-label="Permalink to &quot;填充引用列&quot;">​</a></h3><p>现在回到第一个请假表，编辑下拉属性，引用刚刚生成的人物。</p><p><img src="'+T+'" alt=""></p><p>这次勾选已有的数据，让AI填充数据：</p><p><img src="'+j+'" alt=""></p><p>填充了一些数据，不过不太完美，有很多空数据：</p><p><img src="'+S+'" alt=""></p><p>接着又试了几次，填充效果都不好，随机效果也不好，可能是随机和填充这种场景对于别人来说是一个伪需求，所以模型没有照顾到？</p><blockquote><p>随机填充数据，必选 随机填充数据，不要孙悟空</p></blockquote><p><img src="'+G+'" alt=""></p><h3 id="逻辑计算" tabindex="-1">逻辑计算 <a class="header-anchor" href="#逻辑计算" aria-label="Permalink to &quot;逻辑计算&quot;">​</a></h3><p>手动补充前面几列数据，试一下 AI 逻辑计算，让<code>请假</code>的天数为负数，<code>年假</code>的天数为正数。</p><blockquote><p>类型为年假和加班填 1， 调休和休假 填 -1 或者 -0.5</p></blockquote><p>好家伙，全是 0</p><p><img src="'+F+'" alt=""></p><p>又试了几次，效果还是不好，干脆直接编辑公式吧。</p><blockquote><p>SWITCH([类型],&quot;年假&quot;,1，&quot;加班&quot;，1，&quot;休假&quot;，-0.5，&quot;调休&quot;，-1)</p></blockquote><p><img src="'+L+'" alt=""></p><h3 id="ai-仪表盘" tabindex="-1">AI 仪表盘 <a class="header-anchor" href="#ai-仪表盘" aria-label="Permalink to &quot;AI 仪表盘&quot;">​</a></h3><p>用到现在，我发现对于简单的需求来说，AI 并没有给我节约时间，反而<strong>浪费了不少时间</strong>。</p><p>最后我自己手动增加几个图，生成了个简单的仪表盘。</p><p><img src="'+U+'" alt=""></p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>折腾了好一会儿，飞书多维表格 AI 个人觉得好用的地方有两个：</p><ul><li>根据描述生成<strong>初步</strong>表格结构</li><li>自动生成<strong>初步</strong>的仪表盘</li></ul><p>这时 AI 就像是一个产品经理，给你初步设计一下有哪些字段，大概可以怎么可视化。 还是能节约不少时间。</p><p>后面微调和修正表格和仪表盘，尽量不要用 AI 了，手动效率会更高一些。</p><p>不过站在产品的角度看一下，飞书表格 AIGC 用户的<strong>使用路径</strong>还是很短的， 同时对用户来说也没有很强的<strong>侵入性</strong>， 就像一个付费或者高级功能，我不用，就对我没影响，</p><p>如果我们要打造 <strong>生成式AI原生应用</strong>，那么势必在流程上会对AI的使用会嵌入更深， 当然也需要产品研发和设计上对相关场景进行根深的打磨，不能像我今天展示的那样，<strong>三次尽兴而来，两次败兴而归</strong>。</p><hr><div style="text-align:center;color:#00000099;font-size:14px;">END</div>',114)]))}const W=p(V,[["render",w]]);export{Q as __pageData,W as default};
