import{_ as i,a,af as t,o as e}from"./chunks/framework.C87LdZyP.js";const F=JSON.parse('{"title":"深入 Pulumi - 2","description":"","frontmatter":{"title":"深入 Pulumi - 2","date":"2022-04-28T00:00:00.000Z","tags":["IaC"],"category":["运维"]},"headers":[],"relativePath":"posts/2022/04/2022-04-28-dive-into-pulumi-2.md","filePath":"posts/2022/04/2022-04-28-dive-into-pulumi-2.md","lastUpdated":1718173059000}'),l={name:"posts/2022/04/2022-04-28-dive-into-pulumi-2.md"};function p(h,s,n,k,d,c){return e(),a("div",null,s[0]||(s[0]=[t(`<p>Pulumi 是一个现代的<code>基础设施即代码</code>平台。Pulumi 充分利用现有的编程语言通过 Pulumi SDK 来管理云资源。</p><h2 id="stack" tabindex="-1">Stack <a class="header-anchor" href="#stack" aria-label="Permalink to &quot;Stack&quot;">​</a></h2><p>每个 Pulumi 程序最终都会部署到一个 Stack 中。Stack 是 Pulumi 程序一个独立可配置的实例。 Stack 通常表示一个不同的开发阶段（dev、test、prod）或者代码分支（feat-xx,fix-xx）。</p><p>一个项目可以拥有任意数量的 Stack，每个堆栈对应一个堆栈文件。</p><h3 id="创建-stack" tabindex="-1">创建 Stack <a class="header-anchor" href="#创建-stack" aria-label="Permalink to &quot;创建 Stack&quot;">​</a></h3><p>使用 <code>pulumi stack init &lt;stackName&gt;</code> 来创建一个 Stack。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> test</span></span></code></pre></div><p>查看 Stack：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">   LAST</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> UPDATE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  RESOURCE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> COUNT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  URL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> days</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ago</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               https://app.pulumi.com/xxx/dev</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  n/a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          n/a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">             https://app.pulumi.com/xxx/test</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>test*</code> *号表示当前 active 的堆栈。</p></div><p>创建Stack 之后默认不会生成配置文件，可以使用 <code>pulumi config</code> 来创建配置文件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> useLoadBalancer</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span></span></code></pre></div><h3 id="选择-stack" tabindex="-1">选择 Stack <a class="header-anchor" href="#选择-stack" aria-label="Permalink to &quot;选择 Stack&quot;">​</a></h3><p>pulumi 的<code>config</code>，<code>preview</code>，<code>update</code>，<code>destory</code>等命令都是操作当前活动的 Stack。可以使用 <code>pulumi stack select</code> 来选择当前 active 的 Stack。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> select</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dev</span></span></code></pre></div><p>查看 Stack：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  LAST</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> UPDATE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  RESOURCE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> COUNT</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  URL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">dev*</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">  2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> days</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ago</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">   0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">               https://app.pulumi.com//dev</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  n/a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          n/a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">             https://app.pulumi.com//test</span></span></code></pre></div><p>可以看到当前的 active 是 <code>dev</code>。</p><h3 id="update-plan-更新计划" tabindex="-1">Update Plan (更新计划) <a class="header-anchor" href="#update-plan-更新计划" aria-label="Permalink to &quot;Update Plan (更新计划)&quot;">​</a></h3><p>当环境变量<code>PULUMI_EXPERIMENTAL</code>设置为 true 的时候，可以体验 Update Plan 功能。</p><p>更新计划可以预览你当前堆栈的更新。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> preview</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --save-plan=plan.json</span></span></code></pre></div><h3 id="更新-stack" tabindex="-1">更新 Stack <a class="header-anchor" href="#更新-stack" aria-label="Permalink to &quot;更新 Stack&quot;">​</a></h3><p>使用 <code>pulumi up</code> 更新当前的堆栈。</p><p>使用 <code>pulumi up --plan=plan.jsos</code> 来更新之前保存的更新计划的内容。</p><h3 id="查看-stack" tabindex="-1">查看 Stack <a class="header-anchor" href="#查看-stack" aria-label="Permalink to &quot;查看 Stack&quot;">​</a></h3><p>使用 <code>pulumi stack</code> 查看 Stack 信息：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Current</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> dev:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    Owner:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> xxx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    Last</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> updated:</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> days</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ago</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (2022-05-08 </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">17:28:43.442022</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> +0800</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> CST</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    Pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> version:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v3.32.1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Current</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> resources</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (0):</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">    No</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> resources</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> currently</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">More</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> information</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> at:</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://app.pulumi.com/xxx/dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Use</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack select\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> change</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack ls\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> lists</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> known</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ones</span></span></code></pre></div><h3 id="stack-标签" tabindex="-1">Stack 标签 <a class="header-anchor" href="#stack-标签" aria-label="Permalink to &quot;Stack 标签&quot;">​</a></h3><p>我们可以通过标签的形式为 Stack 添加元数据。</p><p>Pulumi 每次更新堆栈都会自动分配和更新一组内置标签，包含：</p><ul><li><code>pulumi:project</code></li><li><code>pulumi:runtime</code></li><li><code>pulumi:description</code></li><li><code>gitHub:owner</code></li><li><code>gitHub:repo</code></li><li><code>vcs:owner</code></li><li><code>vcs:repo</code></li><li><code>vcs:kind</code> 我们定义标签的时候，尽量不要和系统内置的标签前缀重复。</li></ul><p>可以通过 <code>pulumi stack tag ls</code> 查看标签。</p><p>使用 <code>pulumi stack tag set &lt;name&gt; &lt;value&gt;</code> 设置标签，使用 <code>pulumi stack tag rm &lt;name&gt;</code> 来移除标签。</p><h3 id="stack-输出" tabindex="-1">Stack 输出 <a class="header-anchor" href="#stack-输出" aria-label="Permalink to &quot;Stack 输出&quot;">​</a></h3><p>我们在程序中可以将有用的值作为输出（Stack Output），通过 CLI 获取这些输出。</p><p>比如： 资源 ID、IP 地址、DNS 等重要信息。</p><p>在前面的文章中已经展示了如何定义和查看输出：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> let</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> resource.url;</span></span></code></pre></div><p>然后通过<code>pulumi stack output url</code>获取。</p><p>如果要查看完整的输出，而不是某个值，可以通过<code>--json</code>参数：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stack</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> output</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --json</span></span></code></pre></div><h3 id="导入导出" tabindex="-1">导入导出 <a class="header-anchor" href="#导入导出" aria-label="Permalink to &quot;导入导出&quot;">​</a></h3><p>导出当前堆栈关联的原始数据：<code>pulumi stack export --file stack.json</code></p><p>导入堆栈数据：<code>pulumi stack import --file stack.json</code></p><h3 id="销毁-destroy" tabindex="-1">销毁 (Destroy) <a class="header-anchor" href="#销毁-destroy" aria-label="Permalink to &quot;销毁 (Destroy)&quot;">​</a></h3><p>如果Stack 无用的话，可以使用 <code>pulumi stack destroy</code> 来销毁堆栈，移除对应的资源。</p><h3 id="删除" tabindex="-1">删除 <a class="header-anchor" href="#删除" aria-label="Permalink to &quot;删除&quot;">​</a></h3><p><code>pulumi stack rm</code> 可以删除已经没有资源的堆栈，同时会删除堆栈的历史记录和配置文件。</p><p>如果要强制删除（可能会造成资源孤立），可以使用<code>pulumi stack rm --force</code> （请遵循良好的规范，先 destroy，再 rm）。</p><hr><ul><li><a href="https://www.pulumi.com/registry/packages/kubernetes/api-docs/" target="_blank" rel="noreferrer">Pulumi Node.js API</a></li><li><a href="https://github.com/pulumi/pulumi-kubernetes" target="_blank" rel="noreferrer">Pulumi Kubernetes</a></li><li><a href="https://www.pulumi.com/" target="_blank" rel="noreferrer">Pulumi 官网</a></li></ul>`,52)]))}const o=i(l,[["render",p]]);export{F as __pageData,o as default};
