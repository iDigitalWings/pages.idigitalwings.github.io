import{_ as c,a as u,af as t,o as m}from"./chunks/framework.C87LdZyP.js";const e="/assets/Scrum-Poster-Small.jbHhsYxW.png",a="/assets/Product-Owner.klgz7846.jpg",S="/assets/Meet-the-Scrum-Team_0.CsVvXLvI.jpg",p="/assets/Commitments.CQR3sBA9.jpg",k=JSON.parse('{"title":"Scrum 指南的 4 个关键变化告诉我们关于 Scrum 的哪些内容","description":"","frontmatter":{"title":"Scrum 指南的 4 个关键变化告诉我们关于 Scrum 的哪些内容","date":"2022-07-28T00:00:00.000Z","tags":["scrum"],"category":["Scrum"]},"headers":[],"relativePath":"posts/2022/07/2022-07-28-what-4-key-changes-scrum-guide-tell-us-about-scrum.md","filePath":"posts/2022/07/2022-07-28-what-4-key-changes-scrum-guide-tell-us-about-scrum.md","lastUpdated":1718173059000}'),s={name:"posts/2022/07/2022-07-28-what-4-key-changes-scrum-guide-tell-us-about-scrum.md"};function o(i,r,l,n,h,d){return m(),u("div",null,r[0]||(r[0]=[t('<p>你对新的 Scrum 指南感到兴奋吗？我们当然是，如果只是因为每个版本都更清楚地说明 Scrum 的<em>真正</em>含义——这也是我们的使命。</p><p>Scrum 框架本身也受到经验主义的影响，11 月 18 日发布的<a href="https://scrumguides.org" target="_blank" rel="noreferrer">新版 Scrum 指南</a>就证明了这一点。其创建者 Ken Schwaber 和 Jeff Sutherland 使用每个增量来改进 Scrum 框架的描述方式以及团队成员和组织应该关注。作为 Scrum.org 的管理者，很高兴关注导致此版本发布的讨论，并通过我们的反馈为它做出贡献。</p><p>在这篇文章中，我们来看看四个最重要的变化以及它们的产生 <em>原因。</em> 虽然谈论所有细节的语言变化很诱人，但我们相信了解底层模式以及它们如何强化 Scrum 一直以来的意义会更有帮助。</p><p><img src="'+e+'" alt="Scrum 框架"></p><p>我们更新了 Scrum 框架海报以匹配新的 Scrum 指南。在此处下载免费 PDF。</p><h3 id="_1-scrum-团队致力于单一的产品目标" tabindex="-1">1. Scrum 团队致力于单一的产品目标 <a class="header-anchor" href="#_1-scrum-团队致力于单一的产品目标" aria-label="Permalink to &quot;1. Scrum 团队致力于单一的产品目标&quot;">​</a></h3><p>如果不关注有价值的结果，Scrum 就毫无意义。情况一直如此。与此同时，许多组织和团队继续从仅限于 IT 部门的机械角度来处理 Scrum。他们更关注角色、事件和工件，而不是 Scrum 框架交付有价值成果的总体目的。更多的注意力集中在 Scrum 的载体上，而不是它应该带你去的地方。</p><blockquote><p>“更多的注意力集中在 Scrum 的载体上，而不是它应该带你去哪里。”</p></blockquote><p>这就是为什么明确而单一的目标如此重要的原因。目标赋予 Scrum 团队的工作以意义和目的。目标还提供重点，并作为决策依据的试金石。这在 Scrum 指南如何处理 Sprint 目标中已经很清楚了。当 Scrum 团队对当前的 Sprint 没有单一目标时，目标就隐含地变成“完成 Sprint Backlog 上的所有工作”。Scrum 指南从未打算将 Sprint Backlog 视为项目的静态选择，一旦在 Sprint 计划期间选择，就永远不会在 Sprint 期间更改。相反; 在复杂的工作和复杂的环境中，随着洞察力的出现、问题的发现和疏忽的出现，Sprint 中需要完成的工作范围可能每天都在变化。没有一个明确而单一的 Sprint 目标，Scrum 团队如何可能决定什么是重要的，什么不重要。如果没有单一的目标，复杂的工作将是临时的并且压力很大。</p><p>这就是为什么新的 Scrum 指南更加强调清晰和单一的目标，这些目标捕捉了工作的价值。虽然它已经包含了一个单一的“Sprint 目标”，但它现在（正式地）添加了一个 Scrum 团队承诺的单一“产品目标”。</p><p><img src="'+a+'" alt="产品目标"> Thea Schukken 的插图</p><p>为了关注产品待办列表上的内容以及顺序，Scrum 团队致力于一个<em>单一的、高级的和长期的</em>产品目标，称为“产品目标”。无论有多少 Scrum 团队在一个产品上工作，一次只能有一个“产品目标”。如果实现或放弃了该目标，则会制定一个新目标。由 Scrum 团队和他们的利益相关者来发现捕获产品目标的最佳方式，使他们能够专注于工作的价值和重要性。显然，产品目标可能会随着团队努力实现它而发展——它并不是一个静态目标。</p><p>我相信这是对 Scrum 指南的极好补充，有助于将优秀的 Scrum 团队和优秀的产品负责人——他们倾向于以明确的目标工作——与他们更机械化的同行区分开来。许多 Scrum 团队也完全有可能在这个要求上遇到困难。在许多组织和环境中，共享和单一目标的价值及其对重点、士气和价值的影响是不被理解的。通过强调目标——Sprint 目标和产品目标——更加强烈地作为一种要求，而不是一个可有可无的东西，Scrum 指南可以使更多的组织障碍变得可见。</p><h3 id="_2-从角色到责任" tabindex="-1">2. 从角色到责任 <a class="header-anchor" href="#_2-从角色到责任" aria-label="Permalink to &quot;2. 从角色到责任&quot;">​</a></h3><p>多年来，Scrum 框架的角色慢慢变成了常见的职位。在 LinkedIn 上进行简单的搜索会产生数十万人以“Scrum Master”或“产品负责人”为职称。这是一种意义上的胜利，另一种意义上的失败。</p><p>一个常见的观察结果，也是我们也做出的观察结果是，对职位的关注通常会分散他们的责任，正如 Scrum 指南所期望的那样。许多 Scrum Master 整整一周都在为他们的各个 Scrum 团队提供 Scrum 活动，仅此而已。许多产品负责人在一周内将利益相关者的订单转化为需求，而没有任何授权对产品或其战略做出决策。痛苦的现实是，他们实际上并不是 Scrum Master 和产品负责人。他们只是假装——由他们自己的选择，因为他们不知道更好，或者因为他们没有被他们的组织启用。</p><p><img src="'+S+'" alt="认识 Scrum 团队"> Thea Schukken 的插图</p><p>新的 Scrum 指南试图通过引用“Accountabilities”而不是“Roles”来纠正这个问题。这进一步强调了 Scrum 框架不是职称的集合，而是以经验的方式开发产品的责任的集合。不管你的正式职位是“Scrum Master”、“项目经理”、“开发人员”还是“专业小丑”——如果你尊重 Scrum Master 的责任，那么你就是 Scrum 框架.</p><blockquote><p>“这进一步强调了 Scrum 框架不是职称的集合，而是以经验的方式开发产品的责任的集合。”</p></blockquote><p>我相信这是一个很好的改变，它强调了 Scrum Master、产品负责人和开发人员应该把时间花在什么上面。也许它也让我们停止讨论 Scrum Master 是否可以成为开发人员，或者项目经理是否可以充当产品负责人。</p><h3 id="三、坚持经验主义的三项承诺" tabindex="-1">三、坚持经验主义的三项承诺 <a class="header-anchor" href="#三、坚持经验主义的三项承诺" aria-label="Permalink to &quot;三、坚持经验主义的三项承诺&quot;">​</a></h3><p>我之前描述的关于 Scrum 的机械观点也导致了缺乏承诺。因为它只关注 Scrum 的机制——它的角色、事件和工件——并且不为明确和单一的目标而烦恼，所以它失去了在复杂环境中运作的团队内部和团队之间创建凝聚力和自主性的最强大方法. 就其本质而言，复杂的工作是不可预测的。尽管许多机械倾向的组织仍在尝试这样做，但您不能简单地向团队提供详细的规范列表并期望获得成功的结果。这种命令和控制的管理风格将创造力、专业知识和经验限制在经理的身上，他们决定了需要由谁来完成。</p><p><img src="'+p+'" alt="三项承诺"> Thea Schukken 的插图</p><p>Scrum 框架，在其所有的迭代中，一直都是为了让从事这项工作的人能够控制这项工作。这将潜在的创造力、专业知识和经验扩展到从事这项工作的每个人。这种程度的自治自然需要完全不同的管理风格。在这些高度自治的环境中创建凝聚力的一种方法是通过明确的、单一的目标来指导工作，而无需详细说明工作——这取决于专业人士的经验。</p><blockquote><p>“在所有迭代中，Scrum 框架一直致力于让从事这项工作的人能够控制这项工作。”</p></blockquote><p>新的 Scrum 指南明确提出了三个目标、三个对这些目标的承诺以及三种支持经验主义的方法：</p><ol><li><strong>Scrum 团队在</strong>每个 Sprint 开始时就一个 Sprint 目标达成一致，以指导他们在 Sprint 期间需要做出的工作和决策。从事这项工作的人——开发人员——致力于为实现这一目标而共同努力。为此所需的工作会在 Sprint Backlog 中不断更新和透明化。</li><li><strong>Scrum 团队同意一个单一的产品目标</strong>来指导他们在产品开发过程中需要做出的工作和决策。为此所需的工作以及为更新它而做出的决定在产品待办列表中持续透明。</li><li><strong>Scrum 团队就完成的定义达成一致，该定义</strong>描述了他们为向利益相关者交付高质量增量而遵守的质量指南。开发人员承诺遵守这些准则，并通过他们提供的完成增量使其透明。</li></ol><p>所有这三个承诺的存在都是为了坚持对有价值目标的承诺的经验主义。我们相信，这一变化使自治团队和专业人士之间的凝聚力如何通过对目标的承诺而不是对特定任务的承诺变得更加清晰。</p><h3 id="_4-更短-甚至更不规范" tabindex="-1">4. 更短，甚至更不规范…… <a class="header-anchor" href="#_4-更短-甚至更不规范" aria-label="Permalink to &quot;4. 更短，甚至更不规范……&quot;">​</a></h3><p>Scrum 框架就是这样，一个框架。它必然是不完整的，因为它不可能解释每一个上下文、每一个环境和每一个使用它的可能性。这与它所设计的复杂工作完美契合；在这里，专业人士也有权根据最适合他们的方式填写详细信息。从某种意义上说，Scrum 框架只是为经验方法设定了目标，并信任玩家的经验和创造力来决定如何最好地玩游戏。</p><blockquote><p>“Scrum 框架只为经验方法设定了目标，并信任玩家的经验和创造力来决定如何最好地玩游戏。”</p></blockquote><p>如果您查看早期的 Scrum 指南迭代，很容易注意到这些年来 Scrum 指南如何变得越来越不规范。旧版本推荐了具体的实践，比如燃尽图、在每日 Scrum 期间提出的具体问题，以及让 Scrum Master 促进每日 Scrum 的实践。我们了解到，这些做法并不总是有用的。因此，更新后的 Scrum 指南延续了不那么规范的趋势。甚至不再提及在每日站会期间要问的三个问题，不再要求 Sprint 回顾中的改进数量应该最终在 Sprint Backlog 中，并且整体语言已经软化以创建为本地解决方案提供更多空间。</p><p>这些变化强调了 Scrum 的外观会因使用地点的不同而有所不同。适用于软件团队的方法，可能不适用于使用 Scrum 进行科学研究或组织变革的团队。这太棒了！我们看到这种从特定情况中越来越抽象的一个潜在缺点是，仅阅读 Scrum 指南并不能回答所有这些实际问题。虽然我们完全同意不应该这样做，但它要求我们——作为 Scrum 实践者社区——站出来支持和帮助我们的同行找到最适合他们的方法。我们将<a href="http://www.liberatingstructures.com" target="_blank" rel="noreferrer">Liberating Structures</a>广泛传播，作为帮助团队探索、发明和确定适合他们的方法的一种方式。</p><h3 id="其他变化" tabindex="-1">其他变化 <a class="header-anchor" href="#其他变化" aria-label="Permalink to &quot;其他变化&quot;">​</a></h3><p>除了我们解决的四个更大的变化，以及它们揭示了 Scrum 的重要性之外，还有其他值得一提的变化：</p><ul><li>Scrum 指南不再使用“自组织 Scrum 团队”，而是使用“自管理 Scrum 团队”来获取团队在复杂环境中有效工作所需的高度自治。巧合的是，这与我们在《<a href="https://zombiescrum.org" target="_blank" rel="noreferrer">僵尸 Scrum 生存指南》</a>一书中提出的建议相同，当我们分析自组织和自我管理是不同的事物时，Scrum 指南应该使用“自我管理”来代替。</li><li>Scrum 指南现在明确指出，Scrum 团队可以在 Sprint 期间交付一个或多个增量。在 Sprint 中，在完成 Product Backlog 项目时会创建一个增量。如果可能并且产品负责人希望，每个增量都可以在 Sprint 结束之前发布给利益相关者。</li><li>Scrum 指南用简单的“开发人员”取代了“开发团队”一词。这消除了 Scrum 团队中存在“另一个”团队的想法。对于 Scrum 指南，Scrum 团队中为实现 Sprint 目标做出贡献的每个人都被视为“开发人员”，无论他们的职位和技能如何。这进一步强调了 Scrum 是关于责任的，而不是职位或角色。</li><li>Scrum 指南现在强调 Sprint 计划的第一步是首先讨论 Sprint 为何有价值（对利益相关者）。当目的明确时，将进行工作选择以使其成为可能，然后对最初几天的工作进行分解。这进一步强调了 Scrum 是关于有价值的结果。</li><li>Scrum 指南不再将“会议”一词与 Scrum 事件结合使用。尽管各种 Scrum 活动可以采取正式会议的形式，但您可以按照最适合您的方式进行。在许多情况下，十几个人围坐在一张会议桌旁的传统会议可能不是最好的方式。</li><li>Scrum 指南中不再使用“仆人式领导”，而只使用“领导力”。这里的理由是“仆人式领导”是 Scrum Master 用来支持他们的团队和组织的一种特殊实践。虽然我们理解其中的原因，但如果说实话，我们并不完全同意这种变化。我们不同意“仆人式领导”仅仅是一种实践。相反，它是一种领导哲学，深深植根于将他人置于可以领导的位置。我们担心“领导力”太容易用传统的领导观点来解释：直接、告诉别人该做什么、指挥和控制。</li></ul><h3 id="帮助人员和团队解决复杂问题的框架" tabindex="-1">帮助人员和团队解决复杂问题的框架 <a class="header-anchor" href="#帮助人员和团队解决复杂问题的框架" aria-label="Permalink to &quot;帮助人员和团队解决复杂问题的框架&quot;">​</a></h3><p>“Scrum 仍然是 Scrum”是 Scrum.org 中反复出现的信息。如果有的话，对 Scrum 指南的更改旨在更清楚地说明 Scrum 什么是重要的，什么不是。虽然对 Scrum 指南中的单个单词和短语进行深入的（几乎是神学的）辩论可能很诱人，但提醒自己 Scrum 框架的目的是件好事。它的存在是为了<em>帮助</em>人们和团队解决复杂的问题。而且由于这些问题及其解决方案往往是高度不可预测的，因此它们最好以小的增量步骤朝着一个清晰而有价值的目标工作，使用每个增量来检查它们是否仍在朝着正确的方向前进。就是这样，真的。新的 Scrum 指南比早期的迭代更能体现这一点。</p><p>然而，尽管发生了所有变化，但新的 Scrum 指南并不能神奇地解决所有这些有缺陷的实现。一个主要的挑战仍然是许多人从不费心去阅读 Scrum 指南，或者努力去理解它的目的。从那里，很容易进入 Zombie Scrum。因此，这个新的 Scrum 指南向我们——作为一个社区——提出了一个可爱的挑战，即寻找新颖和创造性的方式将信息传播给那些不会自己去寻找它的人。让我们共同努力，将这一信息传达给我们的经理、客户和利益相关者！</p>',39)]))}const b=c(s,[["render",o]]);export{k as __pageData,b as default};
