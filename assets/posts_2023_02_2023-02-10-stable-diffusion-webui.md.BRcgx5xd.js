import{_ as l,a as s,af as a,o as e}from"./chunks/framework.C87LdZyP.js";const t="/assets/preview.CSMLDP3i.png",g=JSON.parse('{"title":"Stable Diffusion Webui 介绍","description":"","frontmatter":{"title":"Stable Diffusion Webui 介绍","date":"2023-02-10T00:00:00.000Z","tags":["ai","ai-tools"],"category":["其它"]},"headers":[],"relativePath":"posts/2023/02/2023-02-10-stable-diffusion-webui.md","filePath":"posts/2023/02/2023-02-10-stable-diffusion-webui.md","lastUpdated":1718173059000}'),n={name:"posts/2023/02/2023-02-10-stable-diffusion-webui.md"};function o(h,i,p,r,d,u){return e(),s("div",null,i[0]||(i[0]=[a('<p><img src="'+t+`" alt="preview.png"></p><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li>原始 txt2img 和 img2img 模式</li><li>一键安装并运行脚本（但您仍然必须安装 python 和 git）</li><li>外涂</li><li>修复</li><li>彩色素描</li><li>提示矩阵</li><li>稳定的扩散高档</li><li>注意，指定模型应更注意的文本部分 <ul><li>一个男人在 - 会更关注燕尾服((tuxedo))</li><li>A 中的男人 - 替代语法(tuxedo:1.21)</li><li>选择文本并按 OR 自动调整对所选文本的注意力（匿名用户提供的代码）Ctrl+UpCtrl+Down</li></ul></li><li>环回，多次运行 img2img 处理</li><li>X/Y/Z 图，一种绘制具有不同参数的图像三维图的方法</li><li>文本反转 <ul><li>拥有任意数量的嵌入，并使用您喜欢的任何名称</li><li>使用多个嵌入，每个令牌具有不同数量的向量</li><li>适用于半精度浮点数</li><li>在 8GB 上训练嵌入（也有 6GB 工作的报告）</li></ul></li><li>附加选项卡包含： <ul><li>GFPGAN，修复人脸的神经网络</li><li>CodeFormer，面部恢复工具作为GFPGAN的替代品</li><li>RealESRGAN，神经网络升频器</li><li>ESRGAN，具有许多第三方模型的神经网络升频器</li><li>SwinIR和Swin2SR（见这里），神经网络升频器</li><li>LDSR，潜在扩散超分辨率放大</li></ul></li><li>调整宽高比选项</li><li>取样方法选择 <ul><li>调整采样器η值（噪声倍增器）</li><li>更高级的噪音设置选项</li></ul></li><li>随时中断处理</li><li>4GB视频卡支持（也报告2GB工作）</li><li>批次的正确种子</li><li>实时提示令牌长度验证</li><li>生成参数</li><li>用于生成图像的参数与该图像一起保存</li><li>在 PNG 块中表示 PNG，在 EXIF 中表示 JPEG</li><li>可以将图像拖动到 PNG 信息选项卡以恢复生成参数并自动将其复制到 UI 中</li><li>可以在设置中禁用</li><li>将图像/文本参数拖放到提示框</li><li>读取“生成参数”按钮，将提示框中的参数加载到 UI</li><li>“设置”页</li><li>从 UI 运行任意 python 代码（必须运行才能启用）--allow-code</li><li>大多数 UI 元素的鼠标悬停提示</li><li>可以通过文本配置更改UI元素的默认值/混合/最大/步长值</li><li>平铺支持，用于创建可以像纹理一样平铺的图像的复选框</li><li>进度条和实时图像生成预览 <ul><li>可以使用单独的神经网络生成预览，几乎不需要VRAM或计算</li></ul></li><li>否定提示，一个额外的文本字段，允许您列出您不想在生成的图像中看到的内容</li><li>样式，一种保存部分提示并在以后通过下拉列表轻松应用它们的方法</li><li>变体，一种生成相同图像但差异很小的方法</li><li>种子大小调整，一种生成相同图像但分辨率略有不同的方法</li><li>CLIP询问器，一个试图从图像中猜测提示的按钮</li><li>提示编辑，一种改变提示中一代的方法，比如开始制作西瓜并中途切换到动漫女孩</li><li>批处理，使用 img2img 处理一组文件</li><li>Img2img 交叉注意力控制的反向欧拉方法</li><li>高分辨率修复，一种方便的选项，只需单击一下即可生成高分辨率图片，而不会产生通常的失真</li><li>动态重新加载检查点</li><li>检查点合并，一个选项卡，允许您将最多 3 个检查点合并为一个</li><li>具有来自社区的许多扩展的自定义脚本</li><li>可组合扩散，一种同时使用多个提示的方法</li><li>使用大写字母分隔提示AND</li><li>还支持提示的权重：a cat :1.2 AND a dog AND a penguin :2.2</li><li>提示没有令牌限制（原始稳定扩散允许您使用最多 75 个令牌）</li><li>深度丹布鲁集成，为动漫提示创建丹布鲁风格标签</li><li>Xformers，选择卡的主要速度提高：（添加到命令行参数）--xformers</li><li>通过扩展：历史记录选项卡：在UI中方便地查看，定向和删除图像</li><li>永久生成选项</li><li>“训练”选项卡 <ul><li>超网络和嵌入选项</li><li>预处理图像：裁剪、镜像、使用 BLIP 或 deepdanbooru 自动标记（用于动漫）</li></ul></li><li>剪辑跳过</li><li>超网络</li><li>Loras（与Hypernetworks相同，但更漂亮）</li><li>一个备用 UI，您可以在其中选择将哪些嵌入、超网络或 Loras 添加到您的提示中，并带有预览</li><li>可以从设置屏幕选择加载不同的VAE</li><li>进度条中的估计完成时间</li><li>应用程序接口</li><li>支持RunwayML的专用修复模型</li><li>通过扩展：美学渐变，一种通过使用剪辑图像嵌入（<a href="https://github.com/vicgalle/stable-diffusion-aesthetic-gradients" target="_blank" rel="noreferrer">https://github.com/vicgalle/stable-diffusion-aesthetic-gradients</a> 的实现来生成具有特定美学的图像的方法)</li><li>稳定的扩散 2.0 支持 - 有关说明，请参见 wiki</li><li>Alt-扩散支持 - 有关说明，请参阅维基</li><li>现在没有任何坏信！</li><li>以安全张量格式加载检查点</li><li>放宽分辨率限制：生成的图像的支配必须是 8 的倍数而不是 64</li><li>现在有了许可证！</li><li>从设置屏幕对 UI 中的元素重新排序</li></ul><h2 id="macos-上安装" tabindex="-1">MacOS 上安装 <a class="header-anchor" href="#macos-上安装" aria-label="Permalink to &quot;MacOS 上安装&quot;">​</a></h2><h3 id="新安装" tabindex="-1">新安装 <a class="header-anchor" href="#新安装" aria-label="Permalink to &quot;新安装&quot;">​</a></h3><ol><li>安装 <code>Homebrew</code></li><li>安装依赖：<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> protobuf</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rust</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> python@3.10</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> wget</span></span></code></pre></div></li><li>克隆 Web UI 仓库</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/AUTOMATIC1111/stable-diffusion-webui</span></span></code></pre></div><ol start="4"><li><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon#downloading-stable-diffusion-models" target="_blank" rel="noreferrer">下载 Stable Diffusion 模型</a> 放到 <code>stable-diffusion-webui/models/Stable-diffusion</code> 目录下</li><li>进入目录，启动 Web UI 应用。将使用 venv 创建和激活 Python 虚拟环境，任何剩余的缺失依赖项将自动下载并安装。</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stable-diffusion-webui</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">./webui.sh</span></span></code></pre></div><ol start="6"><li>更新并重新启动</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> pull</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">./webui.sh</span></span></code></pre></div><hr><ul><li><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui" target="_blank" rel="noreferrer">AUTOMATIC1111/stable-diffusion-webui</a></li><li><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Features" target="_blank" rel="noreferrer">Stable Diffusion WebUI 特性</a></li></ul>`,13)]))}const b=l(n,[["render",o]]);export{g as __pageData,b as default};
